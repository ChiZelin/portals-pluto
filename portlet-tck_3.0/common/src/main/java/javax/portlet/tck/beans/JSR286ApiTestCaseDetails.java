/*  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

package javax.portlet.tck.beans;

import java.util.HashMap;
import java.util.Map;

/**
 * Defines constants for the test case names and test case details 
 * for the JSR 286 API compatibility tests.
 * 
 * Note that the backing map is static and not threadsafe. Operations
 * that change the map such as put, remove, etc., should not be used
 * in portlets.
 * 
 * @author nick
 */
public class JSR286ApiTestCaseDetails extends TestCaseDetails {

   public final static String V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONFILTER = "V2FilterTests_FilterChain_ActionFilter_invokeActionFilter";
   public final static String V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONFILTER2 = "V2FilterTests_FilterChain_ActionFilter_invokeActionFilter2";
   public final static String V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONEXCEPTION = "V2FilterTests_FilterChain_ActionFilter_invokeActionException";
   public final static String V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONEXCEPTION2 = "V2FilterTests_FilterChain_ActionFilter_invokeActionException2";
   public final static String V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTFILTER = "V2FilterTests_FilterChain_EventFilter_invokeEventFilter";
   public final static String V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTFILTER2 = "V2FilterTests_FilterChain_EventFilter_invokeEventFilter2";
   public final static String V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTEXCEPTION = "V2FilterTests_FilterChain_EventFilter_invokeEventException";
   public final static String V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTEXCEPTION2 = "V2FilterTests_FilterChain_EventFilter_invokeEventException2";
   public final static String V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDERFILTER = "V2FilterTests_FilterChain_RenderFilter_invokeRenderFilter";
   public final static String V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDERFILTER2 = "V2FilterTests_FilterChain_RenderFilter_invokeRenderFilter2";
   public final static String V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDEREXCEPTION = "V2FilterTests_FilterChain_RenderFilter_invokeRenderException";
   public final static String V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDEREXCEPTION2 = "V2FilterTests_FilterChain_RenderFilter_invokeRenderException2";
   public final static String V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEFILTER = "V2FilterTests_FilterChain_ResourceFilter_invokeResourceFilter";
   public final static String V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEFILTER2 = "V2FilterTests_FilterChain_ResourceFilter_invokeResourceFilter2";
   public final static String V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEEXCEPTION = "V2FilterTests_FilterChain_ResourceFilter_invokeResourceException";
   public final static String V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEEXCEPTION2 = "V2FilterTests_FilterChain_ResourceFilter_invokeResourceException2";
   public final static String V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETFILTERNAME = "V2FilterTests_FilterConfig_RenderFilter_getFilterName";
   public final static String V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETPORTLETCONTEXT = "V2FilterTests_FilterConfig_RenderFilter_getPortletContext";
   public final static String V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETER1 = "V2FilterTests_FilterConfig_RenderFilter_getInitParameter1";
   public final static String V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETER2 = "V2FilterTests_FilterConfig_RenderFilter_getInitParameter2";
   public final static String V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETERNAMES1 = "V2FilterTests_FilterConfig_RenderFilter_getInitParameterNames1";
   public final static String V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETERNAMES2 = "V2FilterTests_FilterConfig_RenderFilter_getInitParameterNames2";
   public final static String V2FILTERTESTS_PORTLETFILTER_ACTIONFILTER_INITACTION1 = "V2FilterTests_PortletFilter_ActionFilter_initAction1";
   public final static String V2FILTERTESTS_PORTLETFILTER_ACTIONFILTER_INITACTION2 = "V2FilterTests_PortletFilter_ActionFilter_initAction2";
   public final static String V2FILTERTESTS_PORTLETFILTER_ACTIONFILTER_INITACTION3 = "V2FilterTests_PortletFilter_ActionFilter_initAction3";
   public final static String V2FILTERTESTS_PORTLETFILTER_EVENTFILTER_INITEVENT1 = "V2FilterTests_PortletFilter_EventFilter_initEvent1";
   public final static String V2FILTERTESTS_PORTLETFILTER_EVENTFILTER_INITEVENT2 = "V2FilterTests_PortletFilter_EventFilter_initEvent2";
   public final static String V2FILTERTESTS_PORTLETFILTER_EVENTFILTER_INITEVENT3 = "V2FilterTests_PortletFilter_EventFilter_initEvent3";
   public final static String V2FILTERTESTS_PORTLETFILTER_RENDERFILTER_INITRENDER1 = "V2FilterTests_PortletFilter_RenderFilter_initRender1";
   public final static String V2FILTERTESTS_PORTLETFILTER_RENDERFILTER_INITRENDER2 = "V2FilterTests_PortletFilter_RenderFilter_initRender2";
   public final static String V2FILTERTESTS_PORTLETFILTER_RENDERFILTER_INITRENDER3 = "V2FilterTests_PortletFilter_RenderFilter_initRender3";
   public final static String V2FILTERTESTS_PORTLETFILTER_RESOURCEFILTER_INITRESOURCE1 = "V2FilterTests_PortletFilter_ResourceFilter_initResource1";
   public final static String V2FILTERTESTS_PORTLETFILTER_RESOURCEFILTER_INITRESOURCE2 = "V2FilterTests_PortletFilter_ResourceFilter_initResource2";
   public final static String V2FILTERTESTS_PORTLETFILTER_RESOURCEFILTER_INITRESOURCE3 = "V2FilterTests_PortletFilter_ResourceFilter_initResource3";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_CANBECONFIGURED1 = "V2FilterTests_ActionFilter_ActionFilter_canBeConfigured1";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_CANBECONFIGURED2 = "V2FilterTests_ActionFilter_ActionFilter_canBeConfigured2";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERISCALLED = "V2FilterTests_ActionFilter_ActionFilter_doFilterIsCalled";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERPROCESSACTION1 = "V2FilterTests_ActionFilter_ActionFilter_doFilterProcessAction1";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERPROCESSACTION2 = "V2FilterTests_ActionFilter_ActionFilter_doFilterProcessAction2";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERBLOCK = "V2FilterTests_ActionFilter_ActionFilter_doFilterBlock";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTEREXCEPTION1 = "V2FilterTests_ActionFilter_ActionFilter_doFilterException1";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTEREXCEPTION2 = "V2FilterTests_ActionFilter_ActionFilter_doFilterException2";
   public final static String V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTEREXAMINE = "V2FilterTests_ActionFilter_ActionFilter_doFilterExamine";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_CANBECONFIGURED1 = "V2FilterTests_EventFilter_EventFilter_canBeConfigured1";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_CANBECONFIGURED2 = "V2FilterTests_EventFilter_EventFilter_canBeConfigured2";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERISCALLED = "V2FilterTests_EventFilter_EventFilter_doFilterIsCalled";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERPROCESSEVENT1 = "V2FilterTests_EventFilter_EventFilter_doFilterProcessEvent1";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERPROCESSEVENT2 = "V2FilterTests_EventFilter_EventFilter_doFilterProcessEvent2";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERBLOCK = "V2FilterTests_EventFilter_EventFilter_doFilterBlock";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTEREXCEPTION1 = "V2FilterTests_EventFilter_EventFilter_doFilterException1";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTEREXCEPTION2 = "V2FilterTests_EventFilter_EventFilter_doFilterException2";
   public final static String V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTEREXAMINE = "V2FilterTests_EventFilter_EventFilter_doFilterExamine";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_CANBECONFIGURED1 = "V2FilterTests_RenderFilter_RenderFilter_canBeConfigured1";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_CANBECONFIGURED2 = "V2FilterTests_RenderFilter_RenderFilter_canBeConfigured2";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERISCALLED = "V2FilterTests_RenderFilter_RenderFilter_doFilterIsCalled";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERPROCESSRENDER1 = "V2FilterTests_RenderFilter_RenderFilter_doFilterProcessRender1";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERPROCESSRENDER2 = "V2FilterTests_RenderFilter_RenderFilter_doFilterProcessRender2";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERBLOCK = "V2FilterTests_RenderFilter_RenderFilter_doFilterBlock";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTEREXCEPTION1 = "V2FilterTests_RenderFilter_RenderFilter_doFilterException1";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTEREXCEPTION2 = "V2FilterTests_RenderFilter_RenderFilter_doFilterException2";
   public final static String V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTEREXAMINE = "V2FilterTests_RenderFilter_RenderFilter_doFilterExamine";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_CANBECONFIGURED1 = "V2FilterTests_ResourceFilter_ResourceFilter_canBeConfigured1";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_CANBECONFIGURED2 = "V2FilterTests_ResourceFilter_ResourceFilter_canBeConfigured2";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERISCALLED = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterIsCalled";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERPROCESSRESOURCE1 = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterProcessResource1";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERPROCESSRESOURCE2 = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterProcessResource2";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERBLOCK = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterBlock";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTEREXCEPTION1 = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterException1";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTEREXCEPTION2 = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterException2";
   public final static String V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTEREXAMINE = "V2FilterTests_ResourceFilter_ResourceFilter_doFilterExamine";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETCHARACTERENCODING = "V2WrapperTests_ActionRequestWrapper_Render_getCharacterEncoding";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETCONTENTLENGTH = "V2WrapperTests_ActionRequestWrapper_Render_getContentLength";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETCONTENTTYPE = "V2WrapperTests_ActionRequestWrapper_Render_getContentType";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETPORTLETINPUTSTREAM = "V2WrapperTests_ActionRequestWrapper_Render_getPortletInputStream";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETREADER = "V2WrapperTests_ActionRequestWrapper_Render_getReader";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_SETCHARACTERENCODING = "V2WrapperTests_ActionRequestWrapper_Render_setCharacterEncoding";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETREQUEST = "V2WrapperTests_ActionRequestWrapper_Render_getRequest";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_SETREQUEST = "V2WrapperTests_ActionRequestWrapper_Render_setRequest";
   public final static String V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETMETHOD = "V2WrapperTests_ActionRequestWrapper_Render_getMethod";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SENDREDIRECTA = "V2WrapperTests_ActionResponseWrapper_Render_sendRedirectA";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SENDREDIRECTB = "V2WrapperTests_ActionResponseWrapper_Render_sendRedirectB";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETEVENTA = "V2WrapperTests_ActionResponseWrapper_Render_setEventA";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETEVENTB = "V2WrapperTests_ActionResponseWrapper_Render_setEventB";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETPORTLETMODE = "V2WrapperTests_ActionResponseWrapper_Render_setPortletMode";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERA = "V2WrapperTests_ActionResponseWrapper_Render_setRenderParameterA";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERB = "V2WrapperTests_ActionResponseWrapper_Render_setRenderParameterB";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERS = "V2WrapperTests_ActionResponseWrapper_Render_setRenderParameters";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETWINDOWSTATE = "V2WrapperTests_ActionResponseWrapper_Render_setWindowState";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETRESPONSE = "V2WrapperTests_ActionResponseWrapper_Render_getResponse";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRESPONSE = "V2WrapperTests_ActionResponseWrapper_Render_setResponse";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETPORTLETMODE = "V2WrapperTests_ActionResponseWrapper_Render_getPortletMode";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP1 = "V2WrapperTests_ActionResponseWrapper_Render_getRenderParameterMap1";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP2 = "V2WrapperTests_ActionResponseWrapper_Render_getRenderParameterMap2";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETWINDOWSTATE = "V2WrapperTests_ActionResponseWrapper_Render_getWindowState";
   public final static String V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_REMOVEPUBLICRENDERPARAMETER = "V2WrapperTests_ActionResponseWrapper_Render_removePublicRenderParameter";
   public final static String V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETREQUEST = "V2WrapperTests_EventRequestWrapper_Render_getRequest";
   public final static String V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_SETREQUEST = "V2WrapperTests_EventRequestWrapper_Render_setRequest";
   public final static String V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETEVENT1 = "V2WrapperTests_EventRequestWrapper_Render_getEvent1";
   public final static String V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETEVENT2 = "V2WrapperTests_EventRequestWrapper_Render_getEvent2";
   public final static String V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETMETHOD = "V2WrapperTests_EventRequestWrapper_Render_getMethod";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETEVENTA = "V2WrapperTests_EventResponseWrapper_Render_setEventA";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETEVENTB = "V2WrapperTests_EventResponseWrapper_Render_setEventB";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETPORTLETMODE = "V2WrapperTests_EventResponseWrapper_Render_setPortletMode";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERA = "V2WrapperTests_EventResponseWrapper_Render_setRenderParameterA";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERB = "V2WrapperTests_EventResponseWrapper_Render_setRenderParameterB";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERSA = "V2WrapperTests_EventResponseWrapper_Render_setRenderParametersA";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERSB = "V2WrapperTests_EventResponseWrapper_Render_setRenderParametersB";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETWINDOWSTATE = "V2WrapperTests_EventResponseWrapper_Render_setWindowState";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETRESPONSE = "V2WrapperTests_EventResponseWrapper_Render_getResponse";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRESPONSE = "V2WrapperTests_EventResponseWrapper_Render_setResponse";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETPORTLETMODE = "V2WrapperTests_EventResponseWrapper_Render_getPortletMode";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP1 = "V2WrapperTests_EventResponseWrapper_Render_getRenderParameterMap1";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP2 = "V2WrapperTests_EventResponseWrapper_Render_getRenderParameterMap2";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETWINDOWSTATE = "V2WrapperTests_EventResponseWrapper_Render_getWindowState";
   public final static String V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_REMOVEPUBLICRENDERPARAMETER = "V2WrapperTests_EventResponseWrapper_Render_removePublicRenderParameter";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETATTRIBUTE = "V2WrapperTests_PortletRequestWrapper_Render_getAttribute";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETATTRIBUTENAMES = "V2WrapperTests_PortletRequestWrapper_Render_getAttributeNames";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETAUTHTYPE = "V2WrapperTests_PortletRequestWrapper_Render_getAuthType";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETCONTEXTPATH = "V2WrapperTests_PortletRequestWrapper_Render_getContextPath";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETCOOKIES = "V2WrapperTests_PortletRequestWrapper_Render_getCookies";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETLOCALE = "V2WrapperTests_PortletRequestWrapper_Render_getLocale";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETLOCALES = "V2WrapperTests_PortletRequestWrapper_Render_getLocales";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETER = "V2WrapperTests_PortletRequestWrapper_Render_getParameter";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETERMAP = "V2WrapperTests_PortletRequestWrapper_Render_getParameterMap";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETERNAMES = "V2WrapperTests_PortletRequestWrapper_Render_getParameterNames";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETERVALUES = "V2WrapperTests_PortletRequestWrapper_Render_getParameterValues";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTALCONTEXT = "V2WrapperTests_PortletRequestWrapper_Render_getPortalContext";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTLETMODE = "V2WrapperTests_PortletRequestWrapper_Render_getPortletMode";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTLETSESSIONA = "V2WrapperTests_PortletRequestWrapper_Render_getPortletSessionA";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTLETSESSIONB = "V2WrapperTests_PortletRequestWrapper_Render_getPortletSessionB";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPREFERENCES = "V2WrapperTests_PortletRequestWrapper_Render_getPreferences";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPROPERTIES = "V2WrapperTests_PortletRequestWrapper_Render_getProperties";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPROPERTY = "V2WrapperTests_PortletRequestWrapper_Render_getProperty";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPROPERTYNAMES = "V2WrapperTests_PortletRequestWrapper_Render_getPropertyNames";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETREMOTEUSER = "V2WrapperTests_PortletRequestWrapper_Render_getRemoteUser";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETREQUESTEDSESSIONID = "V2WrapperTests_PortletRequestWrapper_Render_getRequestedSessionId";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETRESPONSECONTENTTYPE = "V2WrapperTests_PortletRequestWrapper_Render_getResponseContentType";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETRESPONSECONTENTTYPES = "V2WrapperTests_PortletRequestWrapper_Render_getResponseContentTypes";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETSCHEME = "V2WrapperTests_PortletRequestWrapper_Render_getScheme";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETSERVERNAME = "V2WrapperTests_PortletRequestWrapper_Render_getServerName";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETSERVERPORT = "V2WrapperTests_PortletRequestWrapper_Render_getServerPort";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETUSERPRINCIPAL = "V2WrapperTests_PortletRequestWrapper_Render_getUserPrincipal";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETWINDOWID = "V2WrapperTests_PortletRequestWrapper_Render_getWindowID";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETWINDOWSTATE = "V2WrapperTests_PortletRequestWrapper_Render_getWindowState";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISPORTLETMODEALLOWED = "V2WrapperTests_PortletRequestWrapper_Render_isPortletModeAllowed";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISREQUESTEDSESSIONIDVALID = "V2WrapperTests_PortletRequestWrapper_Render_isRequestedSessionIdValid";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISSECURE = "V2WrapperTests_PortletRequestWrapper_Render_isSecure";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISUSERINROLE = "V2WrapperTests_PortletRequestWrapper_Render_isUserInRole";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISWINDOWSTATEALLOWED = "V2WrapperTests_PortletRequestWrapper_Render_isWindowStateAllowed";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_REMOVEATTRIBUTE = "V2WrapperTests_PortletRequestWrapper_Render_removeAttribute";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_SETATTRIBUTE = "V2WrapperTests_PortletRequestWrapper_Render_setAttribute";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETREQUEST = "V2WrapperTests_PortletRequestWrapper_Render_getRequest";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_SETREQUEST = "V2WrapperTests_PortletRequestWrapper_Render_setRequest";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPRIVATEPARAMETERMAP = "V2WrapperTests_PortletRequestWrapper_Render_getPrivateParameterMap";
   public final static String V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPUBLICPARAMETERMAP = "V2WrapperTests_PortletRequestWrapper_Render_getPublicParameterMap";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ADDPROPERTYA = "V2WrapperTests_PortletResponseWrapper_Render_addPropertyA";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ADDPROPERTYB = "V2WrapperTests_PortletResponseWrapper_Render_addPropertyB";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ADDPROPERTYC = "V2WrapperTests_PortletResponseWrapper_Render_addPropertyC";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ENCODEURL = "V2WrapperTests_PortletResponseWrapper_Render_encodeURL";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_GETNAMESPACE = "V2WrapperTests_PortletResponseWrapper_Render_getNamespace";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_SETPROPERTY = "V2WrapperTests_PortletResponseWrapper_Render_setProperty";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_GETRESPONSE = "V2WrapperTests_PortletResponseWrapper_Render_getResponse";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_SETRESPONSE = "V2WrapperTests_PortletResponseWrapper_Render_setResponse";
   public final static String V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_CREATEELEMENT = "V2WrapperTests_PortletResponseWrapper_Render_createElement";
   public final static String V2WRAPPERTESTS_RENDERREQUESTWRAPPER_RENDER_GETREQUEST = "V2WrapperTests_RenderRequestWrapper_Render_getRequest";
   public final static String V2WRAPPERTESTS_RENDERREQUESTWRAPPER_RENDER_SETREQUEST = "V2WrapperTests_RenderRequestWrapper_Render_setRequest";
   public final static String V2WRAPPERTESTS_RENDERREQUESTWRAPPER_RENDER_GETETAG = "V2WrapperTests_RenderRequestWrapper_Render_getETag";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_FLUSHBUFFER = "V2WrapperTests_RenderResponseWrapper_Render_flushBuffer";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETBUFFERSIZE = "V2WrapperTests_RenderResponseWrapper_Render_getBufferSize";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETCHARACTERENCODING = "V2WrapperTests_RenderResponseWrapper_Render_getCharacterEncoding";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETCONTENTTYPE = "V2WrapperTests_RenderResponseWrapper_Render_getContentType";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETLOCALE = "V2WrapperTests_RenderResponseWrapper_Render_getLocale";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETPORTLETOUTPUTSTREAM = "V2WrapperTests_RenderResponseWrapper_Render_getPortletOutputStream";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETWRITER = "V2WrapperTests_RenderResponseWrapper_Render_getWriter";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_ISCOMMITTED = "V2WrapperTests_RenderResponseWrapper_Render_isCommitted";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_RESET = "V2WrapperTests_RenderResponseWrapper_Render_reset";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_RESETBUFFER = "V2WrapperTests_RenderResponseWrapper_Render_resetBuffer";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETBUFFERSIZE = "V2WrapperTests_RenderResponseWrapper_Render_setBufferSize";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETCONTENTTYPE = "V2WrapperTests_RenderResponseWrapper_Render_setContentType";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETTITLE = "V2WrapperTests_RenderResponseWrapper_Render_setTitle";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETCACHECONTROL = "V2WrapperTests_RenderResponseWrapper_Render_getCacheControl";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETNEXTPOSSIBLEPORTLETMODES = "V2WrapperTests_RenderResponseWrapper_Render_setNextPossiblePortletModes";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETRESPONSE = "V2WrapperTests_RenderResponseWrapper_Render_getResponse";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETRESPONSE = "V2WrapperTests_RenderResponseWrapper_Render_setResponse";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_CREATEACTIONURL = "V2WrapperTests_RenderResponseWrapper_Render_createActionURL";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_CREATERENDERURL = "V2WrapperTests_RenderResponseWrapper_Render_createRenderURL";
   public final static String V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_CREATERESOURCEURL = "V2WrapperTests_RenderResponseWrapper_Render_createResourceURL";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETPORTLETINPUTSTREAM = "V2WrapperTests_ResourceRequestWrapper_Render_getPortletInputStream";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETREADER = "V2WrapperTests_ResourceRequestWrapper_Render_getReader";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_SETCHARACTERENCODING = "V2WrapperTests_ResourceRequestWrapper_Render_setCharacterEncoding";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETREQUEST = "V2WrapperTests_ResourceRequestWrapper_Render_getRequest";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_SETREQUEST = "V2WrapperTests_ResourceRequestWrapper_Render_setRequest";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCHARACTERENCODING = "V2WrapperTests_ResourceRequestWrapper_Render_getCharacterEncoding";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCONTENTLENGTH = "V2WrapperTests_ResourceRequestWrapper_Render_getContentLength";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCONTENTTYPE = "V2WrapperTests_ResourceRequestWrapper_Render_getContentType";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETETAG = "V2WrapperTests_ResourceRequestWrapper_Render_getETag";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETMETHOD = "V2WrapperTests_ResourceRequestWrapper_Render_getMethod";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETRESOURCEID = "V2WrapperTests_ResourceRequestWrapper_Render_getResourceID";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETPRIVATERENDERPARAMETERMAP = "V2WrapperTests_ResourceRequestWrapper_Render_getPrivateRenderParameterMap";
   public final static String V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCACHEABILITY = "V2WrapperTests_ResourceRequestWrapper_Render_getCacheability";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_FLUSHBUFFER = "V2WrapperTests_ResourceResponseWrapper_Render_flushBuffer";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETBUFFERSIZE = "V2WrapperTests_ResourceResponseWrapper_Render_getBufferSize";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETCHARACTERENCODING = "V2WrapperTests_ResourceResponseWrapper_Render_getCharacterEncoding";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETCONTENTTYPE = "V2WrapperTests_ResourceResponseWrapper_Render_getContentType";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETLOCALE = "V2WrapperTests_ResourceResponseWrapper_Render_getLocale";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETPORTLETOUTPUTSTREAM = "V2WrapperTests_ResourceResponseWrapper_Render_getPortletOutputStream";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETWRITER = "V2WrapperTests_ResourceResponseWrapper_Render_getWriter";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_ISCOMMITTED = "V2WrapperTests_ResourceResponseWrapper_Render_isCommitted";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_RESET = "V2WrapperTests_ResourceResponseWrapper_Render_reset";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_RESETBUFFER = "V2WrapperTests_ResourceResponseWrapper_Render_resetBuffer";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETBUFFERSIZE = "V2WrapperTests_ResourceResponseWrapper_Render_setBufferSize";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETCONTENTTYPE = "V2WrapperTests_ResourceResponseWrapper_Render_setContentType";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETCACHECONTROL = "V2WrapperTests_ResourceResponseWrapper_Render_getCacheControl";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETCHARACTERENCODING = "V2WrapperTests_ResourceResponseWrapper_Render_setCharacterEncoding";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETLOCALE = "V2WrapperTests_ResourceResponseWrapper_Render_setLocale";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETCONTENTLENGTH = "V2WrapperTests_ResourceResponseWrapper_Render_setContentLength";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETRESPONSE = "V2WrapperTests_ResourceResponseWrapper_Render_getResponse";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETRESPONSE = "V2WrapperTests_ResourceResponseWrapper_Render_setResponse";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_CREATEACTIONURL = "V2WrapperTests_ResourceResponseWrapper_Render_createActionURL";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_CREATERENDERURL = "V2WrapperTests_ResourceResponseWrapper_Render_createRenderURL";
   public final static String V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_CREATERESOURCEURL = "V2WrapperTests_ResourceResponseWrapper_Render_createResourceURL";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDUSER_INFO = "V2RequestTests_PortletRequest_Render_fieldUSER_INFO";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDCCPP_PROFILE = "V2RequestTests_PortletRequest_Render_fieldCCPP_PROFILE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDBASIC_AUTH = "V2RequestTests_PortletRequest_Render_fieldBASIC_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDFORM_AUTH = "V2RequestTests_PortletRequest_Render_fieldFORM_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDCLIENT_CERT_AUTH = "V2RequestTests_PortletRequest_Render_fieldCLIENT_CERT_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDDIGEST_AUTH = "V2RequestTests_PortletRequest_Render_fieldDIGEST_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDACTION_PHASE = "V2RequestTests_PortletRequest_Render_fieldACTION_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDEVENT_PHASE = "V2RequestTests_PortletRequest_Render_fieldEVENT_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_PHASE = "V2RequestTests_PortletRequest_Render_fieldRENDER_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRESOURCE_PHASE = "V2RequestTests_PortletRequest_Render_fieldRESOURCE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDLIFECYCLE_PHASE = "V2RequestTests_PortletRequest_Render_fieldLIFECYCLE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_PART = "V2RequestTests_PortletRequest_Render_fieldRENDER_PART";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_HEADERS = "V2RequestTests_PortletRequest_Render_fieldRENDER_HEADERS";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_MARKUP = "V2RequestTests_PortletRequest_Render_fieldRENDER_MARKUP";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDACTION_SCOPE_ID = "V2RequestTests_PortletRequest_Render_fieldACTION_SCOPE_ID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISWINDOWSTATEALLOWED1 = "V2RequestTests_PortletRequest_Render_isWindowStateAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISWINDOWSTATEALLOWED2 = "V2RequestTests_PortletRequest_Render_isWindowStateAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISPORTLETMODEALLOWED1 = "V2RequestTests_PortletRequest_Render_isPortletModeAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISPORTLETMODEALLOWED2 = "V2RequestTests_PortletRequest_Render_isPortletModeAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETMODE = "V2RequestTests_PortletRequest_Render_getPortletMode";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETWINDOWSTATE = "V2RequestTests_PortletRequest_Render_getWindowState";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPREFERENCES = "V2RequestTests_PortletRequest_Render_getPreferences";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONA1 = "V2RequestTests_PortletRequest_Render_getPortletSessionA1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONA2 = "V2RequestTests_PortletRequest_Render_getPortletSessionA2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB1 = "V2RequestTests_PortletRequest_Render_getPortletSessionB1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB2 = "V2RequestTests_PortletRequest_Render_getPortletSessionB2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB3 = "V2RequestTests_PortletRequest_Render_getPortletSessionB3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB4 = "V2RequestTests_PortletRequest_Render_getPortletSessionB4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTY1 = "V2RequestTests_PortletRequest_Render_getProperty1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTY2 = "V2RequestTests_PortletRequest_Render_getProperty2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTY3 = "V2RequestTests_PortletRequest_Render_getProperty3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTIES1 = "V2RequestTests_PortletRequest_Render_getProperties1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTIES2 = "V2RequestTests_PortletRequest_Render_getProperties2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTIES3 = "V2RequestTests_PortletRequest_Render_getProperties3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTYNAMES1 = "V2RequestTests_PortletRequest_Render_getPropertyNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTYNAMES2 = "V2RequestTests_PortletRequest_Render_getPropertyNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTALCONTEXT = "V2RequestTests_PortletRequest_Render_getPortalContext";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETAUTHTYPE1 = "V2RequestTests_PortletRequest_Render_getAuthType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETAUTHTYPE2 = "V2RequestTests_PortletRequest_Render_getAuthType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCONTEXTPATH1 = "V2RequestTests_PortletRequest_Render_getContextPath1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCONTEXTPATH2 = "V2RequestTests_PortletRequest_Render_getContextPath2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCONTEXTPATH3 = "V2RequestTests_PortletRequest_Render_getContextPath3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREMOTEUSER1 = "V2RequestTests_PortletRequest_Render_getRemoteUser1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREMOTEUSER2 = "V2RequestTests_PortletRequest_Render_getRemoteUser2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETUSERPRINCIPAL1 = "V2RequestTests_PortletRequest_Render_getUserPrincipal1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETUSERPRINCIPAL2 = "V2RequestTests_PortletRequest_Render_getUserPrincipal2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISUSERINROLE1 = "V2RequestTests_PortletRequest_Render_isUserInRole1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISUSERINROLE2 = "V2RequestTests_PortletRequest_Render_isUserInRole2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISUSERINROLE3 = "V2RequestTests_PortletRequest_Render_isUserInRole3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTE1 = "V2RequestTests_PortletRequest_Render_getAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTE2 = "V2RequestTests_PortletRequest_Render_getAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTE3 = "V2RequestTests_PortletRequest_Render_getAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTENAMES1 = "V2RequestTests_PortletRequest_Render_getAttributeNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTENAMES2 = "V2RequestTests_PortletRequest_Render_getAttributeNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER1 = "V2RequestTests_PortletRequest_Render_getParameter1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER2 = "V2RequestTests_PortletRequest_Render_getParameter2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER3 = "V2RequestTests_PortletRequest_Render_getParameter3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER4 = "V2RequestTests_PortletRequest_Render_getParameter4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER5 = "V2RequestTests_PortletRequest_Render_getParameter5";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERNAMES1 = "V2RequestTests_PortletRequest_Render_getParameterNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERNAMES2 = "V2RequestTests_PortletRequest_Render_getParameterNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES1 = "V2RequestTests_PortletRequest_Render_getParameterValues1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES2 = "V2RequestTests_PortletRequest_Render_getParameterValues2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES3 = "V2RequestTests_PortletRequest_Render_getParameterValues3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES4 = "V2RequestTests_PortletRequest_Render_getParameterValues4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERMAP1 = "V2RequestTests_PortletRequest_Render_getParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERMAP2 = "V2RequestTests_PortletRequest_Render_getParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERMAP3 = "V2RequestTests_PortletRequest_Render_getParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISSECURE1 = "V2RequestTests_PortletRequest_Render_isSecure1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISSECURE2 = "V2RequestTests_PortletRequest_Render_isSecure2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_SETATTRIBUTE1 = "V2RequestTests_PortletRequest_Render_setAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_SETATTRIBUTE2 = "V2RequestTests_PortletRequest_Render_setAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_SETATTRIBUTE3 = "V2RequestTests_PortletRequest_Render_setAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_REMOVEATTRIBUTE1 = "V2RequestTests_PortletRequest_Render_removeAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_REMOVEATTRIBUTE2 = "V2RequestTests_PortletRequest_Render_removeAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREQUESTEDSESSIONID1 = "V2RequestTests_PortletRequest_Render_getRequestedSessionId1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREQUESTEDSESSIONID2 = "V2RequestTests_PortletRequest_Render_getRequestedSessionId2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISREQUESTEDSESSIONIDVALID1 = "V2RequestTests_PortletRequest_Render_isRequestedSessionIdValid1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISREQUESTEDSESSIONIDVALID2 = "V2RequestTests_PortletRequest_Render_isRequestedSessionIdValid2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPE1 = "V2RequestTests_PortletRequest_Render_getResponseContentType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPE2 = "V2RequestTests_PortletRequest_Render_getResponseContentType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPES1 = "V2RequestTests_PortletRequest_Render_getResponseContentTypes1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPES2 = "V2RequestTests_PortletRequest_Render_getResponseContentTypes2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETLOCALE = "V2RequestTests_PortletRequest_Render_getLocale";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETLOCALES = "V2RequestTests_PortletRequest_Render_getLocales";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETSCHEME = "V2RequestTests_PortletRequest_Render_getScheme";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETSERVERNAME = "V2RequestTests_PortletRequest_Render_getServerName";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETSERVERPORT = "V2RequestTests_PortletRequest_Render_getServerPort";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETWINDOWID = "V2RequestTests_PortletRequest_Render_getWindowID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCOOKIES1 = "V2RequestTests_PortletRequest_Render_getCookies1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCOOKIES2 = "V2RequestTests_PortletRequest_Render_getCookies2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPRIVATEPARAMETERMAP1 = "V2RequestTests_PortletRequest_Render_getPrivateParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPRIVATEPARAMETERMAP2 = "V2RequestTests_PortletRequest_Render_getPrivateParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPRIVATEPARAMETERMAP3 = "V2RequestTests_PortletRequest_Render_getPrivateParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPUBLICPARAMETERMAP1 = "V2RequestTests_PortletRequest_Render_getPublicParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPUBLICPARAMETERMAP2 = "V2RequestTests_PortletRequest_Render_getPublicParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPUBLICPARAMETERMAP3 = "V2RequestTests_PortletRequest_Render_getPublicParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RENDER_EXISTS = "V2RequestTests_PortletRequest_Render_exists";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDUSER_INFO = "V2RequestTests_PortletRequest_Action_fieldUSER_INFO";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDCCPP_PROFILE = "V2RequestTests_PortletRequest_Action_fieldCCPP_PROFILE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDBASIC_AUTH = "V2RequestTests_PortletRequest_Action_fieldBASIC_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDFORM_AUTH = "V2RequestTests_PortletRequest_Action_fieldFORM_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDCLIENT_CERT_AUTH = "V2RequestTests_PortletRequest_Action_fieldCLIENT_CERT_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDDIGEST_AUTH = "V2RequestTests_PortletRequest_Action_fieldDIGEST_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDACTION_PHASE = "V2RequestTests_PortletRequest_Action_fieldACTION_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDEVENT_PHASE = "V2RequestTests_PortletRequest_Action_fieldEVENT_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_PHASE = "V2RequestTests_PortletRequest_Action_fieldRENDER_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRESOURCE_PHASE = "V2RequestTests_PortletRequest_Action_fieldRESOURCE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDLIFECYCLE_PHASE = "V2RequestTests_PortletRequest_Action_fieldLIFECYCLE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_PART = "V2RequestTests_PortletRequest_Action_fieldRENDER_PART";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_HEADERS = "V2RequestTests_PortletRequest_Action_fieldRENDER_HEADERS";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_MARKUP = "V2RequestTests_PortletRequest_Action_fieldRENDER_MARKUP";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDACTION_SCOPE_ID = "V2RequestTests_PortletRequest_Action_fieldACTION_SCOPE_ID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISWINDOWSTATEALLOWED1 = "V2RequestTests_PortletRequest_Action_isWindowStateAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISWINDOWSTATEALLOWED2 = "V2RequestTests_PortletRequest_Action_isWindowStateAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISPORTLETMODEALLOWED1 = "V2RequestTests_PortletRequest_Action_isPortletModeAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISPORTLETMODEALLOWED2 = "V2RequestTests_PortletRequest_Action_isPortletModeAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETMODE = "V2RequestTests_PortletRequest_Action_getPortletMode";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETWINDOWSTATE = "V2RequestTests_PortletRequest_Action_getWindowState";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPREFERENCES = "V2RequestTests_PortletRequest_Action_getPreferences";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONA1 = "V2RequestTests_PortletRequest_Action_getPortletSessionA1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONA2 = "V2RequestTests_PortletRequest_Action_getPortletSessionA2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB1 = "V2RequestTests_PortletRequest_Action_getPortletSessionB1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB2 = "V2RequestTests_PortletRequest_Action_getPortletSessionB2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB3 = "V2RequestTests_PortletRequest_Action_getPortletSessionB3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB4 = "V2RequestTests_PortletRequest_Action_getPortletSessionB4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTY1 = "V2RequestTests_PortletRequest_Action_getProperty1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTY2 = "V2RequestTests_PortletRequest_Action_getProperty2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTY3 = "V2RequestTests_PortletRequest_Action_getProperty3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTIES1 = "V2RequestTests_PortletRequest_Action_getProperties1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTIES2 = "V2RequestTests_PortletRequest_Action_getProperties2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTIES3 = "V2RequestTests_PortletRequest_Action_getProperties3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTYNAMES1 = "V2RequestTests_PortletRequest_Action_getPropertyNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTYNAMES2 = "V2RequestTests_PortletRequest_Action_getPropertyNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTALCONTEXT = "V2RequestTests_PortletRequest_Action_getPortalContext";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETAUTHTYPE1 = "V2RequestTests_PortletRequest_Action_getAuthType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETAUTHTYPE2 = "V2RequestTests_PortletRequest_Action_getAuthType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCONTEXTPATH1 = "V2RequestTests_PortletRequest_Action_getContextPath1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCONTEXTPATH2 = "V2RequestTests_PortletRequest_Action_getContextPath2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCONTEXTPATH3 = "V2RequestTests_PortletRequest_Action_getContextPath3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREMOTEUSER1 = "V2RequestTests_PortletRequest_Action_getRemoteUser1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREMOTEUSER2 = "V2RequestTests_PortletRequest_Action_getRemoteUser2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETUSERPRINCIPAL1 = "V2RequestTests_PortletRequest_Action_getUserPrincipal1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETUSERPRINCIPAL2 = "V2RequestTests_PortletRequest_Action_getUserPrincipal2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISUSERINROLE1 = "V2RequestTests_PortletRequest_Action_isUserInRole1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISUSERINROLE2 = "V2RequestTests_PortletRequest_Action_isUserInRole2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISUSERINROLE3 = "V2RequestTests_PortletRequest_Action_isUserInRole3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTE1 = "V2RequestTests_PortletRequest_Action_getAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTE2 = "V2RequestTests_PortletRequest_Action_getAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTE3 = "V2RequestTests_PortletRequest_Action_getAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTENAMES1 = "V2RequestTests_PortletRequest_Action_getAttributeNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTENAMES2 = "V2RequestTests_PortletRequest_Action_getAttributeNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER1 = "V2RequestTests_PortletRequest_Action_getParameter1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER2 = "V2RequestTests_PortletRequest_Action_getParameter2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER3 = "V2RequestTests_PortletRequest_Action_getParameter3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER4 = "V2RequestTests_PortletRequest_Action_getParameter4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER5 = "V2RequestTests_PortletRequest_Action_getParameter5";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERNAMES1 = "V2RequestTests_PortletRequest_Action_getParameterNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERNAMES2 = "V2RequestTests_PortletRequest_Action_getParameterNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES1 = "V2RequestTests_PortletRequest_Action_getParameterValues1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES2 = "V2RequestTests_PortletRequest_Action_getParameterValues2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES3 = "V2RequestTests_PortletRequest_Action_getParameterValues3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES4 = "V2RequestTests_PortletRequest_Action_getParameterValues4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERMAP1 = "V2RequestTests_PortletRequest_Action_getParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERMAP2 = "V2RequestTests_PortletRequest_Action_getParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERMAP3 = "V2RequestTests_PortletRequest_Action_getParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISSECURE1 = "V2RequestTests_PortletRequest_Action_isSecure1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISSECURE2 = "V2RequestTests_PortletRequest_Action_isSecure2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_SETATTRIBUTE1 = "V2RequestTests_PortletRequest_Action_setAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_SETATTRIBUTE2 = "V2RequestTests_PortletRequest_Action_setAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_SETATTRIBUTE3 = "V2RequestTests_PortletRequest_Action_setAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_REMOVEATTRIBUTE1 = "V2RequestTests_PortletRequest_Action_removeAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_REMOVEATTRIBUTE2 = "V2RequestTests_PortletRequest_Action_removeAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREQUESTEDSESSIONID1 = "V2RequestTests_PortletRequest_Action_getRequestedSessionId1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREQUESTEDSESSIONID2 = "V2RequestTests_PortletRequest_Action_getRequestedSessionId2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISREQUESTEDSESSIONIDVALID1 = "V2RequestTests_PortletRequest_Action_isRequestedSessionIdValid1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISREQUESTEDSESSIONIDVALID2 = "V2RequestTests_PortletRequest_Action_isRequestedSessionIdValid2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPE1 = "V2RequestTests_PortletRequest_Action_getResponseContentType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPE2 = "V2RequestTests_PortletRequest_Action_getResponseContentType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPES1 = "V2RequestTests_PortletRequest_Action_getResponseContentTypes1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPES2 = "V2RequestTests_PortletRequest_Action_getResponseContentTypes2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETLOCALE = "V2RequestTests_PortletRequest_Action_getLocale";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETLOCALES = "V2RequestTests_PortletRequest_Action_getLocales";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETSCHEME = "V2RequestTests_PortletRequest_Action_getScheme";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETSERVERNAME = "V2RequestTests_PortletRequest_Action_getServerName";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETSERVERPORT = "V2RequestTests_PortletRequest_Action_getServerPort";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETWINDOWID = "V2RequestTests_PortletRequest_Action_getWindowID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCOOKIES1 = "V2RequestTests_PortletRequest_Action_getCookies1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCOOKIES2 = "V2RequestTests_PortletRequest_Action_getCookies2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPRIVATEPARAMETERMAP1 = "V2RequestTests_PortletRequest_Action_getPrivateParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPRIVATEPARAMETERMAP2 = "V2RequestTests_PortletRequest_Action_getPrivateParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPRIVATEPARAMETERMAP3 = "V2RequestTests_PortletRequest_Action_getPrivateParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPUBLICPARAMETERMAP1 = "V2RequestTests_PortletRequest_Action_getPublicParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPUBLICPARAMETERMAP2 = "V2RequestTests_PortletRequest_Action_getPublicParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPUBLICPARAMETERMAP3 = "V2RequestTests_PortletRequest_Action_getPublicParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_ACTION_EXISTS = "V2RequestTests_PortletRequest_Action_exists";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDUSER_INFO = "V2RequestTests_PortletRequest_Event_fieldUSER_INFO";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDCCPP_PROFILE = "V2RequestTests_PortletRequest_Event_fieldCCPP_PROFILE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDBASIC_AUTH = "V2RequestTests_PortletRequest_Event_fieldBASIC_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDFORM_AUTH = "V2RequestTests_PortletRequest_Event_fieldFORM_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDCLIENT_CERT_AUTH = "V2RequestTests_PortletRequest_Event_fieldCLIENT_CERT_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDDIGEST_AUTH = "V2RequestTests_PortletRequest_Event_fieldDIGEST_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDACTION_PHASE = "V2RequestTests_PortletRequest_Event_fieldACTION_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDEVENT_PHASE = "V2RequestTests_PortletRequest_Event_fieldEVENT_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_PHASE = "V2RequestTests_PortletRequest_Event_fieldRENDER_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRESOURCE_PHASE = "V2RequestTests_PortletRequest_Event_fieldRESOURCE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDLIFECYCLE_PHASE = "V2RequestTests_PortletRequest_Event_fieldLIFECYCLE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_PART = "V2RequestTests_PortletRequest_Event_fieldRENDER_PART";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_HEADERS = "V2RequestTests_PortletRequest_Event_fieldRENDER_HEADERS";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_MARKUP = "V2RequestTests_PortletRequest_Event_fieldRENDER_MARKUP";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDACTION_SCOPE_ID = "V2RequestTests_PortletRequest_Event_fieldACTION_SCOPE_ID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISWINDOWSTATEALLOWED1 = "V2RequestTests_PortletRequest_Event_isWindowStateAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISWINDOWSTATEALLOWED2 = "V2RequestTests_PortletRequest_Event_isWindowStateAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISPORTLETMODEALLOWED1 = "V2RequestTests_PortletRequest_Event_isPortletModeAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISPORTLETMODEALLOWED2 = "V2RequestTests_PortletRequest_Event_isPortletModeAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETMODE = "V2RequestTests_PortletRequest_Event_getPortletMode";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETWINDOWSTATE = "V2RequestTests_PortletRequest_Event_getWindowState";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPREFERENCES = "V2RequestTests_PortletRequest_Event_getPreferences";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONA1 = "V2RequestTests_PortletRequest_Event_getPortletSessionA1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONA2 = "V2RequestTests_PortletRequest_Event_getPortletSessionA2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB1 = "V2RequestTests_PortletRequest_Event_getPortletSessionB1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB2 = "V2RequestTests_PortletRequest_Event_getPortletSessionB2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB3 = "V2RequestTests_PortletRequest_Event_getPortletSessionB3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB4 = "V2RequestTests_PortletRequest_Event_getPortletSessionB4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTY1 = "V2RequestTests_PortletRequest_Event_getProperty1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTY2 = "V2RequestTests_PortletRequest_Event_getProperty2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTY3 = "V2RequestTests_PortletRequest_Event_getProperty3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTIES1 = "V2RequestTests_PortletRequest_Event_getProperties1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTIES2 = "V2RequestTests_PortletRequest_Event_getProperties2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTIES3 = "V2RequestTests_PortletRequest_Event_getProperties3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTYNAMES1 = "V2RequestTests_PortletRequest_Event_getPropertyNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTYNAMES2 = "V2RequestTests_PortletRequest_Event_getPropertyNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTALCONTEXT = "V2RequestTests_PortletRequest_Event_getPortalContext";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETAUTHTYPE1 = "V2RequestTests_PortletRequest_Event_getAuthType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETAUTHTYPE2 = "V2RequestTests_PortletRequest_Event_getAuthType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCONTEXTPATH1 = "V2RequestTests_PortletRequest_Event_getContextPath1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCONTEXTPATH2 = "V2RequestTests_PortletRequest_Event_getContextPath2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCONTEXTPATH3 = "V2RequestTests_PortletRequest_Event_getContextPath3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREMOTEUSER1 = "V2RequestTests_PortletRequest_Event_getRemoteUser1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREMOTEUSER2 = "V2RequestTests_PortletRequest_Event_getRemoteUser2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETUSERPRINCIPAL1 = "V2RequestTests_PortletRequest_Event_getUserPrincipal1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETUSERPRINCIPAL2 = "V2RequestTests_PortletRequest_Event_getUserPrincipal2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISUSERINROLE1 = "V2RequestTests_PortletRequest_Event_isUserInRole1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISUSERINROLE2 = "V2RequestTests_PortletRequest_Event_isUserInRole2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISUSERINROLE3 = "V2RequestTests_PortletRequest_Event_isUserInRole3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTE1 = "V2RequestTests_PortletRequest_Event_getAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTE2 = "V2RequestTests_PortletRequest_Event_getAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTE3 = "V2RequestTests_PortletRequest_Event_getAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTENAMES1 = "V2RequestTests_PortletRequest_Event_getAttributeNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTENAMES2 = "V2RequestTests_PortletRequest_Event_getAttributeNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER1 = "V2RequestTests_PortletRequest_Event_getParameter1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER2 = "V2RequestTests_PortletRequest_Event_getParameter2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER3 = "V2RequestTests_PortletRequest_Event_getParameter3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER4 = "V2RequestTests_PortletRequest_Event_getParameter4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER5 = "V2RequestTests_PortletRequest_Event_getParameter5";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERNAMES1 = "V2RequestTests_PortletRequest_Event_getParameterNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERNAMES2 = "V2RequestTests_PortletRequest_Event_getParameterNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES1 = "V2RequestTests_PortletRequest_Event_getParameterValues1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES2 = "V2RequestTests_PortletRequest_Event_getParameterValues2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES3 = "V2RequestTests_PortletRequest_Event_getParameterValues3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES4 = "V2RequestTests_PortletRequest_Event_getParameterValues4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERMAP1 = "V2RequestTests_PortletRequest_Event_getParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERMAP2 = "V2RequestTests_PortletRequest_Event_getParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERMAP3 = "V2RequestTests_PortletRequest_Event_getParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISSECURE1 = "V2RequestTests_PortletRequest_Event_isSecure1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISSECURE2 = "V2RequestTests_PortletRequest_Event_isSecure2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_SETATTRIBUTE1 = "V2RequestTests_PortletRequest_Event_setAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_SETATTRIBUTE2 = "V2RequestTests_PortletRequest_Event_setAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_SETATTRIBUTE3 = "V2RequestTests_PortletRequest_Event_setAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_REMOVEATTRIBUTE1 = "V2RequestTests_PortletRequest_Event_removeAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_REMOVEATTRIBUTE2 = "V2RequestTests_PortletRequest_Event_removeAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREQUESTEDSESSIONID1 = "V2RequestTests_PortletRequest_Event_getRequestedSessionId1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREQUESTEDSESSIONID2 = "V2RequestTests_PortletRequest_Event_getRequestedSessionId2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISREQUESTEDSESSIONIDVALID1 = "V2RequestTests_PortletRequest_Event_isRequestedSessionIdValid1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISREQUESTEDSESSIONIDVALID2 = "V2RequestTests_PortletRequest_Event_isRequestedSessionIdValid2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPE1 = "V2RequestTests_PortletRequest_Event_getResponseContentType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPE2 = "V2RequestTests_PortletRequest_Event_getResponseContentType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPES1 = "V2RequestTests_PortletRequest_Event_getResponseContentTypes1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPES2 = "V2RequestTests_PortletRequest_Event_getResponseContentTypes2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETLOCALE = "V2RequestTests_PortletRequest_Event_getLocale";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETLOCALES = "V2RequestTests_PortletRequest_Event_getLocales";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETSCHEME = "V2RequestTests_PortletRequest_Event_getScheme";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETSERVERNAME = "V2RequestTests_PortletRequest_Event_getServerName";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETSERVERPORT = "V2RequestTests_PortletRequest_Event_getServerPort";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETWINDOWID = "V2RequestTests_PortletRequest_Event_getWindowID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCOOKIES1 = "V2RequestTests_PortletRequest_Event_getCookies1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCOOKIES2 = "V2RequestTests_PortletRequest_Event_getCookies2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPRIVATEPARAMETERMAP1 = "V2RequestTests_PortletRequest_Event_getPrivateParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPRIVATEPARAMETERMAP2 = "V2RequestTests_PortletRequest_Event_getPrivateParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPRIVATEPARAMETERMAP3 = "V2RequestTests_PortletRequest_Event_getPrivateParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPUBLICPARAMETERMAP1 = "V2RequestTests_PortletRequest_Event_getPublicParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPUBLICPARAMETERMAP2 = "V2RequestTests_PortletRequest_Event_getPublicParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPUBLICPARAMETERMAP3 = "V2RequestTests_PortletRequest_Event_getPublicParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_EVENT_EXISTS = "V2RequestTests_PortletRequest_Event_exists";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDUSER_INFO = "V2RequestTests_PortletRequest_Resource_fieldUSER_INFO";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDCCPP_PROFILE = "V2RequestTests_PortletRequest_Resource_fieldCCPP_PROFILE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDBASIC_AUTH = "V2RequestTests_PortletRequest_Resource_fieldBASIC_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDFORM_AUTH = "V2RequestTests_PortletRequest_Resource_fieldFORM_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDCLIENT_CERT_AUTH = "V2RequestTests_PortletRequest_Resource_fieldCLIENT_CERT_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDDIGEST_AUTH = "V2RequestTests_PortletRequest_Resource_fieldDIGEST_AUTH";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDACTION_PHASE = "V2RequestTests_PortletRequest_Resource_fieldACTION_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDEVENT_PHASE = "V2RequestTests_PortletRequest_Resource_fieldEVENT_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_PHASE = "V2RequestTests_PortletRequest_Resource_fieldRENDER_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRESOURCE_PHASE = "V2RequestTests_PortletRequest_Resource_fieldRESOURCE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDLIFECYCLE_PHASE = "V2RequestTests_PortletRequest_Resource_fieldLIFECYCLE_PHASE";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_PART = "V2RequestTests_PortletRequest_Resource_fieldRENDER_PART";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_HEADERS = "V2RequestTests_PortletRequest_Resource_fieldRENDER_HEADERS";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_MARKUP = "V2RequestTests_PortletRequest_Resource_fieldRENDER_MARKUP";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDACTION_SCOPE_ID = "V2RequestTests_PortletRequest_Resource_fieldACTION_SCOPE_ID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISWINDOWSTATEALLOWED1 = "V2RequestTests_PortletRequest_Resource_isWindowStateAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISWINDOWSTATEALLOWED2 = "V2RequestTests_PortletRequest_Resource_isWindowStateAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISPORTLETMODEALLOWED1 = "V2RequestTests_PortletRequest_Resource_isPortletModeAllowed1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISPORTLETMODEALLOWED2 = "V2RequestTests_PortletRequest_Resource_isPortletModeAllowed2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETMODE = "V2RequestTests_PortletRequest_Resource_getPortletMode";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETWINDOWSTATE = "V2RequestTests_PortletRequest_Resource_getWindowState";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPREFERENCES = "V2RequestTests_PortletRequest_Resource_getPreferences";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONA1 = "V2RequestTests_PortletRequest_Resource_getPortletSessionA1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONA2 = "V2RequestTests_PortletRequest_Resource_getPortletSessionA2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB1 = "V2RequestTests_PortletRequest_Resource_getPortletSessionB1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB2 = "V2RequestTests_PortletRequest_Resource_getPortletSessionB2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB3 = "V2RequestTests_PortletRequest_Resource_getPortletSessionB3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB4 = "V2RequestTests_PortletRequest_Resource_getPortletSessionB4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTY1 = "V2RequestTests_PortletRequest_Resource_getProperty1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTY2 = "V2RequestTests_PortletRequest_Resource_getProperty2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTY3 = "V2RequestTests_PortletRequest_Resource_getProperty3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTIES1 = "V2RequestTests_PortletRequest_Resource_getProperties1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTIES2 = "V2RequestTests_PortletRequest_Resource_getProperties2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTIES3 = "V2RequestTests_PortletRequest_Resource_getProperties3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTYNAMES1 = "V2RequestTests_PortletRequest_Resource_getPropertyNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTYNAMES2 = "V2RequestTests_PortletRequest_Resource_getPropertyNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTALCONTEXT = "V2RequestTests_PortletRequest_Resource_getPortalContext";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETAUTHTYPE1 = "V2RequestTests_PortletRequest_Resource_getAuthType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETAUTHTYPE2 = "V2RequestTests_PortletRequest_Resource_getAuthType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCONTEXTPATH1 = "V2RequestTests_PortletRequest_Resource_getContextPath1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCONTEXTPATH2 = "V2RequestTests_PortletRequest_Resource_getContextPath2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCONTEXTPATH3 = "V2RequestTests_PortletRequest_Resource_getContextPath3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREMOTEUSER1 = "V2RequestTests_PortletRequest_Resource_getRemoteUser1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREMOTEUSER2 = "V2RequestTests_PortletRequest_Resource_getRemoteUser2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETUSERPRINCIPAL1 = "V2RequestTests_PortletRequest_Resource_getUserPrincipal1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETUSERPRINCIPAL2 = "V2RequestTests_PortletRequest_Resource_getUserPrincipal2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISUSERINROLE1 = "V2RequestTests_PortletRequest_Resource_isUserInRole1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISUSERINROLE2 = "V2RequestTests_PortletRequest_Resource_isUserInRole2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISUSERINROLE3 = "V2RequestTests_PortletRequest_Resource_isUserInRole3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTE1 = "V2RequestTests_PortletRequest_Resource_getAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTE2 = "V2RequestTests_PortletRequest_Resource_getAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTE3 = "V2RequestTests_PortletRequest_Resource_getAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTENAMES1 = "V2RequestTests_PortletRequest_Resource_getAttributeNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTENAMES2 = "V2RequestTests_PortletRequest_Resource_getAttributeNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER1 = "V2RequestTests_PortletRequest_Resource_getParameter1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER2 = "V2RequestTests_PortletRequest_Resource_getParameter2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER3 = "V2RequestTests_PortletRequest_Resource_getParameter3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER4 = "V2RequestTests_PortletRequest_Resource_getParameter4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER5 = "V2RequestTests_PortletRequest_Resource_getParameter5";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERNAMES1 = "V2RequestTests_PortletRequest_Resource_getParameterNames1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERNAMES2 = "V2RequestTests_PortletRequest_Resource_getParameterNames2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES1 = "V2RequestTests_PortletRequest_Resource_getParameterValues1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES2 = "V2RequestTests_PortletRequest_Resource_getParameterValues2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES3 = "V2RequestTests_PortletRequest_Resource_getParameterValues3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES4 = "V2RequestTests_PortletRequest_Resource_getParameterValues4";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERMAP1 = "V2RequestTests_PortletRequest_Resource_getParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERMAP2 = "V2RequestTests_PortletRequest_Resource_getParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERMAP3 = "V2RequestTests_PortletRequest_Resource_getParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISSECURE1 = "V2RequestTests_PortletRequest_Resource_isSecure1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISSECURE2 = "V2RequestTests_PortletRequest_Resource_isSecure2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_SETATTRIBUTE1 = "V2RequestTests_PortletRequest_Resource_setAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_SETATTRIBUTE2 = "V2RequestTests_PortletRequest_Resource_setAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_SETATTRIBUTE3 = "V2RequestTests_PortletRequest_Resource_setAttribute3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_REMOVEATTRIBUTE1 = "V2RequestTests_PortletRequest_Resource_removeAttribute1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_REMOVEATTRIBUTE2 = "V2RequestTests_PortletRequest_Resource_removeAttribute2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREQUESTEDSESSIONID1 = "V2RequestTests_PortletRequest_Resource_getRequestedSessionId1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREQUESTEDSESSIONID2 = "V2RequestTests_PortletRequest_Resource_getRequestedSessionId2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISREQUESTEDSESSIONIDVALID1 = "V2RequestTests_PortletRequest_Resource_isRequestedSessionIdValid1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISREQUESTEDSESSIONIDVALID2 = "V2RequestTests_PortletRequest_Resource_isRequestedSessionIdValid2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPE1 = "V2RequestTests_PortletRequest_Resource_getResponseContentType1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPE2 = "V2RequestTests_PortletRequest_Resource_getResponseContentType2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPES1 = "V2RequestTests_PortletRequest_Resource_getResponseContentTypes1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPES2 = "V2RequestTests_PortletRequest_Resource_getResponseContentTypes2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETLOCALE = "V2RequestTests_PortletRequest_Resource_getLocale";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETLOCALES = "V2RequestTests_PortletRequest_Resource_getLocales";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETSCHEME = "V2RequestTests_PortletRequest_Resource_getScheme";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETSERVERNAME = "V2RequestTests_PortletRequest_Resource_getServerName";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETSERVERPORT = "V2RequestTests_PortletRequest_Resource_getServerPort";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETWINDOWID = "V2RequestTests_PortletRequest_Resource_getWindowID";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCOOKIES1 = "V2RequestTests_PortletRequest_Resource_getCookies1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCOOKIES2 = "V2RequestTests_PortletRequest_Resource_getCookies2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPRIVATEPARAMETERMAP1 = "V2RequestTests_PortletRequest_Resource_getPrivateParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPRIVATEPARAMETERMAP2 = "V2RequestTests_PortletRequest_Resource_getPrivateParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPRIVATEPARAMETERMAP3 = "V2RequestTests_PortletRequest_Resource_getPrivateParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPUBLICPARAMETERMAP1 = "V2RequestTests_PortletRequest_Resource_getPublicParameterMap1";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPUBLICPARAMETERMAP2 = "V2RequestTests_PortletRequest_Resource_getPublicParameterMap2";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPUBLICPARAMETERMAP3 = "V2RequestTests_PortletRequest_Resource_getPublicParameterMap3";
   public final static String V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_EXISTS = "V2RequestTests_PortletRequest_Resource_exists";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETPORTLETINPUTSTREAM1 = "V2RequestTests_ClientDataRequest_Action_getPortletInputStream1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETPORTLETINPUTSTREAM2 = "V2RequestTests_ClientDataRequest_Action_getPortletInputStream2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETPORTLETINPUTSTREAM3 = "V2RequestTests_ClientDataRequest_Action_getPortletInputStream3";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING1 = "V2RequestTests_ClientDataRequest_Action_setCharacterEncoding1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING2 = "V2RequestTests_ClientDataRequest_Action_setCharacterEncoding2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING3 = "V2RequestTests_ClientDataRequest_Action_setCharacterEncoding3";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING4 = "V2RequestTests_ClientDataRequest_Action_setCharacterEncoding4";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER1 = "V2RequestTests_ClientDataRequest_Action_getReader1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER2 = "V2RequestTests_ClientDataRequest_Action_getReader2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER3 = "V2RequestTests_ClientDataRequest_Action_getReader3";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER5 = "V2RequestTests_ClientDataRequest_Action_getReader5";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCHARACTERENCODING1 = "V2RequestTests_ClientDataRequest_Action_getCharacterEncoding1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCHARACTERENCODING2 = "V2RequestTests_ClientDataRequest_Action_getCharacterEncoding2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTTYPE1 = "V2RequestTests_ClientDataRequest_Action_getContentType1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTTYPE2 = "V2RequestTests_ClientDataRequest_Action_getContentType2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTLENGTH1 = "V2RequestTests_ClientDataRequest_Action_getContentLength1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTLENGTH2 = "V2RequestTests_ClientDataRequest_Action_getContentLength2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETMETHOD = "V2RequestTests_ClientDataRequest_Action_getMethod";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETPORTLETINPUTSTREAM1 = "V2RequestTests_ClientDataRequest_Resource_getPortletInputStream1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETPORTLETINPUTSTREAM2 = "V2RequestTests_ClientDataRequest_Resource_getPortletInputStream2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETPORTLETINPUTSTREAM3 = "V2RequestTests_ClientDataRequest_Resource_getPortletInputStream3";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING1 = "V2RequestTests_ClientDataRequest_Resource_setCharacterEncoding1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING2 = "V2RequestTests_ClientDataRequest_Resource_setCharacterEncoding2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING3 = "V2RequestTests_ClientDataRequest_Resource_setCharacterEncoding3";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING4 = "V2RequestTests_ClientDataRequest_Resource_setCharacterEncoding4";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER1 = "V2RequestTests_ClientDataRequest_Resource_getReader1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER2 = "V2RequestTests_ClientDataRequest_Resource_getReader2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER3 = "V2RequestTests_ClientDataRequest_Resource_getReader3";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER5 = "V2RequestTests_ClientDataRequest_Resource_getReader5";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCHARACTERENCODING1 = "V2RequestTests_ClientDataRequest_Resource_getCharacterEncoding1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCHARACTERENCODING2 = "V2RequestTests_ClientDataRequest_Resource_getCharacterEncoding2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTTYPE1 = "V2RequestTests_ClientDataRequest_Resource_getContentType1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTTYPE2 = "V2RequestTests_ClientDataRequest_Resource_getContentType2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTLENGTH1 = "V2RequestTests_ClientDataRequest_Resource_getContentLength1";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTLENGTH2 = "V2RequestTests_ClientDataRequest_Resource_getContentLength2";
   public final static String V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETMETHOD = "V2RequestTests_ClientDataRequest_Resource_getMethod";
   public final static String V2REQUESTTESTS_ACTIONREQUEST_ACTION_FIELDACTION_NAME = "V2RequestTests_ActionRequest_Action_fieldACTION_NAME";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_FIELDETAG = "V2RequestTests_ResourceRequest_Resource_fieldETAG";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETETAG2 = "V2RequestTests_ResourceRequest_Resource_getETag2";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESOURCEID1 = "V2RequestTests_ResourceRequest_Resource_getResourceID1";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESOURCEID2 = "V2RequestTests_ResourceRequest_Resource_getResourceID2";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP1 = "V2RequestTests_ResourceRequest_Resource_getPrivateRenderParameterMap1";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP2 = "V2RequestTests_ResourceRequest_Resource_getPrivateRenderParameterMap2";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP3 = "V2RequestTests_ResourceRequest_Resource_getPrivateRenderParameterMap3";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP4 = "V2RequestTests_ResourceRequest_Resource_getPrivateRenderParameterMap4";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESPONSECONTENTTYPE = "V2RequestTests_ResourceRequest_Resource_getResponseContentType";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESPONSECONTENTTYPES = "V2RequestTests_ResourceRequest_Resource_getResponseContentTypes";
   public final static String V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETCACHEABILITY = "V2RequestTests_ResourceRequest_Resource_getCacheability";
   public final static String V2REQUESTTESTS_EVENTREQUEST_EVENT_GETEVENT = "V2RequestTests_EventRequest_Event_getEvent";
   public final static String V2REQUESTTESTS_EVENTREQUEST_EVENT_GETMETHOD = "V2RequestTests_EventRequest_Event_getMethod";
   public final static String V2REQUESTTESTS_RENDERREQUEST_RENDER_FIELDETAG = "V2RequestTests_RenderRequest_Render_fieldETAG";
   public final static String V2REQUESTTESTS_RENDERREQUEST_RENDER_GETETAG2 = "V2RequestTests_RenderRequest_Render_getETag2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYA1 = "V2ResponseTests_PortletResponse_Render_addPropertyA1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYA2 = "V2ResponseTests_PortletResponse_Render_addPropertyA2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB1 = "V2ResponseTests_PortletResponse_Render_addPropertyB1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB2 = "V2ResponseTests_PortletResponse_Render_addPropertyB2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB3 = "V2ResponseTests_PortletResponse_Render_addPropertyB3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB4 = "V2ResponseTests_PortletResponse_Render_addPropertyB4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYC1 = "V2ResponseTests_PortletResponse_Render_addPropertyC1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYC2 = "V2ResponseTests_PortletResponse_Render_addPropertyC2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_SETPROPERTY1 = "V2ResponseTests_PortletResponse_Render_setProperty1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_SETPROPERTY2 = "V2ResponseTests_PortletResponse_Render_setProperty2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_SETPROPERTY3 = "V2ResponseTests_PortletResponse_Render_setProperty3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ENCODEURL1 = "V2ResponseTests_PortletResponse_Render_encodeURL1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ENCODEURL2 = "V2ResponseTests_PortletResponse_Render_encodeURL2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_GETNAMESPACE1 = "V2ResponseTests_PortletResponse_Render_getNamespace1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT1 = "V2ResponseTests_PortletResponse_Render_createElement1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT2 = "V2ResponseTests_PortletResponse_Render_createElement2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT3 = "V2ResponseTests_PortletResponse_Render_createElement3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT4 = "V2ResponseTests_PortletResponse_Render_createElement4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT5 = "V2ResponseTests_PortletResponse_Render_createElement5";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT6 = "V2ResponseTests_PortletResponse_Render_createElement6";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYA1 = "V2ResponseTests_PortletResponse_Resource_addPropertyA1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYA2 = "V2ResponseTests_PortletResponse_Resource_addPropertyA2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB1 = "V2ResponseTests_PortletResponse_Resource_addPropertyB1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB2 = "V2ResponseTests_PortletResponse_Resource_addPropertyB2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB3 = "V2ResponseTests_PortletResponse_Resource_addPropertyB3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB4 = "V2ResponseTests_PortletResponse_Resource_addPropertyB4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYC1 = "V2ResponseTests_PortletResponse_Resource_addPropertyC1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYC2 = "V2ResponseTests_PortletResponse_Resource_addPropertyC2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_SETPROPERTY1 = "V2ResponseTests_PortletResponse_Resource_setProperty1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_SETPROPERTY2 = "V2ResponseTests_PortletResponse_Resource_setProperty2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_SETPROPERTY3 = "V2ResponseTests_PortletResponse_Resource_setProperty3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ENCODEURL1 = "V2ResponseTests_PortletResponse_Resource_encodeURL1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ENCODEURL2 = "V2ResponseTests_PortletResponse_Resource_encodeURL2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_GETNAMESPACE1 = "V2ResponseTests_PortletResponse_Resource_getNamespace1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT1 = "V2ResponseTests_PortletResponse_Resource_createElement1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT2 = "V2ResponseTests_PortletResponse_Resource_createElement2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT3 = "V2ResponseTests_PortletResponse_Resource_createElement3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT4 = "V2ResponseTests_PortletResponse_Resource_createElement4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT5 = "V2ResponseTests_PortletResponse_Resource_createElement5";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT6 = "V2ResponseTests_PortletResponse_Resource_createElement6";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYA1 = "V2ResponseTests_PortletResponse_Action_addPropertyA1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYA2 = "V2ResponseTests_PortletResponse_Action_addPropertyA2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB1 = "V2ResponseTests_PortletResponse_Action_addPropertyB1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB2 = "V2ResponseTests_PortletResponse_Action_addPropertyB2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB3 = "V2ResponseTests_PortletResponse_Action_addPropertyB3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB4 = "V2ResponseTests_PortletResponse_Action_addPropertyB4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYC1 = "V2ResponseTests_PortletResponse_Action_addPropertyC1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYC2 = "V2ResponseTests_PortletResponse_Action_addPropertyC2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_SETPROPERTY1 = "V2ResponseTests_PortletResponse_Action_setProperty1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_SETPROPERTY2 = "V2ResponseTests_PortletResponse_Action_setProperty2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_SETPROPERTY3 = "V2ResponseTests_PortletResponse_Action_setProperty3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ENCODEURL1 = "V2ResponseTests_PortletResponse_Action_encodeURL1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ENCODEURL2 = "V2ResponseTests_PortletResponse_Action_encodeURL2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_GETNAMESPACE1 = "V2ResponseTests_PortletResponse_Action_getNamespace1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT1 = "V2ResponseTests_PortletResponse_Action_createElement1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT2 = "V2ResponseTests_PortletResponse_Action_createElement2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT3 = "V2ResponseTests_PortletResponse_Action_createElement3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT4 = "V2ResponseTests_PortletResponse_Action_createElement4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT5 = "V2ResponseTests_PortletResponse_Action_createElement5";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT6 = "V2ResponseTests_PortletResponse_Action_createElement6";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYA1 = "V2ResponseTests_PortletResponse_Event_addPropertyA1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYA2 = "V2ResponseTests_PortletResponse_Event_addPropertyA2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB1 = "V2ResponseTests_PortletResponse_Event_addPropertyB1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB2 = "V2ResponseTests_PortletResponse_Event_addPropertyB2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB3 = "V2ResponseTests_PortletResponse_Event_addPropertyB3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB4 = "V2ResponseTests_PortletResponse_Event_addPropertyB4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYC1 = "V2ResponseTests_PortletResponse_Event_addPropertyC1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYC2 = "V2ResponseTests_PortletResponse_Event_addPropertyC2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_SETPROPERTY1 = "V2ResponseTests_PortletResponse_Event_setProperty1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_SETPROPERTY2 = "V2ResponseTests_PortletResponse_Event_setProperty2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_SETPROPERTY3 = "V2ResponseTests_PortletResponse_Event_setProperty3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ENCODEURL1 = "V2ResponseTests_PortletResponse_Event_encodeURL1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ENCODEURL2 = "V2ResponseTests_PortletResponse_Event_encodeURL2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_GETNAMESPACE1 = "V2ResponseTests_PortletResponse_Event_getNamespace1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT1 = "V2ResponseTests_PortletResponse_Event_createElement1";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT2 = "V2ResponseTests_PortletResponse_Event_createElement2";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT3 = "V2ResponseTests_PortletResponse_Event_createElement3";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT4 = "V2ResponseTests_PortletResponse_Event_createElement4";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT5 = "V2ResponseTests_PortletResponse_Event_createElement5";
   public final static String V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT6 = "V2ResponseTests_PortletResponse_Event_createElement6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETWINDOWSTATE1 = "V2ResponseTests_StateAwareResponse_Event_setWindowState1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETWINDOWSTATE2 = "V2ResponseTests_StateAwareResponse_Event_setWindowState2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETWINDOWSTATE3 = "V2ResponseTests_StateAwareResponse_Event_setWindowState3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETPORTLETMODE1 = "V2ResponseTests_StateAwareResponse_Event_setPortletMode1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETPORTLETMODE2 = "V2ResponseTests_StateAwareResponse_Event_setPortletMode2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETPORTLETMODE3 = "V2ResponseTests_StateAwareResponse_Event_setPortletMode3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS1 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS2 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS3 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS4 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS5 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS6 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS7 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters7";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS8 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters8";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS9 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters9";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS10 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters10";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS11 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters11";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS12 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameters12";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA1 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA2 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA3 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA4 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA5 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA6 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA7 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA7";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA8 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterA8";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB1 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterB1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB2 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterB2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB3 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterB3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB4 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterB4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB5 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterB5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB6 = "V2ResponseTests_StateAwareResponse_Event_setRenderParameterB6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA1 = "V2ResponseTests_StateAwareResponse_Event_setEventA1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA2 = "V2ResponseTests_StateAwareResponse_Event_setEventA2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA3 = "V2ResponseTests_StateAwareResponse_Event_setEventA3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA4 = "V2ResponseTests_StateAwareResponse_Event_setEventA4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA5 = "V2ResponseTests_StateAwareResponse_Event_setEventA5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB1 = "V2ResponseTests_StateAwareResponse_Event_setEventB1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB2 = "V2ResponseTests_StateAwareResponse_Event_setEventB2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB3 = "V2ResponseTests_StateAwareResponse_Event_setEventB3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB4 = "V2ResponseTests_StateAwareResponse_Event_setEventB4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB5 = "V2ResponseTests_StateAwareResponse_Event_setEventB5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP1 = "V2ResponseTests_StateAwareResponse_Event_getRenderParameterMap1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP2 = "V2ResponseTests_StateAwareResponse_Event_getRenderParameterMap2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP3 = "V2ResponseTests_StateAwareResponse_Event_getRenderParameterMap3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP4 = "V2ResponseTests_StateAwareResponse_Event_getRenderParameterMap4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETPORTLETMODE1 = "V2ResponseTests_StateAwareResponse_Event_getPortletMode1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETPORTLETMODE2 = "V2ResponseTests_StateAwareResponse_Event_getPortletMode2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETWINDOWSTATE1 = "V2ResponseTests_StateAwareResponse_Event_getWindowState1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETWINDOWSTATE2 = "V2ResponseTests_StateAwareResponse_Event_getWindowState2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_REMOVEPUBLICRENDERPARAMETER1 = "V2ResponseTests_StateAwareResponse_Event_removePublicRenderParameter1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_REMOVEPUBLICRENDERPARAMETER2 = "V2ResponseTests_StateAwareResponse_Event_removePublicRenderParameter2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETWINDOWSTATE1 = "V2ResponseTests_StateAwareResponse_Action_setWindowState1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETWINDOWSTATE2 = "V2ResponseTests_StateAwareResponse_Action_setWindowState2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETWINDOWSTATE3 = "V2ResponseTests_StateAwareResponse_Action_setWindowState3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETPORTLETMODE1 = "V2ResponseTests_StateAwareResponse_Action_setPortletMode1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETPORTLETMODE2 = "V2ResponseTests_StateAwareResponse_Action_setPortletMode2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETPORTLETMODE3 = "V2ResponseTests_StateAwareResponse_Action_setPortletMode3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS1 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS2 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS3 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS4 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS5 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS6 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS7 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters7";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS8 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters8";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS9 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters9";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS10 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters10";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS11 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters11";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS12 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameters12";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA1 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA2 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA3 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA4 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA5 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA6 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA7 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA7";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA8 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterA8";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB1 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterB1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB2 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterB2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB3 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterB3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB4 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterB4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB5 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterB5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB6 = "V2ResponseTests_StateAwareResponse_Action_setRenderParameterB6";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA1 = "V2ResponseTests_StateAwareResponse_Action_setEventA1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA2 = "V2ResponseTests_StateAwareResponse_Action_setEventA2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA3 = "V2ResponseTests_StateAwareResponse_Action_setEventA3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA4 = "V2ResponseTests_StateAwareResponse_Action_setEventA4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA5 = "V2ResponseTests_StateAwareResponse_Action_setEventA5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB1 = "V2ResponseTests_StateAwareResponse_Action_setEventB1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB2 = "V2ResponseTests_StateAwareResponse_Action_setEventB2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB3 = "V2ResponseTests_StateAwareResponse_Action_setEventB3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB4 = "V2ResponseTests_StateAwareResponse_Action_setEventB4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB5 = "V2ResponseTests_StateAwareResponse_Action_setEventB5";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP1 = "V2ResponseTests_StateAwareResponse_Action_getRenderParameterMap1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP2 = "V2ResponseTests_StateAwareResponse_Action_getRenderParameterMap2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP3 = "V2ResponseTests_StateAwareResponse_Action_getRenderParameterMap3";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP4 = "V2ResponseTests_StateAwareResponse_Action_getRenderParameterMap4";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETPORTLETMODE1 = "V2ResponseTests_StateAwareResponse_Action_getPortletMode1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETPORTLETMODE2 = "V2ResponseTests_StateAwareResponse_Action_getPortletMode2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETWINDOWSTATE1 = "V2ResponseTests_StateAwareResponse_Action_getWindowState1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETWINDOWSTATE2 = "V2ResponseTests_StateAwareResponse_Action_getWindowState2";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_REMOVEPUBLICRENDERPARAMETER1 = "V2ResponseTests_StateAwareResponse_Action_removePublicRenderParameter1";
   public final static String V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_REMOVEPUBLICRENDERPARAMETER2 = "V2ResponseTests_StateAwareResponse_Action_removePublicRenderParameter2";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA1 = "V2ResponseTests_ActionResponse_Action_sendRedirectA1";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA2 = "V2ResponseTests_ActionResponse_Action_sendRedirectA2";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA3 = "V2ResponseTests_ActionResponse_Action_sendRedirectA3";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA4 = "V2ResponseTests_ActionResponse_Action_sendRedirectA4";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA5 = "V2ResponseTests_ActionResponse_Action_sendRedirectA5";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA6 = "V2ResponseTests_ActionResponse_Action_sendRedirectA6";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA7 = "V2ResponseTests_ActionResponse_Action_sendRedirectA7";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB1 = "V2ResponseTests_ActionResponse_Action_sendRedirectB1";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB2 = "V2ResponseTests_ActionResponse_Action_sendRedirectB2";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB3 = "V2ResponseTests_ActionResponse_Action_sendRedirectB3";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB4 = "V2ResponseTests_ActionResponse_Action_sendRedirectB4";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB5 = "V2ResponseTests_ActionResponse_Action_sendRedirectB5";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB6 = "V2ResponseTests_ActionResponse_Action_sendRedirectB6";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB7 = "V2ResponseTests_ActionResponse_Action_sendRedirectB7";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB8 = "V2ResponseTests_ActionResponse_Action_sendRedirectB8";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB9 = "V2ResponseTests_ActionResponse_Action_sendRedirectB9";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB10 = "V2ResponseTests_ActionResponse_Action_sendRedirectB10";
   public final static String V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB11 = "V2ResponseTests_ActionResponse_Action_sendRedirectB11";
   public final static String V2RESPONSETESTS_EVENTRESPONSE_EVENT_SETRENDERPARAMETERS1 = "V2ResponseTests_EventResponse_Event_setRenderParameters1";
   public final static String V2RESPONSETESTS_EVENTRESPONSE_EVENT_SETRENDERPARAMETERS2 = "V2ResponseTests_EventResponse_Event_setRenderParameters2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDEXPIRATION_CACHE  = "V2ResponseTests_MimeResponse_Render_fieldEXPIRATION_CACHE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDCACHE_SCOPE  = "V2ResponseTests_MimeResponse_Render_fieldCACHE_SCOPE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDPUBLIC_SCOPE  = "V2ResponseTests_MimeResponse_Render_fieldPUBLIC_SCOPE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDPRIVATE_SCOPE  = "V2ResponseTests_MimeResponse_Render_fieldPRIVATE_SCOPE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDETAG  = "V2ResponseTests_MimeResponse_Render_fieldETAG ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDUSE_CACHED_CONTENT  = "V2ResponseTests_MimeResponse_Render_fieldUSE_CACHED_CONTENT ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDNAMESPACED_RESPONSE = "V2ResponseTests_MimeResponse_Render_fieldNAMESPACED_RESPONSE";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDMARKUP_HEAD_ELEMENT = "V2ResponseTests_MimeResponse_Render_fieldMARKUP_HEAD_ELEMENT";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCONTENTTYPE1 = "V2ResponseTests_MimeResponse_Render_getContentType1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCONTENTTYPE2 = "V2ResponseTests_MimeResponse_Render_getContentType2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_SETCONTENTTYPE1 = "V2ResponseTests_MimeResponse_Render_setContentType1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_SETCONTENTTYPE4 = "V2ResponseTests_MimeResponse_Render_setContentType4";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCHARACTERENCODING = "V2ResponseTests_MimeResponse_Render_getCharacterEncoding";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETWRITER1 = "V2ResponseTests_MimeResponse_Render_getWriter1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETWRITER2 = "V2ResponseTests_MimeResponse_Render_getWriter2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETLOCALE = "V2ResponseTests_MimeResponse_Render_getLocale";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_SETBUFFERSIZE1 = "V2ResponseTests_MimeResponse_Render_setBufferSize1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_SETBUFFERSIZE2 = "V2ResponseTests_MimeResponse_Render_setBufferSize2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETBUFFERSIZE1 = "V2ResponseTests_MimeResponse_Render_getBufferSize1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETBUFFERSIZE2 = "V2ResponseTests_MimeResponse_Render_getBufferSize2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_FLUSHBUFFER1 = "V2ResponseTests_MimeResponse_Render_flushBuffer1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_RESETBUFFER1 = "V2ResponseTests_MimeResponse_Render_resetBuffer1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_RESETBUFFER2 = "V2ResponseTests_MimeResponse_Render_resetBuffer2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_ISCOMMITTED1 = "V2ResponseTests_MimeResponse_Render_isCommitted1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_ISCOMMITTED2 = "V2ResponseTests_MimeResponse_Render_isCommitted2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_RESET1 = "V2ResponseTests_MimeResponse_Render_reset1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_RESET2 = "V2ResponseTests_MimeResponse_Render_reset2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETPORTLETOUTPUTSTREAM1 = "V2ResponseTests_MimeResponse_Render_getPortletOutputStream1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETPORTLETOUTPUTSTREAM2 = "V2ResponseTests_MimeResponse_Render_getPortletOutputStream2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_CREATERENDERURL = "V2ResponseTests_MimeResponse_Render_createRenderURL";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_CREATEACTIONURL = "V2ResponseTests_MimeResponse_Render_createActionURL";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_CREATERESOURCEURL = "V2ResponseTests_MimeResponse_Render_createResourceURL";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCACHECONTROL = "V2ResponseTests_MimeResponse_Render_getCacheControl";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDEXPIRATION_CACHE  = "V2ResponseTests_MimeResponse_Resource_fieldEXPIRATION_CACHE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDCACHE_SCOPE  = "V2ResponseTests_MimeResponse_Resource_fieldCACHE_SCOPE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDPUBLIC_SCOPE  = "V2ResponseTests_MimeResponse_Resource_fieldPUBLIC_SCOPE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDPRIVATE_SCOPE  = "V2ResponseTests_MimeResponse_Resource_fieldPRIVATE_SCOPE ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDETAG  = "V2ResponseTests_MimeResponse_Resource_fieldETAG ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDUSE_CACHED_CONTENT  = "V2ResponseTests_MimeResponse_Resource_fieldUSE_CACHED_CONTENT ";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDNAMESPACED_RESPONSE = "V2ResponseTests_MimeResponse_Resource_fieldNAMESPACED_RESPONSE";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDMARKUP_HEAD_ELEMENT = "V2ResponseTests_MimeResponse_Resource_fieldMARKUP_HEAD_ELEMENT";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCONTENTTYPE1 = "V2ResponseTests_MimeResponse_Resource_getContentType1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCONTENTTYPE2 = "V2ResponseTests_MimeResponse_Resource_getContentType2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETCONTENTTYPE1 = "V2ResponseTests_MimeResponse_Resource_setContentType1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETCONTENTTYPE4 = "V2ResponseTests_MimeResponse_Resource_setContentType4";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCHARACTERENCODING = "V2ResponseTests_MimeResponse_Resource_getCharacterEncoding";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETWRITER1 = "V2ResponseTests_MimeResponse_Resource_getWriter1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETWRITER2 = "V2ResponseTests_MimeResponse_Resource_getWriter2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETLOCALE = "V2ResponseTests_MimeResponse_Resource_getLocale";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETBUFFERSIZE1 = "V2ResponseTests_MimeResponse_Resource_setBufferSize1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETBUFFERSIZE2 = "V2ResponseTests_MimeResponse_Resource_setBufferSize2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETBUFFERSIZE1 = "V2ResponseTests_MimeResponse_Resource_getBufferSize1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETBUFFERSIZE2 = "V2ResponseTests_MimeResponse_Resource_getBufferSize2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FLUSHBUFFER1 = "V2ResponseTests_MimeResponse_Resource_flushBuffer1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESETBUFFER1 = "V2ResponseTests_MimeResponse_Resource_resetBuffer1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESETBUFFER2 = "V2ResponseTests_MimeResponse_Resource_resetBuffer2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_ISCOMMITTED1 = "V2ResponseTests_MimeResponse_Resource_isCommitted1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_ISCOMMITTED2 = "V2ResponseTests_MimeResponse_Resource_isCommitted2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESET1 = "V2ResponseTests_MimeResponse_Resource_reset1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESET2 = "V2ResponseTests_MimeResponse_Resource_reset2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETPORTLETOUTPUTSTREAM1 = "V2ResponseTests_MimeResponse_Resource_getPortletOutputStream1";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETPORTLETOUTPUTSTREAM2 = "V2ResponseTests_MimeResponse_Resource_getPortletOutputStream2";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_CREATERENDERURL = "V2ResponseTests_MimeResponse_Resource_createRenderURL";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_CREATEACTIONURL = "V2ResponseTests_MimeResponse_Resource_createActionURL";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_CREATERESOURCEURL = "V2ResponseTests_MimeResponse_Resource_createResourceURL";
   public final static String V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCACHECONTROL = "V2ResponseTests_MimeResponse_Resource_getCacheControl";
   public final static String V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETTITLE2 = "V2ResponseTests_RenderResponse_Render_setTitle2";
   public final static String V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETNEXTPOSSIBLEPORTLETMODES2 = "V2ResponseTests_RenderResponse_Render_setNextPossiblePortletModes2";
   public final static String V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETCONTENTTYPE1 = "V2ResponseTests_RenderResponse_Render_setContentType1";
   public final static String V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETCONTENTTYPE2 = "V2ResponseTests_RenderResponse_Render_setContentType2";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_FIELDHTTP_STATUS_CODE  = "V2ResponseTests_ResourceResponse_Resource_fieldHTTP_STATUS_CODE ";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETLOCALE1 = "V2ResponseTests_ResourceResponse_Resource_setLocale1";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETLOCALE4 = "V2ResponseTests_ResourceResponse_Resource_setLocale4";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETCHARACTERENCODING1 = "V2ResponseTests_ResourceResponse_Resource_setCharacterEncoding1";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETCHARACTERENCODING4 = "V2ResponseTests_ResourceResponse_Resource_setCharacterEncoding4";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETCONTENTLENGTH1 = "V2ResponseTests_ResourceResponse_Resource_setContentLength1";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_CREATERENDERURL2 = "V2ResponseTests_ResourceResponse_Resource_createRenderURL2";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_CREATEACTIONURL2 = "V2ResponseTests_ResourceResponse_Resource_createActionURL2";
   public final static String V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_CREATERESOURCEURL2 = "V2ResponseTests_ResourceResponse_Resource_createResourceURL2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA1 = "V2URLTests_BaseURL_RenderRenurl_setParameterA1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA2 = "V2URLTests_BaseURL_RenderRenurl_setParameterA2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA3 = "V2URLTests_BaseURL_RenderRenurl_setParameterA3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA4 = "V2URLTests_BaseURL_RenderRenurl_setParameterA4";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA5 = "V2URLTests_BaseURL_RenderRenurl_setParameterA5";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA6 = "V2URLTests_BaseURL_RenderRenurl_setParameterA6";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA7 = "V2URLTests_BaseURL_RenderRenurl_setParameterA7";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA8 = "V2URLTests_BaseURL_RenderRenurl_setParameterA8";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB1 = "V2URLTests_BaseURL_RenderRenurl_setParameterB1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB2 = "V2URLTests_BaseURL_RenderRenurl_setParameterB2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB3 = "V2URLTests_BaseURL_RenderRenurl_setParameterB3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB4 = "V2URLTests_BaseURL_RenderRenurl_setParameterB4";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB5 = "V2URLTests_BaseURL_RenderRenurl_setParameterB5";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB6 = "V2URLTests_BaseURL_RenderRenurl_setParameterB6";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB7 = "V2URLTests_BaseURL_RenderRenurl_setParameterB7";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB8 = "V2URLTests_BaseURL_RenderRenurl_setParameterB8";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS1 = "V2URLTests_BaseURL_RenderRenurl_setParameters1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS2 = "V2URLTests_BaseURL_RenderRenurl_setParameters2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS3 = "V2URLTests_BaseURL_RenderRenurl_setParameters3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS4 = "V2URLTests_BaseURL_RenderRenurl_setParameters4";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS5 = "V2URLTests_BaseURL_RenderRenurl_setParameters5";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS6 = "V2URLTests_BaseURL_RenderRenurl_setParameters6";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS7 = "V2URLTests_BaseURL_RenderRenurl_setParameters7";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS8 = "V2URLTests_BaseURL_RenderRenurl_setParameters8";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS9 = "V2URLTests_BaseURL_RenderRenurl_setParameters9";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS10 = "V2URLTests_BaseURL_RenderRenurl_setParameters10";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS11 = "V2URLTests_BaseURL_RenderRenurl_setParameters11";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS12 = "V2URLTests_BaseURL_RenderRenurl_setParameters12";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS13 = "V2URLTests_BaseURL_RenderRenurl_setParameters13";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS14 = "V2URLTests_BaseURL_RenderRenurl_setParameters14";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETSECURE2 = "V2URLTests_BaseURL_RenderRenurl_setSecure2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETSECURE3 = "V2URLTests_BaseURL_RenderRenurl_setSecure3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETSECURE4 = "V2URLTests_BaseURL_RenderRenurl_setSecure4";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_TOSTRING = "V2URLTests_BaseURL_RenderRenurl_toString";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP1 = "V2URLTests_BaseURL_RenderRenurl_getParameterMap1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP2 = "V2URLTests_BaseURL_RenderRenurl_getParameterMap2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP3 = "V2URLTests_BaseURL_RenderRenurl_getParameterMap3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP4 = "V2URLTests_BaseURL_RenderRenurl_getParameterMap4";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP5 = "V2URLTests_BaseURL_RenderRenurl_getParameterMap5";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP6 = "V2URLTests_BaseURL_RenderRenurl_getParameterMap6";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_WRITEA1 = "V2URLTests_BaseURL_RenderRenurl_writeA1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_WRITEA2 = "V2URLTests_BaseURL_RenderRenurl_writeA2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_WRITEB1 = "V2URLTests_BaseURL_RenderRenurl_writeB1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_WRITEB2 = "V2URLTests_BaseURL_RenderRenurl_writeB2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_WRITEB3 = "V2URLTests_BaseURL_RenderRenurl_writeB3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_ADDPROPERTY1 = "V2URLTests_BaseURL_RenderRenurl_addProperty1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_ADDPROPERTY2 = "V2URLTests_BaseURL_RenderRenurl_addProperty2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_ADDPROPERTY3 = "V2URLTests_BaseURL_RenderRenurl_addProperty3";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPROPERTY1 = "V2URLTests_BaseURL_RenderRenurl_setProperty1";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPROPERTY2 = "V2URLTests_BaseURL_RenderRenurl_setProperty2";
   public final static String V2URLTESTS_BASEURL_RENDERRENURL_SETPROPERTY3 = "V2URLTests_BaseURL_RenderRenurl_setProperty3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA1 = "V2URLTests_BaseURL_RenderActurl_setParameterA1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA2 = "V2URLTests_BaseURL_RenderActurl_setParameterA2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA3 = "V2URLTests_BaseURL_RenderActurl_setParameterA3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA4 = "V2URLTests_BaseURL_RenderActurl_setParameterA4";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA5 = "V2URLTests_BaseURL_RenderActurl_setParameterA5";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA6 = "V2URLTests_BaseURL_RenderActurl_setParameterA6";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA7 = "V2URLTests_BaseURL_RenderActurl_setParameterA7";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA8 = "V2URLTests_BaseURL_RenderActurl_setParameterA8";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB1 = "V2URLTests_BaseURL_RenderActurl_setParameterB1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB2 = "V2URLTests_BaseURL_RenderActurl_setParameterB2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB3 = "V2URLTests_BaseURL_RenderActurl_setParameterB3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB4 = "V2URLTests_BaseURL_RenderActurl_setParameterB4";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB5 = "V2URLTests_BaseURL_RenderActurl_setParameterB5";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB6 = "V2URLTests_BaseURL_RenderActurl_setParameterB6";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB7 = "V2URLTests_BaseURL_RenderActurl_setParameterB7";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB8 = "V2URLTests_BaseURL_RenderActurl_setParameterB8";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS1 = "V2URLTests_BaseURL_RenderActurl_setParameters1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS2 = "V2URLTests_BaseURL_RenderActurl_setParameters2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS3 = "V2URLTests_BaseURL_RenderActurl_setParameters3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS4 = "V2URLTests_BaseURL_RenderActurl_setParameters4";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS5 = "V2URLTests_BaseURL_RenderActurl_setParameters5";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS6 = "V2URLTests_BaseURL_RenderActurl_setParameters6";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS7 = "V2URLTests_BaseURL_RenderActurl_setParameters7";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS8 = "V2URLTests_BaseURL_RenderActurl_setParameters8";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS9 = "V2URLTests_BaseURL_RenderActurl_setParameters9";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS10 = "V2URLTests_BaseURL_RenderActurl_setParameters10";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS11 = "V2URLTests_BaseURL_RenderActurl_setParameters11";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS12 = "V2URLTests_BaseURL_RenderActurl_setParameters12";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS13 = "V2URLTests_BaseURL_RenderActurl_setParameters13";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS14 = "V2URLTests_BaseURL_RenderActurl_setParameters14";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETSECURE2 = "V2URLTests_BaseURL_RenderActurl_setSecure2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETSECURE3 = "V2URLTests_BaseURL_RenderActurl_setSecure3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETSECURE4 = "V2URLTests_BaseURL_RenderActurl_setSecure4";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_TOSTRING = "V2URLTests_BaseURL_RenderActurl_toString";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP1 = "V2URLTests_BaseURL_RenderActurl_getParameterMap1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP2 = "V2URLTests_BaseURL_RenderActurl_getParameterMap2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP3 = "V2URLTests_BaseURL_RenderActurl_getParameterMap3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP4 = "V2URLTests_BaseURL_RenderActurl_getParameterMap4";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP5 = "V2URLTests_BaseURL_RenderActurl_getParameterMap5";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP6 = "V2URLTests_BaseURL_RenderActurl_getParameterMap6";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_WRITEA1 = "V2URLTests_BaseURL_RenderActurl_writeA1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_WRITEA2 = "V2URLTests_BaseURL_RenderActurl_writeA2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_WRITEB1 = "V2URLTests_BaseURL_RenderActurl_writeB1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_WRITEB2 = "V2URLTests_BaseURL_RenderActurl_writeB2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_WRITEB3 = "V2URLTests_BaseURL_RenderActurl_writeB3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_ADDPROPERTY1 = "V2URLTests_BaseURL_RenderActurl_addProperty1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_ADDPROPERTY2 = "V2URLTests_BaseURL_RenderActurl_addProperty2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_ADDPROPERTY3 = "V2URLTests_BaseURL_RenderActurl_addProperty3";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPROPERTY1 = "V2URLTests_BaseURL_RenderActurl_setProperty1";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPROPERTY2 = "V2URLTests_BaseURL_RenderActurl_setProperty2";
   public final static String V2URLTESTS_BASEURL_RENDERACTURL_SETPROPERTY3 = "V2URLTests_BaseURL_RenderActurl_setProperty3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA1 = "V2URLTests_BaseURL_RenderResurl_setParameterA1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA2 = "V2URLTests_BaseURL_RenderResurl_setParameterA2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA3 = "V2URLTests_BaseURL_RenderResurl_setParameterA3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA4 = "V2URLTests_BaseURL_RenderResurl_setParameterA4";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA5 = "V2URLTests_BaseURL_RenderResurl_setParameterA5";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA6 = "V2URLTests_BaseURL_RenderResurl_setParameterA6";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA7 = "V2URLTests_BaseURL_RenderResurl_setParameterA7";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA8 = "V2URLTests_BaseURL_RenderResurl_setParameterA8";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB1 = "V2URLTests_BaseURL_RenderResurl_setParameterB1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB2 = "V2URLTests_BaseURL_RenderResurl_setParameterB2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB3 = "V2URLTests_BaseURL_RenderResurl_setParameterB3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB4 = "V2URLTests_BaseURL_RenderResurl_setParameterB4";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB5 = "V2URLTests_BaseURL_RenderResurl_setParameterB5";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB6 = "V2URLTests_BaseURL_RenderResurl_setParameterB6";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB7 = "V2URLTests_BaseURL_RenderResurl_setParameterB7";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB8 = "V2URLTests_BaseURL_RenderResurl_setParameterB8";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS1 = "V2URLTests_BaseURL_RenderResurl_setParameters1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS2 = "V2URLTests_BaseURL_RenderResurl_setParameters2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS3 = "V2URLTests_BaseURL_RenderResurl_setParameters3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS4 = "V2URLTests_BaseURL_RenderResurl_setParameters4";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS5 = "V2URLTests_BaseURL_RenderResurl_setParameters5";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS6 = "V2URLTests_BaseURL_RenderResurl_setParameters6";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS7 = "V2URLTests_BaseURL_RenderResurl_setParameters7";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS8 = "V2URLTests_BaseURL_RenderResurl_setParameters8";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS9 = "V2URLTests_BaseURL_RenderResurl_setParameters9";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS10 = "V2URLTests_BaseURL_RenderResurl_setParameters10";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS11 = "V2URLTests_BaseURL_RenderResurl_setParameters11";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS12 = "V2URLTests_BaseURL_RenderResurl_setParameters12";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS13 = "V2URLTests_BaseURL_RenderResurl_setParameters13";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS14 = "V2URLTests_BaseURL_RenderResurl_setParameters14";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETSECURE2 = "V2URLTests_BaseURL_RenderResurl_setSecure2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETSECURE3 = "V2URLTests_BaseURL_RenderResurl_setSecure3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETSECURE4 = "V2URLTests_BaseURL_RenderResurl_setSecure4";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_TOSTRING = "V2URLTests_BaseURL_RenderResurl_toString";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP1 = "V2URLTests_BaseURL_RenderResurl_getParameterMap1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP2 = "V2URLTests_BaseURL_RenderResurl_getParameterMap2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP3 = "V2URLTests_BaseURL_RenderResurl_getParameterMap3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP4 = "V2URLTests_BaseURL_RenderResurl_getParameterMap4";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP5 = "V2URLTests_BaseURL_RenderResurl_getParameterMap5";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP6 = "V2URLTests_BaseURL_RenderResurl_getParameterMap6";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_WRITEA1 = "V2URLTests_BaseURL_RenderResurl_writeA1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_WRITEA2 = "V2URLTests_BaseURL_RenderResurl_writeA2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_WRITEB1 = "V2URLTests_BaseURL_RenderResurl_writeB1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_WRITEB2 = "V2URLTests_BaseURL_RenderResurl_writeB2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_WRITEB3 = "V2URLTests_BaseURL_RenderResurl_writeB3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_ADDPROPERTY1 = "V2URLTests_BaseURL_RenderResurl_addProperty1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_ADDPROPERTY2 = "V2URLTests_BaseURL_RenderResurl_addProperty2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_ADDPROPERTY3 = "V2URLTests_BaseURL_RenderResurl_addProperty3";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPROPERTY1 = "V2URLTests_BaseURL_RenderResurl_setProperty1";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPROPERTY2 = "V2URLTests_BaseURL_RenderResurl_setProperty2";
   public final static String V2URLTESTS_BASEURL_RENDERRESURL_SETPROPERTY3 = "V2URLTests_BaseURL_RenderResurl_setProperty3";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE1 = "V2URLTests_PortletURL_RenderRenurl_setWindowState1";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE2 = "V2URLTests_PortletURL_RenderRenurl_setWindowState2";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE3 = "V2URLTests_PortletURL_RenderRenurl_setWindowState3";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE4 = "V2URLTests_PortletURL_RenderRenurl_setWindowState4";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE1 = "V2URLTests_PortletURL_RenderRenurl_setPortletMode1";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE2 = "V2URLTests_PortletURL_RenderRenurl_setPortletMode2";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE3 = "V2URLTests_PortletURL_RenderRenurl_setPortletMode3";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE4 = "V2URLTests_PortletURL_RenderRenurl_setPortletMode4";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_GETPORTLETMODE1 = "V2URLTests_PortletURL_RenderRenurl_getPortletMode1";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_GETPORTLETMODE2 = "V2URLTests_PortletURL_RenderRenurl_getPortletMode2";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_GETWINDOWSTATE1 = "V2URLTests_PortletURL_RenderRenurl_getWindowState1";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_GETWINDOWSTATE2 = "V2URLTests_PortletURL_RenderRenurl_getWindowState2";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_REMOVEPUBLICRENDERPARAMETER1 = "V2URLTests_PortletURL_RenderRenurl_removePublicRenderParameter1";
   public final static String V2URLTESTS_PORTLETURL_RENDERRENURL_REMOVEPUBLICRENDERPARAMETER2 = "V2URLTests_PortletURL_RenderRenurl_removePublicRenderParameter2";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE1 = "V2URLTests_PortletURL_RenderActurl_setWindowState1";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE2 = "V2URLTests_PortletURL_RenderActurl_setWindowState2";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE3 = "V2URLTests_PortletURL_RenderActurl_setWindowState3";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE4 = "V2URLTests_PortletURL_RenderActurl_setWindowState4";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE1 = "V2URLTests_PortletURL_RenderActurl_setPortletMode1";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE2 = "V2URLTests_PortletURL_RenderActurl_setPortletMode2";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE3 = "V2URLTests_PortletURL_RenderActurl_setPortletMode3";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE4 = "V2URLTests_PortletURL_RenderActurl_setPortletMode4";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_GETPORTLETMODE1 = "V2URLTests_PortletURL_RenderActurl_getPortletMode1";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_GETPORTLETMODE2 = "V2URLTests_PortletURL_RenderActurl_getPortletMode2";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_GETWINDOWSTATE1 = "V2URLTests_PortletURL_RenderActurl_getWindowState1";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_GETWINDOWSTATE2 = "V2URLTests_PortletURL_RenderActurl_getWindowState2";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_REMOVEPUBLICRENDERPARAMETER1 = "V2URLTests_PortletURL_RenderActurl_removePublicRenderParameter1";
   public final static String V2URLTESTS_PORTLETURL_RENDERACTURL_REMOVEPUBLICRENDERPARAMETER2 = "V2URLTests_PortletURL_RenderActurl_removePublicRenderParameter2";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDFULL = "V2URLTests_ResourceURL_RenderResurl_fieldFULL";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDPAGE = "V2URLTests_ResourceURL_RenderResurl_fieldPAGE";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDPORTLET = "V2URLTests_ResourceURL_RenderResurl_fieldPORTLET";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDSHARED = "V2URLTests_ResourceURL_RenderResurl_fieldSHARED";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_IMPLEMENTSBASEURL2 = "V2URLTests_ResourceURL_RenderResurl_implementsBaseURL2";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_SETRESOURCEID = "V2URLTests_ResourceURL_RenderResurl_setResourceID";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_GETCACHEABILITY = "V2URLTests_ResourceURL_RenderResurl_getCacheability";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_SETCACHEABILITY1 = "V2URLTests_ResourceURL_RenderResurl_setCacheability1";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_SETCACHEABILITY2 = "V2URLTests_ResourceURL_RenderResurl_setCacheability2";
   public final static String V2URLTESTS_RESOURCEURL_RENDERRESURL_SETCACHEABILITY3 = "V2URLTests_ResourceURL_RenderResurl_setCacheability3";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_CONFIGURATION = "V2URLTests_PortletURLGenerationListener_Render_configuration";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL1 = "V2URLTests_PortletURLGenerationListener_Render_filterActionURL1";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL2 = "V2URLTests_PortletURLGenerationListener_Render_filterActionURL2";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL3 = "V2URLTests_PortletURLGenerationListener_Render_filterActionURL3";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL4 = "V2URLTests_PortletURLGenerationListener_Render_filterActionURL4";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL5 = "V2URLTests_PortletURLGenerationListener_Render_filterRenderURL5";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL6 = "V2URLTests_PortletURLGenerationListener_Render_filterRenderURL6";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL7 = "V2URLTests_PortletURLGenerationListener_Render_filterRenderURL7";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL8 = "V2URLTests_PortletURLGenerationListener_Render_filterRenderURL8";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL1 = "V2URLTests_PortletURLGenerationListener_Render_filterResourceURL1";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL2 = "V2URLTests_PortletURLGenerationListener_Render_filterResourceURL2";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL3 = "V2URLTests_PortletURLGenerationListener_Render_filterResourceURL3";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL4 = "V2URLTests_PortletURLGenerationListener_Render_filterResourceURL4";
   public final static String V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL5 = "V2URLTests_PortletURLGenerationListener_Render_filterResourceURL5";
   public final static String V2EXCEPTIONTESTS_PORTLETMODEEXCEPTION_RENDER_HASGETMODE2 = "V2ExceptionTests_PortletModeException_Render_hasGetMode2";
   public final static String V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_ISPERMANENT1 = "V2ExceptionTests_UnavailableException_Render_isPermanent1";
   public final static String V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_ISPERMANENT2 = "V2ExceptionTests_UnavailableException_Render_isPermanent2";
   public final static String V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_ISPERMANENT3 = "V2ExceptionTests_UnavailableException_Render_isPermanent3";
   public final static String V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_GETUNAVAILABLESECONDS1 = "V2ExceptionTests_UnavailableException_Render_getUnavailableSeconds1";
   public final static String V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_GETUNAVAILABLESECONDS2 = "V2ExceptionTests_UnavailableException_Render_getUnavailableSeconds2";
   public final static String V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_CONSTRUCTOR2 = "V2ExceptionTests_ValidatorException_Render_constructor2";
   public final static String V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_CONSTRUCTOR4 = "V2ExceptionTests_ValidatorException_Render_constructor4";
   public final static String V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_CONSTRUCTOR6 = "V2ExceptionTests_ValidatorException_Render_constructor6";
   public final static String V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_GETFAILEDKEYS1 = "V2ExceptionTests_ValidatorException_Render_getFailedKeys1";
   public final static String V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_GETFAILEDKEYS2 = "V2ExceptionTests_ValidatorException_Render_getFailedKeys2";
   public final static String V2EXCEPTIONTESTS_WINDOWSTATEEXCEPTION_RENDER_GETSTATE = "V2ExceptionTests_WindowStateException_Render_getState";
   public final static String V2ANNOTATIONTESTS_PROCESSACTION_ACTION_NAME = "V2AnnotationTests_ProcessAction_Action_name";
   public final static String V2ANNOTATIONTESTS_PROCESSEVENT_EVENT_QNAME = "V2AnnotationTests_ProcessEvent_Event_qname";
   public final static String V2ANNOTATIONTESTS_PROCESSEVENT_EVENT_NAME = "V2AnnotationTests_ProcessEvent_Event_name";
   public final static String V2ANNOTATIONTESTS_RENDERMODE_RENDER_NAME = "V2AnnotationTests_RenderMode_Render_name";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPORTLETNAME = "V2PortletTests_PortletConfig_Render_getPortletName";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPORTLETCONTEXT = "V2PortletTests_PortletConfig_Render_getPortletContext";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETRESOURCEBUNDLE = "V2PortletTests_PortletConfig_Render_getResourceBundle";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETINITPARAMETER1 = "V2PortletTests_PortletConfig_Render_getInitParameter1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETINITPARAMETER3 = "V2PortletTests_PortletConfig_Render_getInitParameter3";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETINITPARAMETERNAMES1 = "V2PortletTests_PortletConfig_Render_getInitParameterNames1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPUBLICRENDERPARAMETERNAMES1 = "V2PortletTests_PortletConfig_Render_getPublicRenderParameterNames1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETDEFAULTNAMESPACE1 = "V2PortletTests_PortletConfig_Render_getDefaultNamespace1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPUBLISHINGEVENTQNAMES1 = "V2PortletTests_PortletConfig_Render_getPublishingEventQNames1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPROCESSINGEVENTQNAMES1 = "V2PortletTests_PortletConfig_Render_getProcessingEventQNames1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETSUPPORTEDLOCALES1 = "V2PortletTests_PortletConfig_Render_getSupportedLocales1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS1 = "V2PortletTests_PortletConfig_Render_getContainerRuntimeOptions1";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS2 = "V2PortletTests_PortletConfig_Render_getContainerRuntimeOptions2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS3 = "V2PortletTests_PortletConfig_Render_getContainerRuntimeOptions3";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS4 = "V2PortletTests_PortletConfig_Render_getContainerRuntimeOptions4";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETINITPARAMETER2 = "V2PortletTests_PortletConfig_Render2_getInitParameter2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETINITPARAMETERNAMES2 = "V2PortletTests_PortletConfig_Render2_getInitParameterNames2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETPUBLICRENDERPARAMETERNAMES2 = "V2PortletTests_PortletConfig_Render2_getPublicRenderParameterNames2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETDEFAULTNAMESPACE2 = "V2PortletTests_PortletConfig_Render2_getDefaultNamespace2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETPUBLISHINGEVENTQNAMES2 = "V2PortletTests_PortletConfig_Render2_getPublishingEventQNames2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETPROCESSINGEVENTQNAMES2 = "V2PortletTests_PortletConfig_Render2_getProcessingEventQNames2";
   public final static String V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETSUPPORTEDLOCALES2 = "V2PortletTests_PortletConfig_Render2_getSupportedLocales2";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_CONSTRUCTOR1 = "V2PortletTests_PortletMode_Render_constructor1";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_CONSTRUCTOR2 = "V2PortletTests_PortletMode_Render_constructor2";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_FIELDEDIT = "V2PortletTests_PortletMode_Render_fieldEDIT";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_FIELDHELP = "V2PortletTests_PortletMode_Render_fieldHELP";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_FIELDVIEW = "V2PortletTests_PortletMode_Render_fieldVIEW";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_TOSTRING = "V2PortletTests_PortletMode_Render_toString";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_HASHCODE = "V2PortletTests_PortletMode_Render_hashCode";
   public final static String V2PORTLETTESTS_PORTLETMODE_RENDER_EQUALS = "V2PortletTests_PortletMode_Render_equals";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_CONSTRUCTOR1 = "V2PortletTests_WindowState_Render_constructor1";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_CONSTRUCTOR2 = "V2PortletTests_WindowState_Render_constructor2";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_FIELDMAXIMIZED = "V2PortletTests_WindowState_Render_fieldMAXIMIZED";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_FIELDMINIMIZED = "V2PortletTests_WindowState_Render_fieldMINIMIZED";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_FIELDNORMAL = "V2PortletTests_WindowState_Render_fieldNORMAL";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_TOSTRING = "V2PortletTests_WindowState_Render_toString";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_HASHCODE = "V2PortletTests_WindowState_Render_hashCode";
   public final static String V2PORTLETTESTS_WINDOWSTATE_RENDER_EQUALS = "V2PortletTests_WindowState_Render_equals";
   public final static String V2PORTLETTESTS_PORTLET_RENDER_INIT1 = "V2PortletTests_Portlet_Render_init1";
   public final static String V2PORTLETTESTS_PORTLET_RENDER_INIT2 = "V2PortletTests_Portlet_Render_init2";
   public final static String V2PORTLETTESTS_PORTLET_RENDER_RENDER1 = "V2PortletTests_Portlet_Render_render1";
   public final static String V2PORTLETTESTS_PORTLET_RENDER_RENDER2 = "V2PortletTests_Portlet_Render_render2";
   public final static String V2PORTLETTESTS_PORTLET_ACTION_PROCESSACTION = "V2PortletTests_Portlet_Action_processAction";
   public final static String V2PORTLETTESTS_EVENT_EVENT_GETQNAME1 = "V2PortletTests_Event_Event_getQName1";
   public final static String V2PORTLETTESTS_EVENT_EVENT_GETQNAME2 = "V2PortletTests_Event_Event_getQName2";
   public final static String V2PORTLETTESTS_EVENT_EVENT_GETNAME1 = "V2PortletTests_Event_Event_getName1";
   public final static String V2PORTLETTESTS_EVENT_EVENT_GETNAME2 = "V2PortletTests_Event_Event_getName2";
   public final static String V2PORTLETTESTS_EVENT_EVENT_GETVALUE1 = "V2PortletTests_Event_Event_getValue1";
   public final static String V2PORTLETTESTS_EVENT_EVENT_GETVALUE2 = "V2PortletTests_Event_Event_getValue2";
   public final static String V2PORTLETTESTS_EVENTPORTLET_EVENT_PROCESSEVENT = "V2PortletTests_EventPortlet_Event_processEvent";
   public final static String V2PORTLETTESTS_RESOURCESERVINGPORTLET_RESOURCE_SERVERESOURCE = "V2PortletTests_ResourceServingPortlet_Resource_serveResource";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_INITA = "V2PortletTests_GenericPortlet_Render_initA";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_INITB = "V2PortletTests_GenericPortlet_Render_initB";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSACTION1 = "V2PortletTests_GenericPortlet_Render_processAction1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSACTION2 = "V2PortletTests_GenericPortlet_Render_processAction2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSACTION3 = "V2PortletTests_GenericPortlet_Render_processAction3";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER1 = "V2PortletTests_GenericPortlet_Render_render1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER2 = "V2PortletTests_GenericPortlet_Render_render2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER3 = "V2PortletTests_GenericPortlet_Render_render3";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER4 = "V2PortletTests_GenericPortlet_Render_render4";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER5 = "V2PortletTests_GenericPortlet_Render_render5";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER6 = "V2PortletTests_GenericPortlet_Render_render6";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER7 = "V2PortletTests_GenericPortlet_Render_render7";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER8 = "V2PortletTests_GenericPortlet_Render_render8";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER9 = "V2PortletTests_GenericPortlet_Render_render9";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER10 = "V2PortletTests_GenericPortlet_Render_render10";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_GETTITLE1 = "V2PortletTests_GenericPortlet_Render_getTitle1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_GETTITLE2 = "V2PortletTests_GenericPortlet_Render_getTitle2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_GETTITLE3 = "V2PortletTests_GenericPortlet_Render_getTitle3";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH1 = "V2PortletTests_GenericPortlet_Render_doDispatch1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH2 = "V2PortletTests_GenericPortlet_Render_doDispatch2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH3 = "V2PortletTests_GenericPortlet_Render_doDispatch3";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH4 = "V2PortletTests_GenericPortlet_Render_doDispatch4";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH5 = "V2PortletTests_GenericPortlet_Render_doDispatch5";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH6 = "V2PortletTests_GenericPortlet_Render_doDispatch6";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH7 = "V2PortletTests_GenericPortlet_Render_doDispatch7";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOVIEW1 = "V2PortletTests_GenericPortlet_Render_doView1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOVIEW2 = "V2PortletTests_GenericPortlet_Render_doView2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOEDIT1 = "V2PortletTests_GenericPortlet_Render_doEdit1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOEDIT2 = "V2PortletTests_GenericPortlet_Render_doEdit2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHELP1 = "V2PortletTests_GenericPortlet_Render_doHelp1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHELP2 = "V2PortletTests_GenericPortlet_Render_doHelp2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_GETPORTLETCONFIG = "V2PortletTests_GenericPortlet_Render_getPortletConfig";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DESTROY = "V2PortletTests_GenericPortlet_Render_destroy";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_SERVERESOURCE1 = "V2PortletTests_GenericPortlet_Render_serveResource1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_SERVERESOURCE2 = "V2PortletTests_GenericPortlet_Render_serveResource2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_SERVERESOURCE3 = "V2PortletTests_GenericPortlet_Render_serveResource3";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSEVENT1 = "V2PortletTests_GenericPortlet_Render_processEvent1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSEVENT2 = "V2PortletTests_GenericPortlet_Render_processEvent2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSEVENT3 = "V2PortletTests_GenericPortlet_Render_processEvent3";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHEADERS1 = "V2PortletTests_GenericPortlet_Render_doHeaders1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHEADERS2 = "V2PortletTests_GenericPortlet_Render_doHeaders2";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_GETNEXTPOSSIBLEPORTLETMODES1 = "V2PortletTests_GenericPortlet_Render_getNextPossiblePortletModes1";
   public final static String V2PORTLETTESTS_GENERICPORTLET_RENDER_GETNEXTPOSSIBLEPORTLETMODES2 = "V2PortletTests_GenericPortlet_Render_getNextPossiblePortletModes2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETEXPIRATIONTIME1 = "V2EnvironmentTests_CacheControl_Render_getExpirationTime1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETEXPIRATIONTIME2 = "V2EnvironmentTests_CacheControl_Render_getExpirationTime2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETEXPIRATIONTIME3 = "V2EnvironmentTests_CacheControl_Render_getExpirationTime3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETEXPIRATIONTIME1 = "V2EnvironmentTests_CacheControl_Render_setExpirationTime1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETEXPIRATIONTIME2 = "V2EnvironmentTests_CacheControl_Render_setExpirationTime2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETEXPIRATIONTIME3 = "V2EnvironmentTests_CacheControl_Render_setExpirationTime3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE1 = "V2EnvironmentTests_CacheControl_Render_isPublicScope1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE2 = "V2EnvironmentTests_CacheControl_Render_isPublicScope2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE3 = "V2EnvironmentTests_CacheControl_Render_isPublicScope3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE5 = "V2EnvironmentTests_CacheControl_Render_isPublicScope5";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETPUBLICSCOPE1 = "V2EnvironmentTests_CacheControl_Render_setPublicScope1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETPUBLICSCOPE2 = "V2EnvironmentTests_CacheControl_Render_setPublicScope2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETETAG1 = "V2EnvironmentTests_CacheControl_Render_getETag1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETETAG2 = "V2EnvironmentTests_CacheControl_Render_getETag2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETETAG1 = "V2EnvironmentTests_CacheControl_Render_setETag1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETETAG2 = "V2EnvironmentTests_CacheControl_Render_setETag2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETETAG3 = "V2EnvironmentTests_CacheControl_Render_setETag3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_USECACHEDCONTENT1 = "V2EnvironmentTests_CacheControl_Render_useCachedContent1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_USECACHEDCONTENT2 = "V2EnvironmentTests_CacheControl_Render_useCachedContent2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_USECACHEDCONTENT3 = "V2EnvironmentTests_CacheControl_Render_useCachedContent3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETUSECACHEDCONTENT1 = "V2EnvironmentTests_CacheControl_Render_setUseCachedContent1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETUSECACHEDCONTENT2 = "V2EnvironmentTests_CacheControl_Render_setUseCachedContent2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETEXPIRATIONTIME1 = "V2EnvironmentTests_CacheControl_Resource_getExpirationTime1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETEXPIRATIONTIME2 = "V2EnvironmentTests_CacheControl_Resource_getExpirationTime2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETEXPIRATIONTIME3 = "V2EnvironmentTests_CacheControl_Resource_getExpirationTime3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETEXPIRATIONTIME1 = "V2EnvironmentTests_CacheControl_Resource_setExpirationTime1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETEXPIRATIONTIME2 = "V2EnvironmentTests_CacheControl_Resource_setExpirationTime2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETEXPIRATIONTIME3 = "V2EnvironmentTests_CacheControl_Resource_setExpirationTime3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE1 = "V2EnvironmentTests_CacheControl_Resource_isPublicScope1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE2 = "V2EnvironmentTests_CacheControl_Resource_isPublicScope2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE3 = "V2EnvironmentTests_CacheControl_Resource_isPublicScope3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE5 = "V2EnvironmentTests_CacheControl_Resource_isPublicScope5";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETPUBLICSCOPE1 = "V2EnvironmentTests_CacheControl_Resource_setPublicScope1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETPUBLICSCOPE2 = "V2EnvironmentTests_CacheControl_Resource_setPublicScope2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETETAG1 = "V2EnvironmentTests_CacheControl_Resource_getETag1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETETAG2 = "V2EnvironmentTests_CacheControl_Resource_getETag2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETETAG1 = "V2EnvironmentTests_CacheControl_Resource_setETag1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETETAG2 = "V2EnvironmentTests_CacheControl_Resource_setETag2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETETAG3 = "V2EnvironmentTests_CacheControl_Resource_setETag3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_USECACHEDCONTENT1 = "V2EnvironmentTests_CacheControl_Resource_useCachedContent1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_USECACHEDCONTENT2 = "V2EnvironmentTests_CacheControl_Resource_useCachedContent2";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_USECACHEDCONTENT3 = "V2EnvironmentTests_CacheControl_Resource_useCachedContent3";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETUSECACHEDCONTENT1 = "V2EnvironmentTests_CacheControl_Resource_setUseCachedContent1";
   public final static String V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETUSECACHEDCONTENT2 = "V2EnvironmentTests_CacheControl_Resource_setUseCachedContent2";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_FIELDMARKUP_HEAD_ELEMENT_SUPPORT = "V2EnvironmentTests_PortalContext_Render_fieldMARKUP_HEAD_ELEMENT_SUPPORT";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTY1 = "V2EnvironmentTests_PortalContext_Render_getProperty1";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTY2 = "V2EnvironmentTests_PortalContext_Render_getProperty2";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTY3 = "V2EnvironmentTests_PortalContext_Render_getProperty3";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTYNAMES1 = "V2EnvironmentTests_PortalContext_Render_getPropertyNames1";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTYNAMES2 = "V2EnvironmentTests_PortalContext_Render_getPropertyNames2";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES1 = "V2EnvironmentTests_PortalContext_Render_getSupportedPortletModes1";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES2 = "V2EnvironmentTests_PortalContext_Render_getSupportedPortletModes2";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES3 = "V2EnvironmentTests_PortalContext_Render_getSupportedPortletModes3";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES4 = "V2EnvironmentTests_PortalContext_Render_getSupportedPortletModes4";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES1 = "V2EnvironmentTests_PortalContext_Render_getSupportedWindowStates1";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES2 = "V2EnvironmentTests_PortalContext_Render_getSupportedWindowStates2";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES3 = "V2EnvironmentTests_PortalContext_Render_getSupportedWindowStates3";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES4 = "V2EnvironmentTests_PortalContext_Render_getSupportedWindowStates4";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO1 = "V2EnvironmentTests_PortalContext_Render_getPortalInfo1";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO2 = "V2EnvironmentTests_PortalContext_Render_getPortalInfo2";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO3 = "V2EnvironmentTests_PortalContext_Render_getPortalInfo3";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO4 = "V2EnvironmentTests_PortalContext_Render_getPortalInfo4";
   public final static String V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO5 = "V2EnvironmentTests_PortalContext_Render_getPortalInfo5";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO1 = "V2EnvironmentTests_PortletContext_Render_getServerInfo1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO2 = "V2EnvironmentTests_PortletContext_Render_getServerInfo2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO3 = "V2EnvironmentTests_PortletContext_Render_getServerInfo3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO4 = "V2EnvironmentTests_PortletContext_Render_getServerInfo4";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO5 = "V2EnvironmentTests_PortletContext_Render_getServerInfo5";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREQUESTDISPATCHER1 = "V2EnvironmentTests_PortletContext_Render_getRequestDispatcher1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREQUESTDISPATCHER2 = "V2EnvironmentTests_PortletContext_Render_getRequestDispatcher2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREQUESTDISPATCHER3 = "V2EnvironmentTests_PortletContext_Render_getRequestDispatcher3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETNAMEDDISPATCHER1 = "V2EnvironmentTests_PortletContext_Render_getNamedDispatcher1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETNAMEDDISPATCHER2 = "V2EnvironmentTests_PortletContext_Render_getNamedDispatcher2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEASSTREAM1 = "V2EnvironmentTests_PortletContext_Render_getResourceAsStream1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEASSTREAM2 = "V2EnvironmentTests_PortletContext_Render_getResourceAsStream2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEASSTREAM3 = "V2EnvironmentTests_PortletContext_Render_getResourceAsStream3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMAJORVERSION = "V2EnvironmentTests_PortletContext_Render_getMajorVersion";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMINORVERSION = "V2EnvironmentTests_PortletContext_Render_getMinorVersion";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE1 = "V2EnvironmentTests_PortletContext_Render_getMimeType1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE2 = "V2EnvironmentTests_PortletContext_Render_getMimeType2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE3 = "V2EnvironmentTests_PortletContext_Render_getMimeType3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE4 = "V2EnvironmentTests_PortletContext_Render_getMimeType4";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE5 = "V2EnvironmentTests_PortletContext_Render_getMimeType5";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREALPATH1 = "V2EnvironmentTests_PortletContext_Render_getRealPath1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREALPATH2 = "V2EnvironmentTests_PortletContext_Render_getRealPath2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREALPATH3 = "V2EnvironmentTests_PortletContext_Render_getRealPath3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS1 = "V2EnvironmentTests_PortletContext_Render_getResourcePaths1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS2 = "V2EnvironmentTests_PortletContext_Render_getResourcePaths2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS3 = "V2EnvironmentTests_PortletContext_Render_getResourcePaths3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS4 = "V2EnvironmentTests_PortletContext_Render_getResourcePaths4";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE1 = "V2EnvironmentTests_PortletContext_Render_getResource1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE2 = "V2EnvironmentTests_PortletContext_Render_getResource2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE3 = "V2EnvironmentTests_PortletContext_Render_getResource3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE4 = "V2EnvironmentTests_PortletContext_Render_getResource4";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTE1 = "V2EnvironmentTests_PortletContext_Render_getAttribute1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTE2 = "V2EnvironmentTests_PortletContext_Render_getAttribute2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTE3 = "V2EnvironmentTests_PortletContext_Render_getAttribute3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTENAMES1 = "V2EnvironmentTests_PortletContext_Render_getAttributeNames1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTENAMES2 = "V2EnvironmentTests_PortletContext_Render_getAttributeNames2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETER1 = "V2EnvironmentTests_PortletContext_Render_getInitParameter1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETER2 = "V2EnvironmentTests_PortletContext_Render_getInitParameter2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETER3 = "V2EnvironmentTests_PortletContext_Render_getInitParameter3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETERNAMES1 = "V2EnvironmentTests_PortletContext_Render_getInitParameterNames1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETERNAMES2 = "V2EnvironmentTests_PortletContext_Render_getInitParameterNames2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_LOGA = "V2EnvironmentTests_PortletContext_Render_logA";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_LOGB = "V2EnvironmentTests_PortletContext_Render_logB";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_REMOVEATTRIBUTE1 = "V2EnvironmentTests_PortletContext_Render_removeAttribute1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_REMOVEATTRIBUTE2 = "V2EnvironmentTests_PortletContext_Render_removeAttribute2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE1 = "V2EnvironmentTests_PortletContext_Render_setAttribute1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE2 = "V2EnvironmentTests_PortletContext_Render_setAttribute2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE3 = "V2EnvironmentTests_PortletContext_Render_setAttribute3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE4 = "V2EnvironmentTests_PortletContext_Render_setAttribute4";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETPORTLETCONTEXTNAME1 = "V2EnvironmentTests_PortletContext_Render_getPortletContextName1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETPORTLETCONTEXTNAME2 = "V2EnvironmentTests_PortletContext_Render_getPortletContextName2";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETPORTLETCONTEXTNAME3 = "V2EnvironmentTests_PortletContext_Render_getPortletContextName3";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETCONTAINERRUNTIMEOPTIONS1 = "V2EnvironmentTests_PortletContext_Render_getContainerRuntimeOptions1";
   public final static String V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETCONTAINERRUNTIMEOPTIONS2 = "V2EnvironmentTests_PortletContext_Render_getContainerRuntimeOptions2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY1 = "V2EnvironmentTests_PortletPreferences_Render_isReadOnly1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY2 = "V2EnvironmentTests_PortletPreferences_Render_isReadOnly2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY3 = "V2EnvironmentTests_PortletPreferences_Render_isReadOnly3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY4 = "V2EnvironmentTests_PortletPreferences_Render_isReadOnly4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE1 = "V2EnvironmentTests_PortletPreferences_Render_getValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE2 = "V2EnvironmentTests_PortletPreferences_Render_getValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE3 = "V2EnvironmentTests_PortletPreferences_Render_getValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE4 = "V2EnvironmentTests_PortletPreferences_Render_getValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES1 = "V2EnvironmentTests_PortletPreferences_Render_getValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES2 = "V2EnvironmentTests_PortletPreferences_Render_getValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES3 = "V2EnvironmentTests_PortletPreferences_Render_getValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES4 = "V2EnvironmentTests_PortletPreferences_Render_getValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_SETVALUE4 = "V2EnvironmentTests_PortletPreferences_Render_setValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETNAMES1 = "V2EnvironmentTests_PortletPreferences_Render_getNames1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETNAMES2 = "V2EnvironmentTests_PortletPreferences_Render_getNames2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETMAP1 = "V2EnvironmentTests_PortletPreferences_Render_getMap1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETMAP2 = "V2EnvironmentTests_PortletPreferences_Render_getMap2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_RESET2 = "V2EnvironmentTests_PortletPreferences_Render_reset2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_STORE5 = "V2EnvironmentTests_PortletPreferences_Render_store5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY1 = "V2EnvironmentTests_PortletPreferences_Action_isReadOnly1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY2 = "V2EnvironmentTests_PortletPreferences_Action_isReadOnly2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY3 = "V2EnvironmentTests_PortletPreferences_Action_isReadOnly3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY4 = "V2EnvironmentTests_PortletPreferences_Action_isReadOnly4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE1 = "V2EnvironmentTests_PortletPreferences_Action_getValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE2 = "V2EnvironmentTests_PortletPreferences_Action_getValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE3 = "V2EnvironmentTests_PortletPreferences_Action_getValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE4 = "V2EnvironmentTests_PortletPreferences_Action_getValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES1 = "V2EnvironmentTests_PortletPreferences_Action_getValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES2 = "V2EnvironmentTests_PortletPreferences_Action_getValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES3 = "V2EnvironmentTests_PortletPreferences_Action_getValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES4 = "V2EnvironmentTests_PortletPreferences_Action_getValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE1 = "V2EnvironmentTests_PortletPreferences_Action_setValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE2 = "V2EnvironmentTests_PortletPreferences_Action_setValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE3 = "V2EnvironmentTests_PortletPreferences_Action_setValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE4 = "V2EnvironmentTests_PortletPreferences_Action_setValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE5 = "V2EnvironmentTests_PortletPreferences_Action_setValue5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES1 = "V2EnvironmentTests_PortletPreferences_Action_setValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES2 = "V2EnvironmentTests_PortletPreferences_Action_setValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES3 = "V2EnvironmentTests_PortletPreferences_Action_setValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES4 = "V2EnvironmentTests_PortletPreferences_Action_setValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES5 = "V2EnvironmentTests_PortletPreferences_Action_setValues5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES6 = "V2EnvironmentTests_PortletPreferences_Action_setValues6";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETNAMES1 = "V2EnvironmentTests_PortletPreferences_Action_getNames1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETNAMES2 = "V2EnvironmentTests_PortletPreferences_Action_getNames2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETMAP1 = "V2EnvironmentTests_PortletPreferences_Action_getMap1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETMAP2 = "V2EnvironmentTests_PortletPreferences_Action_getMap2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_RESET1 = "V2EnvironmentTests_PortletPreferences_Action_reset1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_RESET2 = "V2EnvironmentTests_PortletPreferences_Action_reset2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_RESET3 = "V2EnvironmentTests_PortletPreferences_Action_reset3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE1 = "V2EnvironmentTests_PortletPreferences_Action_store1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE2 = "V2EnvironmentTests_PortletPreferences_Action_store2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE3 = "V2EnvironmentTests_PortletPreferences_Action_store3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE4 = "V2EnvironmentTests_PortletPreferences_Action_store4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE5 = "V2EnvironmentTests_PortletPreferences_Action_store5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE6 = "V2EnvironmentTests_PortletPreferences_Action_store6";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_ACTION_CANBECONFIGURED = "V2EnvironmentTests_PreferencesValidator_Action_canBeConfigured";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_ACTION_VALIDATE1 = "V2EnvironmentTests_PreferencesValidator_Action_validate1";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_ACTION_VALIDATE2 = "V2EnvironmentTests_PreferencesValidator_Action_validate2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY1 = "V2EnvironmentTests_PortletPreferences_Event_isReadOnly1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY2 = "V2EnvironmentTests_PortletPreferences_Event_isReadOnly2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY3 = "V2EnvironmentTests_PortletPreferences_Event_isReadOnly3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY4 = "V2EnvironmentTests_PortletPreferences_Event_isReadOnly4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE1 = "V2EnvironmentTests_PortletPreferences_Event_getValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE2 = "V2EnvironmentTests_PortletPreferences_Event_getValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE3 = "V2EnvironmentTests_PortletPreferences_Event_getValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE4 = "V2EnvironmentTests_PortletPreferences_Event_getValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES1 = "V2EnvironmentTests_PortletPreferences_Event_getValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES2 = "V2EnvironmentTests_PortletPreferences_Event_getValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES3 = "V2EnvironmentTests_PortletPreferences_Event_getValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES4 = "V2EnvironmentTests_PortletPreferences_Event_getValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE1 = "V2EnvironmentTests_PortletPreferences_Event_setValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE2 = "V2EnvironmentTests_PortletPreferences_Event_setValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE3 = "V2EnvironmentTests_PortletPreferences_Event_setValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE4 = "V2EnvironmentTests_PortletPreferences_Event_setValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE5 = "V2EnvironmentTests_PortletPreferences_Event_setValue5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES1 = "V2EnvironmentTests_PortletPreferences_Event_setValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES2 = "V2EnvironmentTests_PortletPreferences_Event_setValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES3 = "V2EnvironmentTests_PortletPreferences_Event_setValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES4 = "V2EnvironmentTests_PortletPreferences_Event_setValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES5 = "V2EnvironmentTests_PortletPreferences_Event_setValues5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES6 = "V2EnvironmentTests_PortletPreferences_Event_setValues6";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETNAMES1 = "V2EnvironmentTests_PortletPreferences_Event_getNames1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETNAMES2 = "V2EnvironmentTests_PortletPreferences_Event_getNames2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETMAP1 = "V2EnvironmentTests_PortletPreferences_Event_getMap1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETMAP2 = "V2EnvironmentTests_PortletPreferences_Event_getMap2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_RESET1 = "V2EnvironmentTests_PortletPreferences_Event_reset1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_RESET2 = "V2EnvironmentTests_PortletPreferences_Event_reset2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_RESET3 = "V2EnvironmentTests_PortletPreferences_Event_reset3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE1 = "V2EnvironmentTests_PortletPreferences_Event_store1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE2 = "V2EnvironmentTests_PortletPreferences_Event_store2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE3 = "V2EnvironmentTests_PortletPreferences_Event_store3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE4 = "V2EnvironmentTests_PortletPreferences_Event_store4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE5 = "V2EnvironmentTests_PortletPreferences_Event_store5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE6 = "V2EnvironmentTests_PortletPreferences_Event_store6";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_EVENT_CANBECONFIGURED = "V2EnvironmentTests_PreferencesValidator_Event_canBeConfigured";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_EVENT_VALIDATE1 = "V2EnvironmentTests_PreferencesValidator_Event_validate1";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_EVENT_VALIDATE2 = "V2EnvironmentTests_PreferencesValidator_Event_validate2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY1 = "V2EnvironmentTests_PortletPreferences_Resource_isReadOnly1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY2 = "V2EnvironmentTests_PortletPreferences_Resource_isReadOnly2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY3 = "V2EnvironmentTests_PortletPreferences_Resource_isReadOnly3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY4 = "V2EnvironmentTests_PortletPreferences_Resource_isReadOnly4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE1 = "V2EnvironmentTests_PortletPreferences_Resource_getValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE2 = "V2EnvironmentTests_PortletPreferences_Resource_getValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE3 = "V2EnvironmentTests_PortletPreferences_Resource_getValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE4 = "V2EnvironmentTests_PortletPreferences_Resource_getValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES1 = "V2EnvironmentTests_PortletPreferences_Resource_getValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES2 = "V2EnvironmentTests_PortletPreferences_Resource_getValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES3 = "V2EnvironmentTests_PortletPreferences_Resource_getValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES4 = "V2EnvironmentTests_PortletPreferences_Resource_getValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE1 = "V2EnvironmentTests_PortletPreferences_Resource_setValue1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE2 = "V2EnvironmentTests_PortletPreferences_Resource_setValue2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE3 = "V2EnvironmentTests_PortletPreferences_Resource_setValue3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE4 = "V2EnvironmentTests_PortletPreferences_Resource_setValue4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE5 = "V2EnvironmentTests_PortletPreferences_Resource_setValue5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES1 = "V2EnvironmentTests_PortletPreferences_Resource_setValues1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES2 = "V2EnvironmentTests_PortletPreferences_Resource_setValues2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES3 = "V2EnvironmentTests_PortletPreferences_Resource_setValues3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES4 = "V2EnvironmentTests_PortletPreferences_Resource_setValues4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES5 = "V2EnvironmentTests_PortletPreferences_Resource_setValues5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES6 = "V2EnvironmentTests_PortletPreferences_Resource_setValues6";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETNAMES1 = "V2EnvironmentTests_PortletPreferences_Resource_getNames1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETNAMES2 = "V2EnvironmentTests_PortletPreferences_Resource_getNames2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETMAP1 = "V2EnvironmentTests_PortletPreferences_Resource_getMap1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETMAP2 = "V2EnvironmentTests_PortletPreferences_Resource_getMap2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_RESET1 = "V2EnvironmentTests_PortletPreferences_Resource_reset1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_RESET2 = "V2EnvironmentTests_PortletPreferences_Resource_reset2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_RESET3 = "V2EnvironmentTests_PortletPreferences_Resource_reset3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE1 = "V2EnvironmentTests_PortletPreferences_Resource_store1";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE2 = "V2EnvironmentTests_PortletPreferences_Resource_store2";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE3 = "V2EnvironmentTests_PortletPreferences_Resource_store3";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE4 = "V2EnvironmentTests_PortletPreferences_Resource_store4";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE5 = "V2EnvironmentTests_PortletPreferences_Resource_store5";
   public final static String V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE6 = "V2EnvironmentTests_PortletPreferences_Resource_store6";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_RESOURCE_CANBECONFIGURED = "V2EnvironmentTests_PreferencesValidator_Resource_canBeConfigured";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_RESOURCE_VALIDATE1 = "V2EnvironmentTests_PreferencesValidator_Resource_validate1";
   public final static String V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_RESOURCE_VALIDATE2 = "V2EnvironmentTests_PreferencesValidator_Resource_validate2";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA1 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeA1";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA2 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeA2";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA3 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeA3";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA4 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeA4";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB1 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeB1";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB2 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeB2";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB3 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeB3";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB4 = "V2EnvironmentTests_PortletRequestDispatcher_Render_includeB4";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD1 = "V2EnvironmentTests_PortletRequestDispatcher_Render_forward1";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD2 = "V2EnvironmentTests_PortletRequestDispatcher_Render_forward2";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD3 = "V2EnvironmentTests_PortletRequestDispatcher_Render_forward3";
   public final static String V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD4 = "V2EnvironmentTests_PortletRequestDispatcher_Render_forward4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_FIELDAPPLICATION_SCOPE = "V2EnvironmentTests_PortletSession_Render_fieldAPPLICATION_SCOPE";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_FIELDPORTLET_SCOPE = "V2EnvironmentTests_PortletSession_Render_fieldPORTLET_SCOPE";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA1 = "V2EnvironmentTests_PortletSession_Render_getAttributeA1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA2 = "V2EnvironmentTests_PortletSession_Render_getAttributeA2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA3 = "V2EnvironmentTests_PortletSession_Render_getAttributeA3";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA4 = "V2EnvironmentTests_PortletSession_Render_getAttributeA4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB1 = "V2EnvironmentTests_PortletSession_Render_getAttributeB1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB2 = "V2EnvironmentTests_PortletSession_Render_getAttributeB2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB3 = "V2EnvironmentTests_PortletSession_Render_getAttributeB3";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB4 = "V2EnvironmentTests_PortletSession_Render_getAttributeB4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESA1 = "V2EnvironmentTests_PortletSession_Render_getAttributeNamesA1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESA2 = "V2EnvironmentTests_PortletSession_Render_getAttributeNamesA2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESB1 = "V2EnvironmentTests_PortletSession_Render_getAttributeNamesB1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESB2 = "V2EnvironmentTests_PortletSession_Render_getAttributeNamesB2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETCREATIONTIME1 = "V2EnvironmentTests_PortletSession_Render_getCreationTime1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETCREATIONTIME2 = "V2EnvironmentTests_PortletSession_Render_getCreationTime2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETID = "V2EnvironmentTests_PortletSession_Render_getId";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETLASTACCESSEDTIME = "V2EnvironmentTests_PortletSession_Render_getLastAccessedTime";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETMAXINACTIVEINTERVAL = "V2EnvironmentTests_PortletSession_Render_getMaxInactiveInterval";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_INVALIDATE1 = "V2EnvironmentTests_PortletSession_Render_invalidate1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_INVALIDATE2 = "V2EnvironmentTests_PortletSession_Render_invalidate2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_ISNEW1 = "V2EnvironmentTests_PortletSession_Render_isNew1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_ISNEW2 = "V2EnvironmentTests_PortletSession_Render_isNew2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA1 = "V2EnvironmentTests_PortletSession_Render_removeAttributeA1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA2 = "V2EnvironmentTests_PortletSession_Render_removeAttributeA2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA3 = "V2EnvironmentTests_PortletSession_Render_removeAttributeA3";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA4 = "V2EnvironmentTests_PortletSession_Render_removeAttributeA4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB1 = "V2EnvironmentTests_PortletSession_Render_removeAttributeB1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB2 = "V2EnvironmentTests_PortletSession_Render_removeAttributeB2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB3 = "V2EnvironmentTests_PortletSession_Render_removeAttributeB3";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB4 = "V2EnvironmentTests_PortletSession_Render_removeAttributeB4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA1 = "V2EnvironmentTests_PortletSession_Render_setAttributeA1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA2 = "V2EnvironmentTests_PortletSession_Render_setAttributeA2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA3 = "V2EnvironmentTests_PortletSession_Render_setAttributeA3";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA4 = "V2EnvironmentTests_PortletSession_Render_setAttributeA4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA5 = "V2EnvironmentTests_PortletSession_Render_setAttributeA5";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA6 = "V2EnvironmentTests_PortletSession_Render_setAttributeA6";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA7 = "V2EnvironmentTests_PortletSession_Render_setAttributeA7";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA8 = "V2EnvironmentTests_PortletSession_Render_setAttributeA8";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB1 = "V2EnvironmentTests_PortletSession_Render_setAttributeB1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB2 = "V2EnvironmentTests_PortletSession_Render_setAttributeB2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB3 = "V2EnvironmentTests_PortletSession_Render_setAttributeB3";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB4 = "V2EnvironmentTests_PortletSession_Render_setAttributeB4";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB5 = "V2EnvironmentTests_PortletSession_Render_setAttributeB5";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB6 = "V2EnvironmentTests_PortletSession_Render_setAttributeB6";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB7 = "V2EnvironmentTests_PortletSession_Render_setAttributeB7";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB8 = "V2EnvironmentTests_PortletSession_Render_setAttributeB8";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETMAXINACTIVEINTERVAL1 = "V2EnvironmentTests_PortletSession_Render_setMaxInactiveInterval1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETMAXINACTIVEINTERVAL2 = "V2EnvironmentTests_PortletSession_Render_setMaxInactiveInterval2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETPORTLETCONTEXT = "V2EnvironmentTests_PortletSession_Render_getPortletContext";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPA1 = "V2EnvironmentTests_PortletSession_Render_getAttributeMapA1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPA2 = "V2EnvironmentTests_PortletSession_Render_getAttributeMapA2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPB1 = "V2EnvironmentTests_PortletSession_Render_getAttributeMapB1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPB2 = "V2EnvironmentTests_PortletSession_Render_getAttributeMapB2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODEATTRIBUTENAME1 = "V2EnvironmentTests_PortletSessionUtil_Render_decodeAttributeName1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODEATTRIBUTENAME2 = "V2EnvironmentTests_PortletSessionUtil_Render_decodeAttributeName2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODESCOPE1 = "V2EnvironmentTests_PortletSessionUtil_Render_decodeScope1";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODESCOPE2 = "V2EnvironmentTests_PortletSessionUtil_Render_decodeScope2";
   public final static String V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODESCOPE3 = "V2EnvironmentTests_PortletSessionUtil_Render_decodeScope3";

   
   private final static Map<String, String> tcd = new HashMap<String, String>();
   static {

      tcd.put(V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONFILTER, "Invoking doFilter(ActionRequest, ActionResponse): causes next filter to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONFILTER2, "Invoking doFilter(ActionRequest, ActionResponse): causes portlet action method to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONEXCEPTION, "Invoking doFilter(ActionRequest, ActionResponse): throws PortletException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_ACTIONFILTER_INVOKEACTIONEXCEPTION2, "Invoking doFilter(ActionRequest, ActionResponse): throws IOException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTFILTER, "Invoking doFilter(EventRequest, EventResponse): causes next filter to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTFILTER2, "Invoking doFilter(EventRequest, EventResponse): causes portlet Event method to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTEXCEPTION, "Invoking doFilter(EventRequest, EventResponse): throws PortletException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_EVENTFILTER_INVOKEEVENTEXCEPTION2, "Invoking doFilter(EventRequest, EventResponse): throws IOException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDERFILTER, "Invoking doFilter(RenderRequest, RenderResponse): causes next filter to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDERFILTER2, "Invoking doFilter(RenderRequest, RenderResponse): causes portlet Render method to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDEREXCEPTION, "Invoking doFilter(RenderRequest, RenderResponse): throws PortletException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RENDERFILTER_INVOKERENDEREXCEPTION2, "Invoking doFilter(RenderRequest, RenderResponse): throws IOException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEFILTER, "Invoking doFilter(ResourceRequest, ResourceResponse): causes next filter to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEFILTER2, "Invoking doFilter(ResourceRequest, ResourceResponse): causes portlet Resource method to be invoked");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEEXCEPTION, "Invoking doFilter(ResourceRequest, ResourceResponse): throws PortletException");
      tcd.put(V2FILTERTESTS_FILTERCHAIN_RESOURCEFILTER_INVOKERESOURCEEXCEPTION2, "Invoking doFilter(ResourceRequest, ResourceResponse): throws IOException");
      tcd.put(V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETFILTERNAME, "Method getFilterName(): getFilterName method returns filter name as defined in deployment descriptor");
      tcd.put(V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETPORTLETCONTEXT, "Method getPortletContext(): Returns reference to PortletContext object");
      tcd.put(V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETER1, "Method getInitParameter(String): Returns null if initialization parameter does not exist");
      tcd.put(V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETER2, "Method getInitParameter(String): Returns value of specified initialization parameter");
      tcd.put(V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETERNAMES1, "Method getInitParameterNames(): Returns empty Enumeration if no parameters defined");
      tcd.put(V2FILTERTESTS_FILTERCONFIG_RENDERFILTER_GETINITPARAMETERNAMES2, "Method getInitParameterNames(): Returns an Enumeration of initialization parameters defined in deployment descriptor");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_ACTIONFILTER_INITACTION1, "The init(FilterConfig): method is called when an ActionFilter is configured");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_ACTIONFILTER_INITACTION2, "The init(FilterConfig): method for an ActionFilter is passed a FilterConfig object");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_ACTIONFILTER_INITACTION3, "If the init(FilterConfig): method for an ActionFilter throws a PortletException, the filter is not placed in service");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_EVENTFILTER_INITEVENT1, "The init(FilterConfig): method is called when an EventFilter is configured");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_EVENTFILTER_INITEVENT2, "The init(FilterConfig): method for an EventFilter is passed a FilterConfig object");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_EVENTFILTER_INITEVENT3, "If the init(FilterConfig): method for an EventFilter throws a PortletException, the filter is not placed in service");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_RENDERFILTER_INITRENDER1, "The init(FilterConfig): method is called when an RenderFilter is configured");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_RENDERFILTER_INITRENDER2, "The init(FilterConfig): method for an RenderFilter is passed a FilterConfig object");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_RENDERFILTER_INITRENDER3, "If the init(FilterConfig): method for an RenderFilter throws a PortletException, the filter is not placed in service");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_RESOURCEFILTER_INITRESOURCE1, "The init(FilterConfig): method is called when an ResourceFilter is configured");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_RESOURCEFILTER_INITRESOURCE2, "The init(FilterConfig): method for an ResourceFilter is passed a FilterConfig object");
      tcd.put(V2FILTERTESTS_PORTLETFILTER_RESOURCEFILTER_INITRESOURCE3, "If the init(FilterConfig): method for an ResourceFilter throws a PortletException, the filter is not placed in service");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_CANBECONFIGURED1, "An ActionFilter can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_CANBECONFIGURED2, "Multiple ActionFilter classes can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERISCALLED, "The doFilter(ActionRequest, ActionResponse, FilterChain): method is called before the processAction method for the portlet");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERPROCESSACTION1, "After the doFilter(ActionRequest, ActionResponse, FilterChain): method has sucessfully completed and invokes the next filter, the processActionMethod is called");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERPROCESSACTION2, "After the doFilter(ActionRequest, ActionResponse, FilterChain): method has sucessfully completed and invokes the next filter, the next filter in the chain is called if multiple filters are defined");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTERBLOCK, "If the doFilter(ActionRequest, ActionResponse, FilterChain): method does not invoke the next filter, processAction is not called");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTEREXCEPTION1, "If the doFilter(ActionRequest, ActionResponse, FilterChain): method throws an UnavailableException, processAction is not called");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTEREXCEPTION2, "If the doFilter(ActionRequest, ActionResponse, FilterChain): method throws an UnavailableException, no further filter is called");
      tcd.put(V2FILTERTESTS_ACTIONFILTER_ACTIONFILTER_DOFILTEREXAMINE, "Method doFilter(ActionRequest, ActionResponse, FilterChain): After the next filter has been successfully invoked, the ActionResponse may be examined");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_CANBECONFIGURED1, "An EventFilter can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_CANBECONFIGURED2, "Multiple EventFilter classes can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERISCALLED, "The doFilter(EventRequest, EventResponse, FilterChain): method is called before the processEvent method for the portlet");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERPROCESSEVENT1, "After the doFilter(EventRequest, EventResponse, FilterChain): method has sucessfully completed and invokes the next filter, the processEventMethod is called");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERPROCESSEVENT2, "After the doFilter(EventRequest, EventResponse, FilterChain): method has sucessfully completed and invokes the next filter, the next filter in the chain is called if multiple filters are defined");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTERBLOCK, "If the doFilter(EventRequest, EventResponse, FilterChain): method does not invoke the next filter, processEvent is not called");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTEREXCEPTION1, "If the doFilter(EventRequest, EventResponse, FilterChain): method throws an UnavailableException, processEvent is not called");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTEREXCEPTION2, "If the doFilter(EventRequest, EventResponse, FilterChain): method throws an UnavailableException, no further filter is called");
      tcd.put(V2FILTERTESTS_EVENTFILTER_EVENTFILTER_DOFILTEREXAMINE, "Method doFilter(EventRequest, EventResponse, FilterChain): After the next filter has been successfully invoked, the EventResponse may be examined");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_CANBECONFIGURED1, "An RenderFilter can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_CANBECONFIGURED2, "Multiple RenderFilter classes can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERISCALLED, "The doFilter(RenderRequest, RenderResponse, FilterChain): method is called before the processRender method for the portlet");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERPROCESSRENDER1, "After the doFilter(RenderRequest, RenderResponse, FilterChain): method has sucessfully completed and invokes the next filter, the processRenderMethod is called");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERPROCESSRENDER2, "After the doFilter(RenderRequest, RenderResponse, FilterChain): method has sucessfully completed and invokes the next filter, the next filter in the chain is called if multiple filters are defined");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTERBLOCK, "If the doFilter(RenderRequest, RenderResponse, FilterChain): method does not invoke the next filter, processRender is not called");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTEREXCEPTION1, "If the doFilter(RenderRequest, RenderResponse, FilterChain): method throws an UnavailableException, processRender is not called");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTEREXCEPTION2, "If the doFilter(RenderRequest, RenderResponse, FilterChain): method throws an UnavailableException, no further filter is called");
      tcd.put(V2FILTERTESTS_RENDERFILTER_RENDERFILTER_DOFILTEREXAMINE, "Method doFilter(RenderRequest, RenderResponse, FilterChain): After the next filter has been successfully invoked, the RenderResponse may be examined");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_CANBECONFIGURED1, "An ResourceFilter can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_CANBECONFIGURED2, "Multiple ResourceFilter classes can be configured in the portlet descriptor");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERISCALLED, "The doFilter(ResourceRequest, ResourceResponse, FilterChain): method is called before the processResource method for the portlet");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERPROCESSRESOURCE1, "After the doFilter(ResourceRequest, ResourceResponse, FilterChain): method has sucessfully completed and invokes the next filter, the processResourceMethod is called");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERPROCESSRESOURCE2, "After the doFilter(ResourceRequest, ResourceResponse, FilterChain): method has sucessfully completed and invokes the next filter, the next filter in the chain is called if multiple filters are defined");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTERBLOCK, "If the doFilter(ResourceRequest, ResourceResponse, FilterChain): method does not invoke the next filter, processResource is not called");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTEREXCEPTION1, "If the doFilter(ResourceRequest, ResourceResponse, FilterChain): method throws an UnavailableException, processResource is not called");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTEREXCEPTION2, "If the doFilter(ResourceRequest, ResourceResponse, FilterChain): method throws an UnavailableException, no further filter is called");
      tcd.put(V2FILTERTESTS_RESOURCEFILTER_RESOURCEFILTER_DOFILTEREXAMINE, "Method doFilter(ResourceRequest, ResourceResponse, FilterChain): After the next filter has been successfully invoked, the ResourceResponse may be examined");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETCHARACTERENCODING, "Method getCharacterEncoding(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETCONTENTLENGTH, "Method getContentLength(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETCONTENTTYPE, "Method getContentType(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETPORTLETINPUTSTREAM, "Method getPortletInputStream(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETREADER, "Method getReader(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_SETCHARACTERENCODING, "Method setCharacterEncoding(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETREQUEST, "Method getRequest(): Returns wrapped ActionRequest object");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_SETREQUEST, "Method setRequest(ActionRequest): Allows wrapped ActionRequest object to be set");
      tcd.put(V2WRAPPERTESTS_ACTIONREQUESTWRAPPER_RENDER_GETMETHOD, "Method getMethod(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SENDREDIRECTA, "Method sendRedirect(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SENDREDIRECTB, "Method sendRedirect(String, String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETEVENTA, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETEVENTB, "Method setEvent(String, java.io.Serializable): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETPORTLETMODE, "Method setPortletMode(PortletMode): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERA, "Method setRenderParameter(String, String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERB, "Method setRenderParameter(String, String[]): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERS, "Method setRenderParameters(java.util.Map): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETWINDOWSTATE, "Method setWindowState(WindowState): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETRESPONSE, "Method getResponse(): Returns wrapped ActionResponse object");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_SETRESPONSE, "Method setResponse(ActionResponse): Allows wrapped ActionResponse object to be set");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETPORTLETMODE, "Method getPortletMode(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP1, "Method getRenderParameterMap(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP2, "Method getRenderParameterMap(): Returns java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_GETWINDOWSTATE, "Method getWindowState(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_ACTIONRESPONSEWRAPPER_RENDER_REMOVEPUBLICRENDERPARAMETER, "Method removePublicRenderParameter(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETREQUEST, "Method getRequest(): Returns wrapped EventRequest object");
      tcd.put(V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_SETREQUEST, "Method setRequest(EventRequest): Allows wrapped EventRequest object to be set");
      tcd.put(V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETEVENT1, "Method getEvent(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETEVENT2, "Method getEvent(): Returns Event object");
      tcd.put(V2WRAPPERTESTS_EVENTREQUESTWRAPPER_RENDER_GETMETHOD, "Method getMethod(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETEVENTA, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETEVENTB, "Method setEvent(String, java.io.Serializable): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETPORTLETMODE, "Method setPortletMode(PortletMode): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERA, "Method setRenderParameter(String, String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERB, "Method setRenderParameter(String, String[]): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERSA, "Method setRenderParameters(java.util.Map): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRENDERPARAMETERSB, "Method setRenderParameters(java.util.Map): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETWINDOWSTATE, "Method setWindowState(WindowState): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETRESPONSE, "Method getResponse(): Returns wrapped EventResponse obect");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_SETRESPONSE, "Method setResponse(EventResponse): Allows wrapped EventResponse object to be set");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETPORTLETMODE, "Method getPortletMode(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP1, "Method getRenderParameterMap(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETRENDERPARAMETERMAP2, "Method getRenderParameterMap(): Returns java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_GETWINDOWSTATE, "Method getWindowState(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_EVENTRESPONSEWRAPPER_RENDER_REMOVEPUBLICRENDERPARAMETER, "Method removePublicRenderParameter(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETATTRIBUTE, "Method getAttribute(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETATTRIBUTENAMES, "Method getAttributeNames(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETAUTHTYPE, "Method getAuthType(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETCONTEXTPATH, "Method getContextPath(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETCOOKIES, "Method getCookies(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETLOCALE, "Method getLocale(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETLOCALES, "Method getLocales(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETER, "Method getParameter(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETERMAP, "Method getParameterMap(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETERNAMES, "Method getParameterNames(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPARAMETERVALUES, "Method getParameterValues(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTALCONTEXT, "Method getPortalContext(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTLETMODE, "Method getPortletMode(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTLETSESSIONA, "Method getPortletSession(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPORTLETSESSIONB, "Method getPortletSession(boolean): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPREFERENCES, "Method getPreferences(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPROPERTIES, "Method getProperties(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPROPERTY, "Method getProperty(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPROPERTYNAMES, "Method getPropertyNames(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETREMOTEUSER, "Method getRemoteUser(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETREQUESTEDSESSIONID, "Method getRequestedSessionId(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETRESPONSECONTENTTYPE, "Method getResponseContentType(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETRESPONSECONTENTTYPES, "Method getResponseContentTypes(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETSCHEME, "Method getScheme(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETSERVERNAME, "Method getServerName(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETSERVERPORT, "Method getServerPort(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETUSERPRINCIPAL, "Method getUserPrincipal(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETWINDOWID, "Method getWindowID(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETWINDOWSTATE, "Method getWindowState(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISPORTLETMODEALLOWED, "Method isPortletModeAllowed(PortletMode): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISREQUESTEDSESSIONIDVALID, "Method isRequestedSessionIdValid(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISSECURE, "Method isSecure(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISUSERINROLE, "Method isUserInRole(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_ISWINDOWSTATEALLOWED, "Method isWindowStateAllowed(WindowState): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_REMOVEATTRIBUTE, "Method removeAttribute(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_SETATTRIBUTE, "Method setAttribute(String, Object): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETREQUEST, "Method getRequest(): Returns wrapped PortletRequest object");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_SETREQUEST, "Method setRequest(PortletRequest): Allows wrapped PortletRequest object to be set");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPRIVATEPARAMETERMAP, "Method getPrivateParameterMap(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETREQUESTWRAPPER_RENDER_GETPUBLICPARAMETERMAP, "Method getPublicParameterMap(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ADDPROPERTYA, "Method addProperty(javax.servlet.http.Cookie): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ADDPROPERTYB, "Method addProperty(String, org.w3c.dom.Element): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ADDPROPERTYC, "Method addProperty(String, String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_ENCODEURL, "Method encodeURL(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_GETNAMESPACE, "Method getNamespace(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_SETPROPERTY, "Method setProperty(String, String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_GETRESPONSE, "Method getResponse(): Returns wrapped PortletResponse object");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_SETRESPONSE, "Method setResponse(PortletResponse): Allows wrapped PortletResponse object to be set");
      tcd.put(V2WRAPPERTESTS_PORTLETRESPONSEWRAPPER_RENDER_CREATEELEMENT, "Method createElement(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERREQUESTWRAPPER_RENDER_GETREQUEST, "Method getRequest(): Returns wrapped RenderRequest object");
      tcd.put(V2WRAPPERTESTS_RENDERREQUESTWRAPPER_RENDER_SETREQUEST, "Method setRequest(RenderRequest): Allows wrapped RenderRequest object to be set ");
      tcd.put(V2WRAPPERTESTS_RENDERREQUESTWRAPPER_RENDER_GETETAG, "Method getETag(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_FLUSHBUFFER, "Method flushBuffer(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETBUFFERSIZE, "Method getBufferSize(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETCHARACTERENCODING, "Method getCharacterEncoding(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETCONTENTTYPE, "Method getContentType(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETLOCALE, "Method getLocale(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETPORTLETOUTPUTSTREAM, "Method getPortletOutputStream(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETWRITER, "Method getWriter(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_ISCOMMITTED, "Method isCommitted(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_RESET, "Method reset(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_RESETBUFFER, "Method resetBuffer(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETBUFFERSIZE, "Method setBufferSize(int): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETCONTENTTYPE, "Method setContentType(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETTITLE, "Method setTitle(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETCACHECONTROL, "Method getCacheControl(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETNEXTPOSSIBLEPORTLETMODES, "Method setNextPossiblePortletModes(java.util.Collection): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_GETRESPONSE, "Method getResponse(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_SETRESPONSE, "Method setResponse(RenderResponse): Allows wrapped RenderResponse object to be set ");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_CREATEACTIONURL, "Method createActionURL(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_CREATERENDERURL, "Method createRenderURL(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RENDERRESPONSEWRAPPER_RENDER_CREATERESOURCEURL, "Method createResourceURL(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETPORTLETINPUTSTREAM, "Method getPortletInputStream(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETREADER, "Method getReader(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_SETCHARACTERENCODING, "Method setCharacterEncoding(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETREQUEST, "Method getRequest(): Returns wrapped ResourceRequest object");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_SETREQUEST, "Method setRequest(ResourceRequest): Allows wrapped ResourceRequest object to be set");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCHARACTERENCODING, "Method getCharacterEncoding(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCONTENTLENGTH, "Method getContentLength(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCONTENTTYPE, "Method getContentType(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETETAG, "Method getETag(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETMETHOD, "Method getMethod(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETRESOURCEID, "Method getResourceID(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETPRIVATERENDERPARAMETERMAP, "Method getPrivateRenderParameterMap(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCEREQUESTWRAPPER_RENDER_GETCACHEABILITY, "Method getCacheability(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_FLUSHBUFFER, "Method flushBuffer(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETBUFFERSIZE, "Method getBufferSize(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETCHARACTERENCODING, "Method getCharacterEncoding(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETCONTENTTYPE, "Method getContentType(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETLOCALE, "Method getLocale(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETPORTLETOUTPUTSTREAM, "Method getPortletOutputStream(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETWRITER, "Method getWriter(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_ISCOMMITTED, "Method isCommitted(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_RESET, "Method reset(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_RESETBUFFER, "Method resetBuffer(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETBUFFERSIZE, "Method setBufferSize(int): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETCONTENTTYPE, "Method setContentType(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETCACHECONTROL, "Method getCacheControl(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETCHARACTERENCODING, "Method setCharacterEncoding(String): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETLOCALE, "Method setLocale(Locale): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETCONTENTLENGTH, "Method setContentLength(int): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_GETRESPONSE, "Method getResponse(): Returns wrapped RespurceResponse object");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_SETRESPONSE, "Method setResponse(ResourceResponse): Allows wrapped ResourceResponse object to be set");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_CREATEACTIONURL, "Method createActionURL(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_CREATERENDERURL, "Method createRenderURL(): Calls wrapped method");
      tcd.put(V2WRAPPERTESTS_RESOURCERESPONSEWRAPPER_RENDER_CREATERESOURCEURL, "Method createResourceURL(): Calls wrapped method");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDUSER_INFO, "Has String field USER_INFO with value of \"javax.portlet.userinfo\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDCCPP_PROFILE, "Has String field CCPP_PROFILE with value of \"javax.portlet.ccpp\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDBASIC_AUTH, "Has String field BASIC_AUTH with value of \"BASIC\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDFORM_AUTH, "Has String field FORM_AUTH with value of \"FORM\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDCLIENT_CERT_AUTH, "Has String field CLIENT_CERT_AUTH with value of \"CLIENT_CERT\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDDIGEST_AUTH, "Has String field DIGEST_AUTH with value of \"DIGEST\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDACTION_PHASE, "Has String field ACTION_PHASE with value of \"ACTION_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDEVENT_PHASE, "Has String field EVENT_PHASE with value of \"EVENT_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_PHASE, "Has String field RENDER_PHASE with value of \"RENDER_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRESOURCE_PHASE, "Has String field RESOURCE_PHASE with value of \"RESOURCE_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDLIFECYCLE_PHASE, "Has String field LIFECYCLE_PHASE with value of \"javax.portlet.lifecycle_phase\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_PART, "Has String field RENDER_PART with value of \"javax.portlet.render_part\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_HEADERS, "Has String field RENDER_HEADERS with value of \"RENDER_HEADERS\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDRENDER_MARKUP, "Has String field RENDER_MARKUP with value of \"RENDER_MARKUP\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_FIELDACTION_SCOPE_ID, "Has String field ACTION_SCOPE_ID with value of \"javax.portlet.as\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISWINDOWSTATEALLOWED1, "Method isWindowStateAllowed(WindowState): Returns true if the specified WindowState is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISWINDOWSTATEALLOWED2, "Method isWindowStateAllowed(WindowState): Returns false if the specified WindowState is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISPORTLETMODEALLOWED1, "Method isPortletModeAllowed(PortletMode): Returns true if the specified PortletMode is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISPORTLETMODEALLOWED2, "Method isPortletModeAllowed(PortletMode): Returns false if the specified PortletMode is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETMODE, "Method getPortletMode(): Returns current PortletMode ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETWINDOWSTATE, "Method getWindowState(): Returns current WindowState");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPREFERENCES, "Method getPreferences(): Returns the PortletPreferences object associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONA1, "Method getPortletSession(): Returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONA2, "Method getPortletSession(): Returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB1, "Method getPortletSession(boolean): If input flag is true, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB2, "Method getPortletSession(boolean): If input flag is true, returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB3, "Method getPortletSession(boolean): If input flag is false, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTLETSESSIONB4, "Method getPortletSession(boolean): If input flag is false, returns null if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTY1, "Method getProperty(String): If specified request property exists, returns its value ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTY2, "Method getProperty(String): If specified request property does not exist, returns null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTY3, "Method getProperty(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTIES1, "Method getProperties(String): If specified request property exists, returns its values as an Enumeration ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTIES2, "Method getProperties(String): If specified request property does not exist, returns an empty Enumeration");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTIES3, "Method getProperties(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTYNAMES1, "Method getPropertyNames(): Returns an Enumeration of all request property names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPROPERTYNAMES2, "Method getPropertyNames(): Returns an empty Enumeration if there are no request properties defined");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPORTALCONTEXT, "Method getPortalContext(): Returns the context of the portal");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETAUTHTYPE1, "Method getAuthType(): Returns a String indicating the authentication type if the request was authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETAUTHTYPE2, "Method getAuthType(): Returns null if the request was not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCONTEXTPATH1, "Method getContextPath(): Returns a String representing the context path associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCONTEXTPATH2, "Method getContextPath(): Returns an empty String if the portlet is deployed in the default context");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCONTEXTPATH3, "Method getContextPath(): If the context path is not empty, it must start with \"/\" and may not end with \"/\"");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREMOTEUSER1, "Method getRemoteUser(): Returns a String representing the login of the user if the request is authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREMOTEUSER2, "Method getRemoteUser(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETUSERPRINCIPAL1, "Method getUserPrincipal(): Returns a java.security.Principal object representing the user if the request has been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETUSERPRINCIPAL2, "Method getUserPrincipal(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISUSERINROLE1, "Method isUserInRole(): Returns true if the authenticated user is in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISUSERINROLE2, "Method isUserInRole(): Returns false if the authenticated user is not in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISUSERINROLE3, "Method isUserInRole(): Returns false if the user is not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTE1, "Method getAttribute(String): Returns a java.lang.Object for the specified attribute name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTE2, "Method getAttribute(String): Returns null if no attribute with the specified name exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTE3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTENAMES1, "Method getAttributeNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available attribute names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETATTRIBUTENAMES2, "Method getAttributeNames(): Returns an empty Enumeration if there are no attributes available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER1, "Method getParameter(String): Returns String value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER2, "Method getParameter(String): Returns String value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER3, "Method getParameter(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER4, "Method getParameter(String): Returns first String value from values array if use with a multivalued parameter");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETER5, "Method getParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERNAMES1, "Method getParameterNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available parameter names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERNAMES2, "Method getParameterNames(): Returns an empty Enumeration if there are no parameters available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES1, "Method getParameterValues(String): Returns String[] value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES2, "Method getParameterValues(String): Returns String[] value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES3, "Method getParameterValues(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERVALUES4, "Method getParameterValues(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERMAP2, "Method getParameterMap(): The returned map contains all public and private parameters for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPARAMETERMAP3, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISSECURE1, "Method isSecure(): Returns true if the request was made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISSECURE2, "Method isSecure(): Returns false if the request was not made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_SETATTRIBUTE1, "Method setAttribute(String, Object): Stores an attribute object under the specified name in the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_SETATTRIBUTE2, "Method setAttribute(String, Object): Removes the attribute by the specified name if the object is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_SETATTRIBUTE3, "Method setAttribute(String, Object): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_REMOVEATTRIBUTE1, "Method removeAttribute(String): Removes the attribute specified by the name from the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_REMOVEATTRIBUTE2, "Method removeAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREQUESTEDSESSIONID1, "Method getRequestedSessionId(): Returns the session ID indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETREQUESTEDSESSIONID2, "Method getRequestedSessionId(): Returns null if no session ID was indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISREQUESTEDSESSIONIDVALID1, "Method isRequestedSessionIdValid(): Returns true if the session ID is valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_ISREQUESTEDSESSIONIDVALID2, "Method isRequestedSessionIdValid(): Returns false if the session ID is not valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPE1, "Method getResponseContentType(): Returns a String representing the portal preferred content type for the response if the content type is defined in the portlet descriptor  ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPE2, "Method getResponseContentType(): Returns an empty Enumeration if the content type is not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPES1, "Method getResponseContentTypes(): Returns an java.util.Enumeration&lt;java.lang.String&gt; object representing the portal preferred content types for the response if the content types are defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETRESPONSECONTENTTYPES2, "Method getResponseContentTypes(): Returns an empty Enumeration if the content types are not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETLOCALE, "Method getLocale(): Returns an java.util.Locale object representing the preferred Locale for the response");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETLOCALES, "Method getLocales(): Returns an java.util.Enumeration&lt;java.util.Locale&gt; of the Locales in which the portal will accept content");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETSCHEME, "Method getScheme(): Returns a String value representing the scheme name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETSERVERNAME, "Method getServerName(): Returns a String value representing the host name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETSERVERPORT, "Method getServerPort(): Returns an int value representing the port number for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETWINDOWID, "Method getWindowID(): Returns a String value representing the portlet window ID");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCOOKIES1, "Method getCookies(): Returns a javax.servlet.http.Cookie[] array containing the cookies for this request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETCOOKIES2, "Method getCookies(): Returns null if no cookies are present");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPRIVATEPARAMETERMAP1, "Method getPrivateParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the private parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPRIVATEPARAMETERMAP2, "Method getPrivateParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPRIVATEPARAMETERMAP3, "Method getPrivateParameterMap(): Returns an empty map if no private parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPUBLICPARAMETERMAP1, "Method getPublicParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the public parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPUBLICPARAMETERMAP2, "Method getPublicParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_GETPUBLICPARAMETERMAP3, "Method getPublicParameterMap(): Returns an empty map if no public parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RENDER_EXISTS, "The P3PUserInfos exists as a public static enum");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDUSER_INFO, "Has String field USER_INFO with value of \"javax.portlet.userinfo\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDCCPP_PROFILE, "Has String field CCPP_PROFILE with value of \"javax.portlet.ccpp\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDBASIC_AUTH, "Has String field BASIC_AUTH with value of \"BASIC\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDFORM_AUTH, "Has String field FORM_AUTH with value of \"FORM\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDCLIENT_CERT_AUTH, "Has String field CLIENT_CERT_AUTH with value of \"CLIENT_CERT\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDDIGEST_AUTH, "Has String field DIGEST_AUTH with value of \"DIGEST\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDACTION_PHASE, "Has String field ACTION_PHASE with value of \"ACTION_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDEVENT_PHASE, "Has String field EVENT_PHASE with value of \"EVENT_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_PHASE, "Has String field RENDER_PHASE with value of \"RENDER_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRESOURCE_PHASE, "Has String field RESOURCE_PHASE with value of \"RESOURCE_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDLIFECYCLE_PHASE, "Has String field LIFECYCLE_PHASE with value of \"javax.portlet.lifecycle_phase\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_PART, "Has String field RENDER_PART with value of \"javax.portlet.render_part\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_HEADERS, "Has String field RENDER_HEADERS with value of \"RENDER_HEADERS\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDRENDER_MARKUP, "Has String field RENDER_MARKUP with value of \"RENDER_MARKUP\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_FIELDACTION_SCOPE_ID, "Has String field ACTION_SCOPE_ID with value of \"javax.portlet.as\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISWINDOWSTATEALLOWED1, "Method isWindowStateAllowed(WindowState): Returns true if the specified WindowState is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISWINDOWSTATEALLOWED2, "Method isWindowStateAllowed(WindowState): Returns false if the specified WindowState is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISPORTLETMODEALLOWED1, "Method isPortletModeAllowed(PortletMode): Returns true if the specified PortletMode is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISPORTLETMODEALLOWED2, "Method isPortletModeAllowed(PortletMode): Returns false if the specified PortletMode is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETMODE, "Method getPortletMode(): Returns current PortletMode ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETWINDOWSTATE, "Method getWindowState(): Returns current WindowState");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPREFERENCES, "Method getPreferences(): Returns the PortletPreferences object associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONA1, "Method getPortletSession(): Returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONA2, "Method getPortletSession(): Returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB1, "Method getPortletSession(boolean): If input flag is true, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB2, "Method getPortletSession(boolean): If input flag is true, returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB3, "Method getPortletSession(boolean): If input flag is false, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTLETSESSIONB4, "Method getPortletSession(boolean): If input flag is false, returns null if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTY1, "Method getProperty(String): If specified request property exists, returns its value ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTY2, "Method getProperty(String): If specified request property does not exist, returns null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTY3, "Method getProperty(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTIES1, "Method getProperties(String): If specified request property exists, returns its values as an Enumeration ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTIES2, "Method getProperties(String): If specified request property does not exist, returns an empty Enumeration");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTIES3, "Method getProperties(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTYNAMES1, "Method getPropertyNames(): Returns an Enumeration of all request property names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPROPERTYNAMES2, "Method getPropertyNames(): Returns an empty Enumeration if there are no request properties defined");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPORTALCONTEXT, "Method getPortalContext(): Returns the context of the portal");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETAUTHTYPE1, "Method getAuthType(): Returns a String indicating the authentication type if the request was authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETAUTHTYPE2, "Method getAuthType(): Returns null if the request was not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCONTEXTPATH1, "Method getContextPath(): Returns a String representing the context path associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCONTEXTPATH2, "Method getContextPath(): Returns an empty String if the portlet is deployed in the default context");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCONTEXTPATH3, "Method getContextPath(): If the context path is not empty, it must start with \"/\" and may not end with \"/\"");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREMOTEUSER1, "Method getRemoteUser(): Returns a String representing the login of the user if the request is authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREMOTEUSER2, "Method getRemoteUser(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETUSERPRINCIPAL1, "Method getUserPrincipal(): Returns a java.security.Principal object representing the user if the request has been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETUSERPRINCIPAL2, "Method getUserPrincipal(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISUSERINROLE1, "Method isUserInRole(): Returns true if the authenticated user is in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISUSERINROLE2, "Method isUserInRole(): Returns false if the authenticated user is not in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISUSERINROLE3, "Method isUserInRole(): Returns false if the user is not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTE1, "Method getAttribute(String): Returns a java.lang.Object for the specified attribute name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTE2, "Method getAttribute(String): Returns null if no attribute with the specified name exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTE3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTENAMES1, "Method getAttributeNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available attribute names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETATTRIBUTENAMES2, "Method getAttributeNames(): Returns an empty Enumeration if there are no attributes available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER1, "Method getParameter(String): Returns String value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER2, "Method getParameter(String): Returns String value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER3, "Method getParameter(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER4, "Method getParameter(String): Returns first String value from values array if use with a multivalued parameter");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETER5, "Method getParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERNAMES1, "Method getParameterNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available parameter names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERNAMES2, "Method getParameterNames(): Returns an empty Enumeration if there are no parameters available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES1, "Method getParameterValues(String): Returns String[] value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES2, "Method getParameterValues(String): Returns String[] value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES3, "Method getParameterValues(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERVALUES4, "Method getParameterValues(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERMAP2, "Method getParameterMap(): The returned map contains all public and private parameters for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPARAMETERMAP3, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISSECURE1, "Method isSecure(): Returns true if the request was made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISSECURE2, "Method isSecure(): Returns false if the request was not made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_SETATTRIBUTE1, "Method setAttribute(String, Object): Stores an attribute object under the specified name in the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_SETATTRIBUTE2, "Method setAttribute(String, Object): Removes the attribute by the specified name if the object is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_SETATTRIBUTE3, "Method setAttribute(String, Object): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_REMOVEATTRIBUTE1, "Method removeAttribute(String): Removes the attribute specified by the name from the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_REMOVEATTRIBUTE2, "Method removeAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREQUESTEDSESSIONID1, "Method getRequestedSessionId(): Returns the session ID indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETREQUESTEDSESSIONID2, "Method getRequestedSessionId(): Returns null if no session ID was indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISREQUESTEDSESSIONIDVALID1, "Method isRequestedSessionIdValid(): Returns true if the session ID is valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_ISREQUESTEDSESSIONIDVALID2, "Method isRequestedSessionIdValid(): Returns false if the session ID is not valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPE1, "Method getResponseContentType(): Returns a String representing the portal preferred content type for the response if the content type is defined in the portlet descriptor  ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPE2, "Method getResponseContentType(): Returns an empty Enumeration if the content type is not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPES1, "Method getResponseContentTypes(): Returns an java.util.Enumeration&lt;java.lang.String&gt; object representing the portal preferred content types for the response if the content types are defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETRESPONSECONTENTTYPES2, "Method getResponseContentTypes(): Returns an empty Enumeration if the content types are not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETLOCALE, "Method getLocale(): Returns an java.util.Locale object representing the preferred Locale for the response");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETLOCALES, "Method getLocales(): Returns an java.util.Enumeration&lt;java.util.Locale&gt; of the Locales in which the portal will accept content");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETSCHEME, "Method getScheme(): Returns a String value representing the scheme name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETSERVERNAME, "Method getServerName(): Returns a String value representing the host name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETSERVERPORT, "Method getServerPort(): Returns an int value representing the port number for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETWINDOWID, "Method getWindowID(): Returns a String value representing the portlet window ID");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCOOKIES1, "Method getCookies(): Returns a javax.servlet.http.Cookie[] array containing the cookies for this request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETCOOKIES2, "Method getCookies(): Returns null if no cookies are present");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPRIVATEPARAMETERMAP1, "Method getPrivateParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the private parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPRIVATEPARAMETERMAP2, "Method getPrivateParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPRIVATEPARAMETERMAP3, "Method getPrivateParameterMap(): Returns an empty map if no private parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPUBLICPARAMETERMAP1, "Method getPublicParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the public parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPUBLICPARAMETERMAP2, "Method getPublicParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_GETPUBLICPARAMETERMAP3, "Method getPublicParameterMap(): Returns an empty map if no public parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_ACTION_EXISTS, "Method exists(): The P3PUserInfos exist as a public static enum");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDUSER_INFO, "Has String field USER_INFO with value of \"javax.portlet.userinfo\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDCCPP_PROFILE, "Has String field CCPP_PROFILE with value of \"javax.portlet.ccpp\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDBASIC_AUTH, "Has String field BASIC_AUTH with value of \"BASIC\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDFORM_AUTH, "Has String field FORM_AUTH with value of \"FORM\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDCLIENT_CERT_AUTH, "Has String field CLIENT_CERT_AUTH with value of \"CLIENT_CERT\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDDIGEST_AUTH, "Has String field DIGEST_AUTH with value of \"DIGEST\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDACTION_PHASE, "Has String field ACTION_PHASE with value of \"ACTION_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDEVENT_PHASE, "Has String field EVENT_PHASE with value of \"EVENT_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_PHASE, "Has String field RENDER_PHASE with value of \"RENDER_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRESOURCE_PHASE, "Has String field RESOURCE_PHASE with value of \"RESOURCE_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDLIFECYCLE_PHASE, "Has String field LIFECYCLE_PHASE with value of \"javax.portlet.lifecycle_phase\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_PART, "Has String field RENDER_PART with value of \"javax.portlet.render_part\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_HEADERS, "Has String field RENDER_HEADERS with value of \"RENDER_HEADERS\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDRENDER_MARKUP, "Has String field RENDER_MARKUP with value of \"RENDER_MARKUP\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_FIELDACTION_SCOPE_ID, "Has String field ACTION_SCOPE_ID with value of \"javax.portlet.as\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISWINDOWSTATEALLOWED1, "Method isWindowStateAllowed(WindowState): Returns true if the specified WindowState is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISWINDOWSTATEALLOWED2, "Method isWindowStateAllowed(WindowState): Returns false if the specified WindowState is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISPORTLETMODEALLOWED1, "Method isPortletModeAllowed(PortletMode): Returns true if the specified PortletMode is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISPORTLETMODEALLOWED2, "Method isPortletModeAllowed(PortletMode): Returns false if the specified PortletMode is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETMODE, "Method getPortletMode(): Returns current PortletMode ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETWINDOWSTATE, "Method getWindowState(): Returns current WindowState");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPREFERENCES, "Method getPreferences(): Returns the PortletPreferences object associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONA1, "Method getPortletSession(): Returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONA2, "Method getPortletSession(): Returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB1, "Method getPortletSession(boolean): If input flag is true, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB2, "Method getPortletSession(boolean): If input flag is true, returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB3, "Method getPortletSession(boolean): If input flag is false, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTLETSESSIONB4, "Method getPortletSession(boolean): If input flag is false, returns null if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTY1, "Method getProperty(String): If specified request property exists, returns its value ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTY2, "Method getProperty(String): If specified request property does not exist, returns null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTY3, "Method getProperty(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTIES1, "Method getProperties(String): If specified request property exists, returns its values as an Enumeration ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTIES2, "Method getProperties(String): If specified request property does not exist, returns an empty Enumeration");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTIES3, "Method getProperties(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTYNAMES1, "Method getPropertyNames(): Returns an Enumeration of all request property names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPROPERTYNAMES2, "Method getPropertyNames(): Returns an empty Enumeration if there are no request properties defined");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPORTALCONTEXT, "Method getPortalContext(): Returns the context of the portal");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETAUTHTYPE1, "Method getAuthType(): Returns a String indicating the authentication type if the request was authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETAUTHTYPE2, "Method getAuthType(): Returns null if the request was not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCONTEXTPATH1, "Method getContextPath(): Returns a String representing the context path associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCONTEXTPATH2, "Method getContextPath(): Returns an empty String if the portlet is deployed in the default context");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCONTEXTPATH3, "Method getContextPath(): If the context path is not empty, it must start with \"/\" and may not end with \"/\"");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREMOTEUSER1, "Method getRemoteUser(): Returns a String representing the login of the user if the request is authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREMOTEUSER2, "Method getRemoteUser(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETUSERPRINCIPAL1, "Method getUserPrincipal(): Returns a java.security.Principal object representing the user if the request has been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETUSERPRINCIPAL2, "Method getUserPrincipal(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISUSERINROLE1, "Method isUserInRole(): Returns true if the authenticated user is in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISUSERINROLE2, "Method isUserInRole(): Returns false if the authenticated user is not in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISUSERINROLE3, "Method isUserInRole(): Returns false if the user is not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTE1, "Method getAttribute(String): Returns a java.lang.Object for the specified attribute name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTE2, "Method getAttribute(String): Returns null if no attribute with the specified name exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTE3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTENAMES1, "Method getAttributeNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available attribute names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETATTRIBUTENAMES2, "Method getAttributeNames(): Returns an empty Enumeration if there are no attributes available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER1, "Method getParameter(String): Returns String value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER2, "Method getParameter(String): Returns String value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER3, "Method getParameter(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER4, "Method getParameter(String): Returns first String value from values array if use with a multivalued parameter");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETER5, "Method getParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERNAMES1, "Method getParameterNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available parameter names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERNAMES2, "Method getParameterNames(): Returns an empty Enumeration if there are no parameters available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES1, "Method getParameterValues(String): Returns String[] value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES2, "Method getParameterValues(String): Returns String[] value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES3, "Method getParameterValues(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERVALUES4, "Method getParameterValues(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERMAP2, "Method getParameterMap(): The returned map contains all public and private parameters for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPARAMETERMAP3, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISSECURE1, "Method isSecure(): Returns true if the request was made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISSECURE2, "Method isSecure(): Returns false if the request was not made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_SETATTRIBUTE1, "Method setAttribute(String, Object): Stores an attribute object under the specified name in the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_SETATTRIBUTE2, "Method setAttribute(String, Object): Removes the attribute by the specified name if the object is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_SETATTRIBUTE3, "Method setAttribute(String, Object): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_REMOVEATTRIBUTE1, "Method removeAttribute(String): Removes the attribute specified by the name from the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_REMOVEATTRIBUTE2, "Method removeAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREQUESTEDSESSIONID1, "Method getRequestedSessionId(): Returns the session ID indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETREQUESTEDSESSIONID2, "Method getRequestedSessionId(): Returns null if no session ID was indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISREQUESTEDSESSIONIDVALID1, "Method isRequestedSessionIdValid(): Returns true if the session ID is valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_ISREQUESTEDSESSIONIDVALID2, "Method isRequestedSessionIdValid(): Returns false if the session ID is not valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPE1, "Method getResponseContentType(): Returns a String representing the portal preferred content type for the response if the content type is defined in the portlet descriptor  ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPE2, "Method getResponseContentType(): Returns an empty Enumeration if the content type is not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPES1, "Method getResponseContentTypes(): Returns an java.util.Enumeration&lt;java.lang.String&gt; object representing the portal preferred content types for the response if the content types are defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETRESPONSECONTENTTYPES2, "Method getResponseContentTypes(): Returns an empty Enumeration if the content types are not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETLOCALE, "Method getLocale(): Returns an java.util.Locale object representing the preferred Locale for the response");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETLOCALES, "Method getLocales(): Returns an java.util.Enumeration&lt;java.util.Locale&gt; of the Locales in which the portal will accept content");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETSCHEME, "Method getScheme(): Returns a String value representing the scheme name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETSERVERNAME, "Method getServerName(): Returns a String value representing the host name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETSERVERPORT, "Method getServerPort(): Returns an int value representing the port number for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETWINDOWID, "Method getWindowID(): Returns a String value representing the portlet window ID");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCOOKIES1, "Method getCookies(): Returns a javax.servlet.http.Cookie[] array containing the cookies for this request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETCOOKIES2, "Method getCookies(): Returns null if no cookies are present");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPRIVATEPARAMETERMAP1, "Method getPrivateParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the private parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPRIVATEPARAMETERMAP2, "Method getPrivateParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPRIVATEPARAMETERMAP3, "Method getPrivateParameterMap(): Returns an empty map if no private parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPUBLICPARAMETERMAP1, "Method getPublicParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the public parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPUBLICPARAMETERMAP2, "Method getPublicParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_GETPUBLICPARAMETERMAP3, "Method getPublicParameterMap(): Returns an empty map if no public parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_EVENT_EXISTS, "Method exists(): The P3PUserInfos exist as a public static enum");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDUSER_INFO, "Has String field USER_INFO with value of \"javax.portlet.userinfo\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDCCPP_PROFILE, "Has String field CCPP_PROFILE with value of \"javax.portlet.ccpp\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDBASIC_AUTH, "Has String field BASIC_AUTH with value of \"BASIC\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDFORM_AUTH, "Has String field FORM_AUTH with value of \"FORM\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDCLIENT_CERT_AUTH, "Has String field CLIENT_CERT_AUTH with value of \"CLIENT_CERT\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDDIGEST_AUTH, "Has String field DIGEST_AUTH with value of \"DIGEST\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDACTION_PHASE, "Has String field ACTION_PHASE with value of \"ACTION_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDEVENT_PHASE, "Has String field EVENT_PHASE with value of \"EVENT_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_PHASE, "Has String field RENDER_PHASE with value of \"RENDER_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRESOURCE_PHASE, "Has String field RESOURCE_PHASE with value of \"RESOURCE_PHASE\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDLIFECYCLE_PHASE, "Has String field LIFECYCLE_PHASE with value of \"javax.portlet.lifecycle_phase\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_PART, "Has String field RENDER_PART with value of \"javax.portlet.render_part\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_HEADERS, "Has String field RENDER_HEADERS with value of \"RENDER_HEADERS\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDRENDER_MARKUP, "Has String field RENDER_MARKUP with value of \"RENDER_MARKUP\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_FIELDACTION_SCOPE_ID, "Has String field ACTION_SCOPE_ID with value of \"javax.portlet.as\" ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISWINDOWSTATEALLOWED1, "Method isWindowStateAllowed(WindowState): Returns true if the specified WindowState is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISWINDOWSTATEALLOWED2, "Method isWindowStateAllowed(WindowState): Returns false if the specified WindowState is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISPORTLETMODEALLOWED1, "Method isPortletModeAllowed(PortletMode): Returns true if the specified PortletMode is allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISPORTLETMODEALLOWED2, "Method isPortletModeAllowed(PortletMode): Returns false if the specified PortletMode is not allowed");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETMODE, "Method getPortletMode(): Returns current PortletMode ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETWINDOWSTATE, "Method getWindowState(): Returns current WindowState");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPREFERENCES, "Method getPreferences(): Returns the PortletPreferences object associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONA1, "Method getPortletSession(): Returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONA2, "Method getPortletSession(): Returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB1, "Method getPortletSession(boolean): If input flag is true, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB2, "Method getPortletSession(boolean): If input flag is true, returns new PortletSession if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB3, "Method getPortletSession(boolean): If input flag is false, returns current PortletSession if one already exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTLETSESSIONB4, "Method getPortletSession(boolean): If input flag is false, returns null if one does not already exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTY1, "Method getProperty(String): If specified request property exists, returns its value ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTY2, "Method getProperty(String): If specified request property does not exist, returns null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTY3, "Method getProperty(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTIES1, "Method getProperties(String): If specified request property exists, returns its values as an Enumeration ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTIES2, "Method getProperties(String): If specified request property does not exist, returns an empty Enumeration");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTIES3, "Method getProperties(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTYNAMES1, "Method getPropertyNames(): Returns an Enumeration of all request property names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPROPERTYNAMES2, "Method getPropertyNames(): Returns an empty Enumeration if there are no request properties defined");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPORTALCONTEXT, "Method getPortalContext(): Returns the context of the portal");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETAUTHTYPE1, "Method getAuthType(): Returns a String indicating the authentication type if the request was authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETAUTHTYPE2, "Method getAuthType(): Returns null if the request was not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCONTEXTPATH1, "Method getContextPath(): Returns a String representing the context path associated with the portlet");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCONTEXTPATH2, "Method getContextPath(): Returns an empty String if the portlet is deployed in the default context");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCONTEXTPATH3, "Method getContextPath(): If the context path is not empty, it must start with \"/\" and may not end with \"/\"");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREMOTEUSER1, "Method getRemoteUser(): Returns a String representing the login of the user if the request is authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREMOTEUSER2, "Method getRemoteUser(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETUSERPRINCIPAL1, "Method getUserPrincipal(): Returns a java.security.Principal object representing the user if the request has been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETUSERPRINCIPAL2, "Method getUserPrincipal(): Returns null if the request has not been authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISUSERINROLE1, "Method isUserInRole(): Returns true if the authenticated user is in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISUSERINROLE2, "Method isUserInRole(): Returns false if the authenticated user is not in the specified role");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISUSERINROLE3, "Method isUserInRole(): Returns false if the user is not authenticated");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTE1, "Method getAttribute(String): Returns a java.lang.Object for the specified attribute name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTE2, "Method getAttribute(String): Returns null if no attribute with the specified name exists");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTE3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTENAMES1, "Method getAttributeNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available attribute names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETATTRIBUTENAMES2, "Method getAttributeNames(): Returns an empty Enumeration if there are no attributes available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER1, "Method getParameter(String): Returns String value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER2, "Method getParameter(String): Returns String value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER3, "Method getParameter(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER4, "Method getParameter(String): Returns first String value from values array if use with a multivalued parameter");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETER5, "Method getParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERNAMES1, "Method getParameterNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available parameter names");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERNAMES2, "Method getParameterNames(): Returns an empty Enumeration if there are no parameters available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES1, "Method getParameterValues(String): Returns String[] value of parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES2, "Method getParameterValues(String): Returns String[] value of a public render parameter specified by the name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES3, "Method getParameterValues(String): Returns null if no parameter exists for the specified name");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERVALUES4, "Method getParameterValues(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERMAP2, "Method getParameterMap(): The returned map contains all public and private parameters for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPARAMETERMAP3, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISSECURE1, "Method isSecure(): Returns true if the request was made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISSECURE2, "Method isSecure(): Returns false if the request was not made through a secure channel");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_SETATTRIBUTE1, "Method setAttribute(String, Object): Stores an attribute object under the specified name in the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_SETATTRIBUTE2, "Method setAttribute(String, Object): Removes the attribute by the specified name if the object is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_SETATTRIBUTE3, "Method setAttribute(String, Object): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_REMOVEATTRIBUTE1, "Method removeAttribute(String): Removes the attribute specified by the name from the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_REMOVEATTRIBUTE2, "Method removeAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREQUESTEDSESSIONID1, "Method getRequestedSessionId(): Returns the session ID indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETREQUESTEDSESSIONID2, "Method getRequestedSessionId(): Returns null if no session ID was indicated in the client request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISREQUESTEDSESSIONIDVALID1, "Method isRequestedSessionIdValid(): Returns true if the session ID is valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_ISREQUESTEDSESSIONIDVALID2, "Method isRequestedSessionIdValid(): Returns false if the session ID is not valid");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPE1, "Method getResponseContentType(): Returns a String representing the portal preferred content type for the response if the content type is defined in the portlet descriptor  ");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPE2, "Method getResponseContentType(): Returns an empty Enumeration if the content type is not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPES1, "Method getResponseContentTypes(): Returns an java.util.Enumeration&lt;java.lang.String&gt; object representing the portal preferred content types for the response if the content types are defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETRESPONSECONTENTTYPES2, "Method getResponseContentTypes(): Returns an empty Enumeration if the content types are not defined in the portlet descriptor");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETLOCALE, "Method getLocale(): Returns an java.util.Locale object representing the preferred Locale for the response");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETLOCALES, "Method getLocales(): Returns an java.util.Enumeration&lt;java.util.Locale&gt; of the Locales in which the portal will accept content");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETSCHEME, "Method getScheme(): Returns a String value representing the scheme name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETSERVERNAME, "Method getServerName(): Returns a String value representing the host name for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETSERVERPORT, "Method getServerPort(): Returns an int value representing the port number for the request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETWINDOWID, "Method getWindowID(): Returns a String value representing the portlet window ID");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCOOKIES1, "Method getCookies(): Returns a javax.servlet.http.Cookie[] array containing the cookies for this request");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETCOOKIES2, "Method getCookies(): Returns null if no cookies are present");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPRIVATEPARAMETERMAP1, "Method getPrivateParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the private parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPRIVATEPARAMETERMAP2, "Method getPrivateParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPRIVATEPARAMETERMAP3, "Method getPrivateParameterMap(): Returns an empty map if no private parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPUBLICPARAMETERMAP1, "Method getPublicParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the public parameter names and values if available");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPUBLICPARAMETERMAP2, "Method getPublicParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_GETPUBLICPARAMETERMAP3, "Method getPublicParameterMap(): Returns an empty map if no public parameters exist");
      tcd.put(V2REQUESTTESTS_PORTLETREQUEST_RESOURCE_EXISTS, "Method exists(): The P3PUserInfos exist as a public static enum");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETPORTLETINPUTSTREAM1, "Method getPortletInputStream(): Returns an InputStream object");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETPORTLETINPUTSTREAM2, "Method getPortletInputStream(): Throws IllegalStateException if getReader was already called");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETPORTLETINPUTSTREAM3, "Method getPortletInputStream(): Throws IllegalStateException if the request has HTTP POST data of type application/x-www-form-urlencoded");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING1, "Method setCharacterEncoding(String): Allows the character encoding for the body of the request to be overridden");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING2, "Method setCharacterEncoding(String): Throws IllegalStateException if method is called after reading request parameters");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING3, "Method setCharacterEncoding(String): Throws IllegalStateException if method is called after using the getReader(): method");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_SETCHARACTERENCODING4, "Method setCharacterEncoding(String): Throws UnsupportedEncodingException if the specified encoding is not valid");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER1, "Method getReader(): Returns a BufferedReader object for reading the request");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER2, "Method getReader(): Throws IllegalStateException if getPortletInputStream was already called");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER3, "Method getReader(): Throws IllegalStateException if the request has HTTP POST data of type application/x-www-form-urlencoded");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETREADER5, "Method getReader(): Throws UnsupportedEncodingException if the character set encoding is not valid so that the text cannot be decoded");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCHARACTERENCODING1, "Method getCharacterEncoding(): Returns a String containing the name of the character encoding used in the request body");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCHARACTERENCODING2, "Method getCharacterEncoding(): Returns null if the request does not specify a character encoding");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTTYPE1, "Method getContentType(): Returns a String containing the MIME type of the request body");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTTYPE2, "Method getContentType(): Returns null if the MIME type is unknown");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTLENGTH1, "Method getContentLength(): Returns the length in bytes of the request body");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETCONTENTLENGTH2, "Method getContentLength(): Returns -1 if the length is unknown");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_ACTION_GETMETHOD, "Method getMethod(): Returns a String containing the name of the HTTP method with which the request was made");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETPORTLETINPUTSTREAM1, "Method getPortletInputStream(): Returns an InputStream object");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETPORTLETINPUTSTREAM2, "Method getPortletInputStream(): Throws IllegalStateException if getReader was already called");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETPORTLETINPUTSTREAM3, "Method getPortletInputStream(): Throws IllegalStateException if the request has HTTP POST data of type application/x-www-form-urlencoded");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING1, "Method setCharacterEncoding(String): Allows the character encoding for the body of the request to be overridden");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING2, "Method setCharacterEncoding(String): Throws IllegalStateException if method is called after reading request parameters");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING3, "Method setCharacterEncoding(String): Throws IllegalStateException if method is called after using the getReader(): method");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_SETCHARACTERENCODING4, "Method setCharacterEncoding(String): Throws UnsupportedEncodingException if the specified encoding is not valid");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER1, "Method getReader(): Returns a BufferedReader object for reading the request");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER2, "Method getReader(): Throws IllegalStateException if getPortletInputStream was already called");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER3, "Method getReader(): Throws IllegalStateException if the request has HTTP POST data of type application/x-www-form-urlencoded");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETREADER5, "Method getReader(): Throws UnsupportedEncodingException if the character set encoding is not valid so that the text cannot be decoded");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCHARACTERENCODING1, "Method getCharacterEncoding(): Returns a String containing the name of the character encoding used in the request body");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCHARACTERENCODING2, "Method getCharacterEncoding(): Returns null if the request does not specify a character encoding");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTTYPE1, "Method getContentType(): Returns a String containing the MIME type of the request body");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTTYPE2, "Method getContentType(): Returns null if the MIME type is unknown");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTLENGTH1, "Method getContentLength(): Returns the length in bytes of the request body");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETCONTENTLENGTH2, "Method getContentLength(): Returns -1 if the length is unknown");
      tcd.put(V2REQUESTTESTS_CLIENTDATAREQUEST_RESOURCE_GETMETHOD, "Method getMethod(): Returns a String containing the name of the HTTP method with which the request was made");
      tcd.put(V2REQUESTTESTS_ACTIONREQUEST_ACTION_FIELDACTION_NAME, "Has String field ACTION_NAME with value of \"javax.portlet.action\" ");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_FIELDETAG, "Has String field ETAG with value of \"portlet.ETag\" ");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETETAG2, "Method getETag(): Returns null if there is no cached response");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESOURCEID1, "Method getResourceID(): Returns a String containing the resource ID set on the resource URL");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESOURCEID2, "Method getResourceID(): Returns null if no resource ID was set on the URL");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP1, "Method getPrivateRenderParameterMap(): Returns a java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object containing the private render parameters for the request");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP2, "Method getPrivateRenderParameterMap(): The returned map does not contain the resource parameters set on the URL");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP3, "Method getPrivateRenderParameterMap(): The returned map is immutable");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETPRIVATERENDERPARAMETERMAP4, "Method getPrivateRenderParameterMap(): Returns an empty map if there are no private render parameters");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESPONSECONTENTTYPE, "Method getResponseContentType(): Returns a String containing the preferred content type for the resonse");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETRESPONSECONTENTTYPES, "Method getResponseContentTypes(): Returns an java.util.Enumeration&lt;java.lang.String&gt; object containing the content types that will be accepted for the response");
      tcd.put(V2REQUESTTESTS_RESOURCEREQUEST_RESOURCE_GETCACHEABILITY, "Method getCacheability(): Returns a String containing the cache level of the resource request");
      tcd.put(V2REQUESTTESTS_EVENTREQUEST_EVENT_GETEVENT, "Method getEvent(): Returns the Event object that triggered the call to the processEvent method");
      tcd.put(V2REQUESTTESTS_EVENTREQUEST_EVENT_GETMETHOD, "Method getMethod(): Returns a String containing the name of the HTTP method with which the request was made");
      tcd.put(V2REQUESTTESTS_RENDERREQUEST_RENDER_FIELDETAG, "Has String field ETAG with value of \"portlet.ETag\" ");
      tcd.put(V2REQUESTTESTS_RENDERREQUEST_RENDER_GETETAG2, "Method getETag(): Returns null if there is no cached response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYA1, "Method addProperty(javax.servlet.http.Cookie): Adds the specified cookie property to the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYA2, "Method addProperty(javax.servlet.http.Cookie): Throws IllegalArgumentException if the specified cookie is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB1, "Method addProperty(String, org.w3c.dom.Element): Adds an XML DOM Element to the response for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB2, "Method addProperty(String, org.w3c.dom.Element): If a DOM Element for the specified key already exists, the new element is added in addition to the existing element");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB3, "Method addProperty(String, org.w3c.dom.Element): If the specified DOM Element value is null, the key is removed from the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYB4, "Method addProperty(String, org.w3c.dom.Element): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYC1, "Method addProperty(String, String): Adds a property value to an existing key to allow the key to have multiple values");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ADDPROPERTYC2, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ENCODEURL1, "Method encodeURL(String): Returns a String representing the encoded URL");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_ENCODEURL2, "Method encodeURL(String): Throws IllegalArgumentException if the input string is not an absolute URL and does not start with at \"/\" character");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_GETNAMESPACE1, "Method getNamespace(): Returns a String containing the namespace value");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT1, "Method createElement(String): Returns an org.w3c.dom.Element object for the specified tag name");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT2, "Method createElement(String): The returned Element has nodeName set to the the specified tag name ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT3, "Method createElement(String): The returned Element has localName set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT4, "Method createElement(String): The returned Element has prefix set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT5, "Method createElement(String): The returned Element has namespaceURI set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RENDER_CREATEELEMENT6, "Method createElement(String): Throws org.w3c.dom.DOMException - INVALID_CHARACTER_ERR if the specified name contains an illegal character. ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYA1, "Method addProperty(javax.servlet.http.Cookie): Adds the specified cookie property to the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYA2, "Method addProperty(javax.servlet.http.Cookie): Throws IllegalArgumentException if the specified cookie is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB1, "Method addProperty(String, org.w3c.dom.Element): Adds an XML DOM Element to the response for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB2, "Method addProperty(String, org.w3c.dom.Element): If a DOM Element for the specified key already exists, the new element is added in addition to the existing element");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB3, "Method addProperty(String, org.w3c.dom.Element): If the specified DOM Element value is null, the key is removed from the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYB4, "Method addProperty(String, org.w3c.dom.Element): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYC1, "Method addProperty(String, String): Adds a property value to an existing key to allow the key to have multiple values");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ADDPROPERTYC2, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ENCODEURL1, "Method encodeURL(String): Returns a String representing the encoded URL");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_ENCODEURL2, "Method encodeURL(String): Throws IllegalArgumentException if the input string is not an absolute URL and does not start with at \"/\" character");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_GETNAMESPACE1, "Method getNamespace(): Returns a String containing the namespace value");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT1, "Method createElement(String): Returns an org.w3c.dom.Element object for the specified tag name");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT2, "Method createElement(String): The returned Element has nodeName set to the the specified tag name ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT3, "Method createElement(String): The returned Element has localName set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT4, "Method createElement(String): The returned Element has prefix set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT5, "Method createElement(String): The returned Element has namespaceURI set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_RESOURCE_CREATEELEMENT6, "Method createElement(String): Throws org.w3c.dom.DOMException - INVALID_CHARACTER_ERR if the specified name contains an illegal character. ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYA1, "Method addProperty(javax.servlet.http.Cookie): Adds the specified cookie property to the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYA2, "Method addProperty(javax.servlet.http.Cookie): Throws IllegalArgumentException if the specified cookie is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB1, "Method addProperty(String, org.w3c.dom.Element): Adds an XML DOM Element to the response for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB2, "Method addProperty(String, org.w3c.dom.Element): If a DOM Element for the specified key already exists, the new element is added in addition to the existing element");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB3, "Method addProperty(String, org.w3c.dom.Element): If the specified DOM Element value is null, the key is removed from the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYB4, "Method addProperty(String, org.w3c.dom.Element): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYC1, "Method addProperty(String, String): Adds a property value to an existing key to allow the key to have multiple values");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ADDPROPERTYC2, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ENCODEURL1, "Method encodeURL(String): Returns a String representing the encoded URL");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_ENCODEURL2, "Method encodeURL(String): Throws IllegalArgumentException if the input string is not an absolute URL and does not start with at \"/\" character");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_GETNAMESPACE1, "Method getNamespace(): Returns a String containing the namespace value");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT1, "Method createElement(String): Returns an org.w3c.dom.Element object for the specified tag name");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT2, "Method createElement(String): The returned Element has nodeName set to the the specified tag name ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT3, "Method createElement(String): The returned Element has localName set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT4, "Method createElement(String): The returned Element has prefix set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT5, "Method createElement(String): The returned Element has namespaceURI set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_ACTION_CREATEELEMENT6, "Method createElement(String): Throws org.w3c.dom.DOMException - INVALID_CHARACTER_ERR if the specified name contains an illegal character. ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYA1, "Method addProperty(javax.servlet.http.Cookie): Adds the specified cookie property to the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYA2, "Method addProperty(javax.servlet.http.Cookie): Throws IllegalArgumentException if the specified cookie is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB1, "Method addProperty(String, org.w3c.dom.Element): Adds an XML DOM Element to the response for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB2, "Method addProperty(String, org.w3c.dom.Element): If a DOM Element for the specified key already exists, the new element is added in addition to the existing element");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB3, "Method addProperty(String, org.w3c.dom.Element): If the specified DOM Element value is null, the key is removed from the response");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYB4, "Method addProperty(String, org.w3c.dom.Element): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYC1, "Method addProperty(String, String): Adds a property value to an existing key to allow the key to have multiple values");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ADDPROPERTYC2, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ENCODEURL1, "Method encodeURL(String): Returns a String representing the encoded URL");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_ENCODEURL2, "Method encodeURL(String): Throws IllegalArgumentException if the input string is not an absolute URL and does not start with at \"/\" character");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_GETNAMESPACE1, "Method getNamespace(): Returns a String containing the namespace value");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT1, "Method createElement(String): Returns an org.w3c.dom.Element object for the specified tag name");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT2, "Method createElement(String): The returned Element has nodeName set to the the specified tag name ");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT3, "Method createElement(String): The returned Element has localName set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT4, "Method createElement(String): The returned Element has prefix set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT5, "Method createElement(String): The returned Element has namespaceURI set to null");
      tcd.put(V2RESPONSETESTS_PORTLETRESPONSE_EVENT_CREATEELEMENT6, "Method createElement(String): Throws org.w3c.dom.DOMException - INVALID_CHARACTER_ERR if the specified name contains an illegal character. ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETWINDOWSTATE1, "Method setWindowState(WindowState): Sets the WindowState to the specified value");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETWINDOWSTATE2, "Method setWindowState(WindowState): Throws WindowStateException if the portlet cannot switch to the specified WindowState");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETWINDOWSTATE3, "Method setWindowState(WindowState): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETPORTLETMODE1, "Method setPortletMode(PortletMode): Sets the PortletMode to the specified value");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETPORTLETMODE2, "Method setPortletMode(PortletMode): Throws PortletModeException if the portlet cannot switch to the specified PortletMode");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETPORTLETMODE3, "Method setPortletMode(PortletMode): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS1, "Method setRenderParameters(java.util.Map): Sets the render parameter map to the specified value");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS2, "Method setRenderParameters(java.util.Map): Public render parameters can be set through the map");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS3, "Method setRenderParameters(java.util.Map): Private render parameters can be set through the map");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS4, "Method setRenderParameters(java.util.Map): Previously existing private render parameters not contained in the specified input map are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS5, "Method setRenderParameters(java.util.Map): Previously existing public render parameters not contained in the specified input map remain unchanged");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS6, "Method setRenderParameters(java.util.Map): Parameters that are set are available in subsequent render requests");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS7, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if the input map is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS8, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS9, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is the empty string (\"\") ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS10, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if the values array for any key is null ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS11, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if any element in any values array is null ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERS12, "Method setRenderParameters(java.util.Map): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA1, "Method setRenderParameter(String, String): Sets the parameter value for the specified name");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA2, "Method setRenderParameter(String, String): A private parameter can be set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA3, "Method setRenderParameter(String, String): A public parameter can be set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA4, "Method setRenderParameter(String, String): All previously existing values for the specified name are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA5, "Method setRenderParameter(String, String): If the value is null, all values for the specified name are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA6, "Method setRenderParameter(String, String): Parameters that are set are available in subsequent render requests");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA7, "Method setRenderParameter(String, String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERA8, "Method setRenderParameter(String, String): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB1, "Method setRenderParameter(String, String[]): Sets the parameter values for the specified name.");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB2, "Method setRenderParameter(String, String[]): All existing values are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB3, "Method setRenderParameter(String, String[]): Parameters that are set are available in subsequent render requests");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB4, "Method setRenderParameter(String, String[]): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB5, "Method setRenderParameter(String, String[]): Throws IllegalArgumentException if the values array is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETRENDERPARAMETERB6, "Method setRenderParameter(String, String[]): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA1, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Publishes an event with the specified name and payload");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA2, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA3, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the value is not serializable");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA4, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the value does not have a valid JAXB binding");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTA5, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the value object type is not as specified in the deployment descriptor");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB1, "Method setEvent(String, java.io.Serializable): Publishes an event with the specified name and payload");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB2, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB3, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the value is not serializable");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB4, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the value does not have a valid JAXB binding");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_SETEVENTB5, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the value object type is not as specified in the deployment descriptor");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP1, "Method getRenderParameterMap(): Returns a map of the render parameters currently set on the response");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP2, "Method getRenderParameterMap(): The returned map contains public render parameters");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP3, "Method getRenderParameterMap(): The returned map contains private render parameters");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETRENDERPARAMETERMAP4, "Method getRenderParameterMap(): An empty map is returned if no parameters have been set ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETPORTLETMODE1, "Method getPortletMode(): Returns the current PortletMode for the portlet");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETPORTLETMODE2, "Method getPortletMode(): Returns null if no PortletMode has been set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETWINDOWSTATE1, "Method getWindowState(): Returns the current WindowState for the portlet");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_GETWINDOWSTATE2, "Method getWindowState(): Returns null if no WindowState has been set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_REMOVEPUBLICRENDERPARAMETER1, "Method removePublicRenderParameter(String): Removes the specified public render parameter");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_EVENT_REMOVEPUBLICRENDERPARAMETER2, "Method removePublicRenderParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETWINDOWSTATE1, "Method setWindowState(WindowState): Sets the WindowState to the specified value");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETWINDOWSTATE2, "Method setWindowState(WindowState): Throws WindowStateException if the portlet cannot switch to the specified WindowState");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETWINDOWSTATE3, "Method setWindowState(WindowState): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETPORTLETMODE1, "Method setPortletMode(PortletMode): Sets the PortletMode to the specified value");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETPORTLETMODE2, "Method setPortletMode(PortletMode): Throws PortletModeException if the portlet cannot switch to the specified PortletMode");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETPORTLETMODE3, "Method setPortletMode(PortletMode): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS1, "Method setRenderParameters(java.util.Map): Sets the render parameter map to the specified value");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS2, "Method setRenderParameters(java.util.Map): Public render parameters can be set through the map");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS3, "Method setRenderParameters(java.util.Map): Private render parameters can be set through the map");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS4, "Method setRenderParameters(java.util.Map): Previously existing private render parameters not contained in the specified input map are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS5, "Method setRenderParameters(java.util.Map): Previously existing public render parameters not contained in the specified input map remain unchanged");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS6, "Method setRenderParameters(java.util.Map): Parameters that are set are available in subsequent render requests");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS7, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if the input map is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS8, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS9, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is the empty string (\"\") ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS10, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if the values array for any key is null ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS11, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if any element in any values array is null ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERS12, "Method setRenderParameters(java.util.Map): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA1, "Method setRenderParameter(String, String): Sets the parameter value for the specified name");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA2, "Method setRenderParameter(String, String): A private parameter can be set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA3, "Method setRenderParameter(String, String): A public parameter can be set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA4, "Method setRenderParameter(String, String): All previously existing values for the specified name are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA5, "Method setRenderParameter(String, String): If the value is null, all values for the specified name are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA6, "Method setRenderParameter(String, String): Parameters that are set are available in subsequent render requests");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA7, "Method setRenderParameter(String, String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERA8, "Method setRenderParameter(String, String): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB1, "Method setRenderParameter(String, String[]): Sets the parameter values for the specified name.");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB2, "Method setRenderParameter(String, String[]): All existing values are removed");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB3, "Method setRenderParameter(String, String[]): Parameters that are set are available in subsequent render requests");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB4, "Method setRenderParameter(String, String[]): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB5, "Method setRenderParameter(String, String[]): Throws IllegalArgumentException if the values array is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETRENDERPARAMETERB6, "Method setRenderParameter(String, String[]): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA1, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Publishes an event with the specified name and payload");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA2, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA3, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the value is not serializable");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA4, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the value does not have a valid JAXB binding");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTA5, "Method setEvent(javax.xml.namespace.QName, java.io.Serializable): Throws IllegalArgumentException if the value object type is not as specified in the deployment descriptor");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB1, "Method setEvent(String, java.io.Serializable): Publishes an event with the specified name and payload");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB2, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB3, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the value is not serializable");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB4, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the value does not have a valid JAXB binding");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_SETEVENTB5, "Method setEvent(String, java.io.Serializable): Throws IllegalArgumentException if the value object type is not as specified in the deployment descriptor");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP1, "Method getRenderParameterMap(): Returns a map of the render parameters currently set on the response");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP2, "Method getRenderParameterMap(): The returned map contains public render parameters");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP3, "Method getRenderParameterMap(): The returned map contains private render parameters");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETRENDERPARAMETERMAP4, "Method getRenderParameterMap(): An empty map is returned if no parameters have been set ");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETPORTLETMODE1, "Method getPortletMode(): Returns the current PortletMode for the portlet");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETPORTLETMODE2, "Method getPortletMode(): Returns null if no PortletMode has been set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETWINDOWSTATE1, "Method getWindowState(): Returns the current WindowState for the portlet");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_GETWINDOWSTATE2, "Method getWindowState(): Returns null if no WindowState has been set");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_REMOVEPUBLICRENDERPARAMETER1, "Method removePublicRenderParameter(String): Removes the specified public render parameter");
      tcd.put(V2RESPONSETESTS_STATEAWARERESPONSE_ACTION_REMOVEPUBLICRENDERPARAMETER2, "Method removePublicRenderParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA1, "Method sendRedirect(String): Allows a redirect response to be sent to the client");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA2, "Method sendRedirect(String): Throws IllegalArgumentException if a relative path URL is specified");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA3, "Method sendRedirect(String): Throws IllegalStateException if setPortletMode has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA4, "Method sendRedirect(String): Throws IllegalStateException if setWindowState has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA5, "Method sendRedirect(String): Throws IllegalStateException if setRenderParameter has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA6, "Method sendRedirect(String): Throws IllegalStateException if setRenderParameters has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTA7, "Method sendRedirect(String): Throws IllegalStateException if removePublicRenderParameter has been called before this method");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB1, "Method sendRedirect(String, String): Allows a redirect response to be sent to the client");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB2, "Method sendRedirect(String, String): Encodes a render URL as a parameter under the specified name on the redirect URL");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB3, "Method sendRedirect(String, String): The encoded render URL contains the currently set PortletMode");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB4, "Method sendRedirect(String, String): The encoded render URL contains the currently set WindowState");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB5, "Method sendRedirect(String, String): The encoded render URL contains the currently set render parameters");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB6, "Method sendRedirect(String, String): Throws IllegalArgumentException if a relative path URL is specified");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB7, "Method sendRedirect(String, String): Throws IllegalStateException if setPortletMode has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB8, "Method sendRedirect(String, String): Throws IllegalStateException if setWindowState has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB9, "Method sendRedirect(String, String): Throws IllegalStateException if setRenderParameter has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB10, "Method sendRedirect(String, String): Throws IllegalStateException if setRenderParameters has been called before this method ");
      tcd.put(V2RESPONSETESTS_ACTIONRESPONSE_ACTION_SENDREDIRECTB11, "Method sendRedirect(String, String): Throws IllegalStateException if removePublicRenderParameter has been called before this method");
      tcd.put(V2RESPONSETESTS_EVENTRESPONSE_EVENT_SETRENDERPARAMETERS1, "Method setRenderParameters(java.util.Map): Copies all render parameters set on the EventRequest to the EventResponse");
      tcd.put(V2RESPONSETESTS_EVENTRESPONSE_EVENT_SETRENDERPARAMETERS2, "Method setRenderParameters(java.util.Map): Throws IllegalArgumentException if the input EventRequest parameter is null");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDEXPIRATION_CACHE , "Has String field EXPIRATION_CACHE with value of \"portlet.expiration-cache\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDCACHE_SCOPE , "Has String field CACHE_SCOPE with value of \"portlet.cache-scope\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDPUBLIC_SCOPE , "Has String field PUBLIC_SCOPE with value of \"portlet.public-scope\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDPRIVATE_SCOPE , "Has String field PRIVATE_SCOPE with value of \"portlet.private-scope\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDETAG , "Has String field ETAG with value of \"portlet.ETag\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDUSE_CACHED_CONTENT , "Has String field USE_CACHED_CONTENT with value of \"portlet.use-cached-content\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDNAMESPACED_RESPONSE, "Has String field NAMESPACED_RESPONSE with value of \"X-JAVAX-PORTLET-NAMESPACED-RESPONSE\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FIELDMARKUP_HEAD_ELEMENT, "Has String field MARKUP_HEAD_ELEMENT with value of \"javax.portlet.markup.head.element\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCONTENTTYPE1, "Method getContentType(): Returns a String containing the MIME type that can be used with the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCONTENTTYPE2, "Method getContentType(): Returns null if no content type is set");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_SETCONTENTTYPE1, "Method setContentType(String): Sets the MIME type for the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_SETCONTENTTYPE4, "Method setContentType(String): Throws IllegalArgumentException if the specified MIME type is invalid");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCHARACTERENCODING, "Method getCharacterEncoding(): Returns a String containing the name of the charset used for the response body");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETWRITER1, "Method getWriter(): Returns a PrintWriter object");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETWRITER2, "Method getWriter(): Throws IllegalStateException if called after the getPortletOutputStream method has been called");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETLOCALE, "Method getLocale(): Returns an java.util.Locale representing the locale assigned to the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_SETBUFFERSIZE1, "Method setBufferSize(int): Sets the preferred buffer size for the response body");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_SETBUFFERSIZE2, "Method setBufferSize(int): Throws IllegalStateException if called after content has been written");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETBUFFERSIZE1, "Method getBufferSize(): Returns an int designating the actual buffer size used for the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETBUFFERSIZE2, "Method getBufferSize(): Returns null if buffering is not used");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_FLUSHBUFFER1, "Method flushBuffer(): Returns void and flushes buffer to OutputStream");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_RESETBUFFER1, "Method resetBuffer(): Returns void and clears and data and properties from the buffer");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_RESETBUFFER2, "Method resetBuffer(): Throws IllegalStateException if called after the response has been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_ISCOMMITTED1, "Method isCommitted(): Returns true if the response has been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_ISCOMMITTED2, "Method isCommitted(): Returns false if the response has not been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_RESET1, "Method reset(): Returns void and clears and data and properties from the buffer");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_RESET2, "Method reset(): Throws IllegalStateException if called after the response has been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETPORTLETOUTPUTSTREAM1, "Method getPortletOutputStream(): Returns a PortletOutputStream object");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETPORTLETOUTPUTSTREAM2, "Method getPortletOutputStream(): Throws IllegalStateException if called after the getWriter method has been called");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_CREATERENDERURL, "Method createRenderURL(): Returns a PortletURL object representing a render URL targeting the portlet");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_CREATEACTIONURL, "Method createActionURL(): Returns a PortletURL object representing an action URL targeting the portlet");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_CREATERESOURCEURL, "Method createResourceURL(): Returns a ResourceURL object targeting the portlet");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RENDER_GETCACHECONTROL, "Method getCacheControl(): Returns a CacheControl object");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDEXPIRATION_CACHE , "Has String field EXPIRATION_CACHE with value of \"portlet.expiration-cache\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDCACHE_SCOPE , "Has String field CACHE_SCOPE with value of \"portlet.cache-scope\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDPUBLIC_SCOPE , "Has String field PUBLIC_SCOPE with value of \"portlet.public-scope\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDPRIVATE_SCOPE , "Has String field PRIVATE_SCOPE with value of \"portlet.private-scope\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDETAG , "Has String field ETAG with value of \"portlet.ETag\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDUSE_CACHED_CONTENT , "Has String field USE_CACHED_CONTENT with value of \"portlet.use-cached-content\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDNAMESPACED_RESPONSE, "Has String field NAMESPACED_RESPONSE with value of \"X-JAVAX-PORTLET-NAMESPACED-RESPONSE\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FIELDMARKUP_HEAD_ELEMENT, "Has String field MARKUP_HEAD_ELEMENT with value of \"javax.portlet.markup.head.element\"");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCONTENTTYPE1, "Method getContentType(): Returns a String containing the MIME type that can be used with the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCONTENTTYPE2, "Method getContentType(): Returns null if no content type is set");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETCONTENTTYPE1, "Method setContentType(String): Sets the MIME type for the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETCONTENTTYPE4, "Method setContentType(String): Throws IllegalArgumentException if the specified MIME type is invalid");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCHARACTERENCODING, "Method getCharacterEncoding(): Returns a String containing the name of the charset used for the response body");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETWRITER1, "Method getWriter(): Returns a PrintWriter object");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETWRITER2, "Method getWriter(): Throws IllegalStateException if called after the getPortletOutputStream method has been called");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETLOCALE, "Method getLocale(): Returns an java.util.Locale representing the locale assigned to the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETBUFFERSIZE1, "Method setBufferSize(int): Sets the preferred buffer size for the response body");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_SETBUFFERSIZE2, "Method setBufferSize(int): Throws IllegalStateException if called after content has been written");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETBUFFERSIZE1, "Method getBufferSize(): Returns an int designating the actual buffer size used for the response");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETBUFFERSIZE2, "Method getBufferSize(): Returns null if buffering is not used");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_FLUSHBUFFER1, "Method flushBuffer(): Returns void and flushes buffer to OutputStream");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESETBUFFER1, "Method resetBuffer(): Returns void and clears and data and properties from the buffer");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESETBUFFER2, "Method resetBuffer(): Throws IllegalStateException if called after the response has been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_ISCOMMITTED1, "Method isCommitted(): Returns true if the response has been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_ISCOMMITTED2, "Method isCommitted(): Returns false if the response has not been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESET1, "Method reset(): Returns void and clears and data and properties from the buffer");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_RESET2, "Method reset(): Throws IllegalStateException if called after the response has been committed");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETPORTLETOUTPUTSTREAM1, "Method getPortletOutputStream(): Returns a PortletOutputStream object");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETPORTLETOUTPUTSTREAM2, "Method getPortletOutputStream(): Throws IllegalStateException if called after the getWriter method has been called");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_CREATERENDERURL, "Method createRenderURL(): Returns a PortletURL object representing a render URL targeting the portlet");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_CREATEACTIONURL, "Method createActionURL(): Returns a PortletURL object representing an action URL targeting the portlet");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_CREATERESOURCEURL, "Method createResourceURL(): Returns a ResourceURL object targeting the portlet");
      tcd.put(V2RESPONSETESTS_MIMERESPONSE_RESOURCE_GETCACHECONTROL, "Method getCacheControl(): Returns a CacheControl object");
      tcd.put(V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETTITLE2, "Method setTitle(String): Sets the portlet title to the specified value");
      tcd.put(V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETNEXTPOSSIBLEPORTLETMODES2, "Method setNextPossiblePortletModes(java.util.Collection): Sets the next possible portlet modes to the specified value");
      tcd.put(V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETCONTENTTYPE1, "Method setContentType(String): The portlet container will ignore any character encoding specified as part of the content type for render calls");
      tcd.put(V2RESPONSETESTS_RENDERRESPONSE_RENDER_SETCONTENTTYPE2, "Method setContentType(String): Throws IllegalArgumentException if the content type is not valid");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_FIELDHTTP_STATUS_CODE , "Has String field HTTP_STATUS_CODE with value of \"portlet.http-status-code\"");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETLOCALE1, "Method setLocale(Locale): Sets the locale of the response");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETLOCALE4, "Method setLocale(Locale): Throws IllegalArgumentException if the Locale parameter is null");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETCHARACTERENCODING1, "Method setCharacterEncoding(String): Sets the character encoding of the response");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETCHARACTERENCODING4, "Method setCharacterEncoding(String): Throws IllegalArgumentException if the Locale parameter is null");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_SETCONTENTLENGTH1, "Method setContentLength(int): Sets the length of the content body");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_CREATERENDERURL2, "Method createRenderURL(): Throws IllegalStateException if the cacheability level for the resource URL triggering the serveResource call is not PAGE");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_CREATEACTIONURL2, "Method createActionURL(): Throws IllegalStateException if the cacheability level for the resource URL triggering the serveResource call is not PAGE");
      tcd.put(V2RESPONSETESTS_RESOURCERESPONSE_RESOURCE_CREATERESOURCEURL2, "Method createResourceURL(): Throws IllegalStateException if the cacheability level for the resource URL triggering the serveResource call is not PAGE");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA1, "Method setParameter(String, String): Sets the parameter value for the specified name");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA2, "Method setParameter(String, String): For a render URL, a private parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA3, "Method setParameter(String, String): For a render URL, a public parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA4, "Method setParameter(String, String): For an action URL, an action parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA5, "Method setParameter(String, String): For a resource URL, a resource parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA6, "Method setParameter(String, String): All previously existing values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA7, "Method setParameter(String, String): If the value is null, all values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERA8, "Method setParameter(String, String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB1, "Method setParameter(String, String[]): Sets the parameter value array for the specified name");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB2, "Method setParameter(String, String[]): For a render URL, a private parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB3, "Method setParameter(String, String[]): For a render URL, a public parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB4, "Method setParameter(String, String[]): For an action URL, an action parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB5, "Method setParameter(String, String[]): For a resource URL, a resource parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB6, "Method setParameter(String, String[]): All previously existing values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB7, "Method setParameter(String, String[]): If the value is null, all values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERB8, "Method setParameter(String, String[]): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS1, "Method setParameters(java.util.Map): Sets the parameter map to the specified value");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS2, "Method setParameters(java.util.Map): For a render URL, public parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS3, "Method setParameters(java.util.Map): For a render URL, private parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS4, "Method setParameters(java.util.Map): For an action URL, action parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS5, "Method setParameters(java.util.Map): For a resource URL, resource parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS6, "Method setParameters(java.util.Map): Previously existing private, action, or resource parameters not contained in the specified input map are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS7, "Method setParameters(java.util.Map): Previously existing public parameters not contained in the specified input map remain unchanged");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS8, "Method setParameters(java.util.Map): Parameters that are set are available in requests initiated through the URL");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS9, "Method setParameters(java.util.Map): Throws IllegalArgumentException if the input map is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS10, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS11, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is the empty string (\"\") ");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS12, "Method setParameters(java.util.Map): Throws IllegalArgumentException if the values array for any key is null ");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS13, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any element in any values array is null ");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPARAMETERS14, "Method setParameters(java.util.Map): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETSECURE2, "Method setSecure(boolean): If the input parameter is true, the resulting URL uses a secure connection (HTTPS)");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETSECURE3, "Method setSecure(boolean): If the input parameter is false, the resulting URL can use either a secure or non-secure connection");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETSECURE4, "Method setSecure(boolean): Throws a PortletSecurityException if the run-time environment does not support the setting");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_TOSTRING, "Method toString(): Returns a String containing the portlet URL representation to be included in the markup");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP2, "Method getParameterMap(): For a render URL, the returned map contains all public and private parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP3, "Method getParameterMap(): For an action URL, the returned map contains all action parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP4, "Method getParameterMap(): For a resource URL, the returned map contains all resource parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP5, "Method getParameterMap(): For a resource URL, the returned map does not contain any render parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_GETPARAMETERMAP6, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_WRITEA1, "Method write(): Writes the URL to the output stream through the provided Writer");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_WRITEA2, "Method write(): The written URL is XML escaped (although it may be a token rather than a valid URL)");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_WRITEB1, "Method write(): Writes the URL to the output stream through the provided Writer");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_WRITEB2, "Method write(): If the escapeXML parameter is true, the written URL is XML escaped (although it may be a token rather than a valid URL)");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_WRITEB3, "Method write(): If the escapeXML parameter is false, no excaping is performed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_ADDPROPERTY1, "Method addProperty(String, String): Adds a property value to an existing key");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_ADDPROPERTY2, "Method addProperty(String, String): Existing property values for the key are retained");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_ADDPROPERTY3, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2URLTESTS_BASEURL_RENDERRENURL_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA1, "Method setParameter(String, String): Sets the parameter value for the specified name");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA2, "Method setParameter(String, String): For a render URL, a private parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA3, "Method setParameter(String, String): For a render URL, a public parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA4, "Method setParameter(String, String): For an action URL, an action parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA5, "Method setParameter(String, String): For a resource URL, a resource parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA6, "Method setParameter(String, String): All previously existing values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA7, "Method setParameter(String, String): If the value is null, all values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERA8, "Method setParameter(String, String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB1, "Method setParameter(String, String[]): Sets the parameter value array for the specified name");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB2, "Method setParameter(String, String[]): For a render URL, a private parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB3, "Method setParameter(String, String[]): For a render URL, a public parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB4, "Method setParameter(String, String[]): For an action URL, an action parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB5, "Method setParameter(String, String[]): For a resource URL, a resource parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB6, "Method setParameter(String, String[]): All previously existing values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB7, "Method setParameter(String, String[]): If the value is null, all values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERB8, "Method setParameter(String, String[]): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS1, "Method setParameters(java.util.Map): Sets the parameter map to the specified value");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS2, "Method setParameters(java.util.Map): For a render URL, public parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS3, "Method setParameters(java.util.Map): For a render URL, private parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS4, "Method setParameters(java.util.Map): For an action URL, action parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS5, "Method setParameters(java.util.Map): For a resource URL, resource parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS6, "Method setParameters(java.util.Map): Previously existing private, action, or resource parameters not contained in the specified input map are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS7, "Method setParameters(java.util.Map): Previously existing public parameters not contained in the specified input map remain unchanged");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS8, "Method setParameters(java.util.Map): Parameters that are set are available in requests initiated through the URL");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS9, "Method setParameters(java.util.Map): Throws IllegalArgumentException if the input map is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS10, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS11, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is the empty string (\"\") ");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS12, "Method setParameters(java.util.Map): Throws IllegalArgumentException if the values array for any key is null ");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS13, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any element in any values array is null ");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPARAMETERS14, "Method setParameters(java.util.Map): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETSECURE2, "Method setSecure(boolean): If the input parameter is true, the resulting URL uses a secure connection (HTTPS)");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETSECURE3, "Method setSecure(boolean): If the input parameter is false, the resulting URL can use either a secure or non-secure connection");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETSECURE4, "Method setSecure(boolean): Throws a PortletSecurityException if the run-time environment does not support the setting");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_TOSTRING, "Method toString(): Returns a String containing the portlet URL representation to be included in the markup");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP2, "Method getParameterMap(): For a render URL, the returned map contains all public and private parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP3, "Method getParameterMap(): For an action URL, the returned map contains all action parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP4, "Method getParameterMap(): For a resource URL, the returned map contains all resource parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP5, "Method getParameterMap(): For a resource URL, the returned map does not contain any render parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_GETPARAMETERMAP6, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_WRITEA1, "Method write(): Writes the URL to the output stream through the provided Writer");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_WRITEA2, "Method write(): The written URL is XML escaped (although it may be a token rather than a valid URL)");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_WRITEB1, "Method write(): Writes the URL to the output stream through the provided Writer");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_WRITEB2, "Method write(): If the escapeXML parameter is true, the written URL is XML escaped (although it may be a token rather than a valid URL)");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_WRITEB3, "Method write(): If the escapeXML parameter is false, no excaping is performed");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_ADDPROPERTY1, "Method addProperty(String, String): Adds a property value to an existing key");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_ADDPROPERTY2, "Method addProperty(String, String): Existing property values for the key are retained");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_ADDPROPERTY3, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2URLTESTS_BASEURL_RENDERACTURL_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA1, "Method setParameter(String, String): Sets the parameter value for the specified name");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA2, "Method setParameter(String, String): For a render URL, a private parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA3, "Method setParameter(String, String): For a render URL, a public parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA4, "Method setParameter(String, String): For an action URL, an action parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA5, "Method setParameter(String, String): For a resource URL, a resource parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA6, "Method setParameter(String, String): All previously existing values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA7, "Method setParameter(String, String): If the value is null, all values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERA8, "Method setParameter(String, String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB1, "Method setParameter(String, String[]): Sets the parameter value array for the specified name");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB2, "Method setParameter(String, String[]): For a render URL, a private parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB3, "Method setParameter(String, String[]): For a render URL, a public parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB4, "Method setParameter(String, String[]): For an action URL, an action parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB5, "Method setParameter(String, String[]): For a resource URL, a resource parameter can be set");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB6, "Method setParameter(String, String[]): All previously existing values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB7, "Method setParameter(String, String[]): If the value is null, all values for the specified key are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERB8, "Method setParameter(String, String[]): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS1, "Method setParameters(java.util.Map): Sets the parameter map to the specified value");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS2, "Method setParameters(java.util.Map): For a render URL, public parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS3, "Method setParameters(java.util.Map): For a render URL, private parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS4, "Method setParameters(java.util.Map): For an action URL, action parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS5, "Method setParameters(java.util.Map): For a resource URL, resource parameters can be set through the map");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS6, "Method setParameters(java.util.Map): Previously existing private, action, or resource parameters not contained in the specified input map are removed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS7, "Method setParameters(java.util.Map): Previously existing public parameters not contained in the specified input map remain unchanged");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS8, "Method setParameters(java.util.Map): Parameters that are set are available in requests initiated through the URL");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS9, "Method setParameters(java.util.Map): Throws IllegalArgumentException if the input map is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS10, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS11, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any key in the map is the empty string (\"\") ");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS12, "Method setParameters(java.util.Map): Throws IllegalArgumentException if the values array for any key is null ");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS13, "Method setParameters(java.util.Map): Throws IllegalArgumentException if any element in any values array is null ");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPARAMETERS14, "Method setParameters(java.util.Map): Throws IllegalStateException if the method is invoked after the sendRedirect method has been called");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETSECURE2, "Method setSecure(boolean): If the input parameter is true, the resulting URL uses a secure connection (HTTPS)");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETSECURE3, "Method setSecure(boolean): If the input parameter is false, the resulting URL can use either a secure or non-secure connection");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETSECURE4, "Method setSecure(boolean): Throws a PortletSecurityException if the run-time environment does not support the setting");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_TOSTRING, "Method toString(): Returns a String containing the portlet URL representation to be included in the markup");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP1, "Method getParameterMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object for the parameter names and values if parameters are available");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP2, "Method getParameterMap(): For a render URL, the returned map contains all public and private parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP3, "Method getParameterMap(): For an action URL, the returned map contains all action parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP4, "Method getParameterMap(): For a resource URL, the returned map contains all resource parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP5, "Method getParameterMap(): For a resource URL, the returned map does not contain any render parameters for the request");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_GETPARAMETERMAP6, "Method getParameterMap(): Returns an empty map if no parameters exist");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_WRITEA1, "Method write(): Writes the URL to the output stream through the provided Writer");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_WRITEA2, "Method write(): The written URL is XML escaped (although it may be a token rather than a valid URL)");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_WRITEB1, "Method write(): Writes the URL to the output stream through the provided Writer");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_WRITEB2, "Method write(): If the escapeXML parameter is true, the written URL is XML escaped (although it may be a token rather than a valid URL)");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_WRITEB3, "Method write(): If the escapeXML parameter is false, no excaping is performed");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_ADDPROPERTY1, "Method addProperty(String, String): Adds a property value to an existing key");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_ADDPROPERTY2, "Method addProperty(String, String): Existing property values for the key are retained");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_ADDPROPERTY3, "Method addProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPROPERTY1, "Method setProperty(String, String): Sets a property value for the specified key");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPROPERTY2, "Method setProperty(String, String): Resets any existing property values for the specified key");
      tcd.put(V2URLTESTS_BASEURL_RENDERRESURL_SETPROPERTY3, "Method setProperty(String, String): Throws IllegalArgumentException if the specified key is null");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE1, "Method setWindowState(WindowState): Sets the WindowState to be used when the URL is activated");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE2, "Method setWindowState(WindowState): Throws WindowStateException if the portal does not support the specified Window State");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE3, "Method setWindowState(WindowState): Throws WindowStateException if the specified WindowState is not declared in the deployment descriptor");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETWINDOWSTATE4, "Method setWindowState(WindowState): Throws WindowStateException if the user is not allowed to switch to the specified WindowState");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE1, "Method setPortletMode(PortletMode): Sets the PortletMode to be used when the URL is activated");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE2, "Method setPortletMode(PortletMode): Throws PortletModeException if the portal does not support the specified Window State");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE3, "Method setPortletMode(PortletMode): Throws PortletModeException if the specified PortletMode is not declared in the deployment descriptor");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_SETPORTLETMODE4, "Method setPortletMode(PortletMode): Throws PortletModeException if the user is not allowed to switch to the specified PortletMode");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_GETPORTLETMODE1, "Method getPortletMode(): Returns the PortletMode object set on the URL");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_GETPORTLETMODE2, "Method getPortletMode(): Returns null if the PortletMode has not been set");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_GETWINDOWSTATE1, "Method getWindowState(): Returns the WindowState object set on the URL");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_GETWINDOWSTATE2, "Method getWindowState(): Returns null if the Window State has not been set");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_REMOVEPUBLICRENDERPARAMETER1, "Method removePublicRenderParameter(String): Removes the specified public render parameter");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERRENURL_REMOVEPUBLICRENDERPARAMETER2, "Method removePublicRenderParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE1, "Method setWindowState(WindowState): Sets the WindowState to be used when the URL is activated");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE2, "Method setWindowState(WindowState): Throws WindowStateException if the portal does not support the specified Window State");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE3, "Method setWindowState(WindowState): Throws WindowStateException if the specified WindowState is not declared in the deployment descriptor");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETWINDOWSTATE4, "Method setWindowState(WindowState): Throws WindowStateException if the user is not allowed to switch to the specified WindowState");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE1, "Method setPortletMode(PortletMode): Sets the PortletMode to be used when the URL is activated");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE2, "Method setPortletMode(PortletMode): Throws PortletModeException if the portal does not support the specified Window State");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE3, "Method setPortletMode(PortletMode): Throws PortletModeException if the specified PortletMode is not declared in the deployment descriptor");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_SETPORTLETMODE4, "Method setPortletMode(PortletMode): Throws PortletModeException if the user is not allowed to switch to the specified PortletMode");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_GETPORTLETMODE1, "Method getPortletMode(): Returns the PortletMode object set on the URL");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_GETPORTLETMODE2, "Method getPortletMode(): Returns null if the PortletMode has not been set");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_GETWINDOWSTATE1, "Method getWindowState(): Returns the WindowState object set on the URL");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_GETWINDOWSTATE2, "Method getWindowState(): Returns null if the Window State has not been set");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_REMOVEPUBLICRENDERPARAMETER1, "Method removePublicRenderParameter(String): Removes the specified public render parameter");
      tcd.put(V2URLTESTS_PORTLETURL_RENDERACTURL_REMOVEPUBLICRENDERPARAMETER2, "Method removePublicRenderParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDFULL, "Has String field FULL with value of \"cacheLevelFull\" ");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDPAGE, "Has String field PAGE with value of \"cacheLevelPage\" ");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDPORTLET, "Has String field PORTLET with value of \"cacheLevelPortlet\" ");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_FIELDSHARED, "Has String field SHARED with value of \"javax.portlet.shared\" ");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_IMPLEMENTSBASEURL2, "Method implementsBaseUR(): All tests described for the BaseURL execute correctly with the ResourceURL");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_SETRESOURCEID, "Method setResourceID(String): Sets the specified String as the portlet resource ID");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_GETCACHEABILITY, "Method getCacheability(): Returns a String containing the cacheability level set on the resource URL");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_SETCACHEABILITY1, "Method setCacheability(String): Sets the cacheability level for the resource URL");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_SETCACHEABILITY2, "Method setCacheability(String): Throws IllegalArgumentException if the input parameter does not have a value of \"FULL\", \"PAGE\", or \"PORTLET\"");
      tcd.put(V2URLTESTS_RESOURCEURL_RENDERRESURL_SETCACHEABILITY3, "Method setCacheability(String): Throws IllegalStateException if the specified cacheability level is weaker than the cacheability level for the parent resource URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_CONFIGURATION, "A PortletURLGenerationListener can be configured in the portlet deployment descriptor");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL1, "Method filterActionURL(PortletURL): The filterActionURL(PortletURL): method is called before the toString or write methods are executed on an action URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL2, "Method filterActionURL(PortletURL): The filterActionURL method is passed the PortletURL object representing the action URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL3, "Method filterActionURL(PortletURL): The input action URL object can be modified by setting a parameter and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERACTIONURL4, "Method filterActionURL(PortletURL): The input action URL object can be modified by setting a property and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL5, "Method filterRenderURL(PortletURL): The filterRenderURL(PortletURL): method is called before the toString or write methods are executed on an action URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL6, "Method filterRenderURL(PortletURL): The filterRenderURL method is passed the PortletURL object representing the action URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL7, "Method filterRenderURL(PortletURL): The input action URL object can be modified by setting a parameter and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRENDERURL8, "Method filterRenderURL(PortletURL): The input action URL object can be modified by setting a property and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL1, "Method filterResourceURL(ResourceURL): The filterResourceURL(PortletURL): method is called before the toString or write methods are executed on an action URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL2, "Method filterResourceURL(ResourceURL): The filterResourceURL method is passed the PortletURL object representing the action URL");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL3, "Method filterResourceURL(ResourceURL): The input action URL object can be modified by setting a parameter and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL4, "Method filterResourceURL(ResourceURL): The input action URL object can be modified by setting a property and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2URLTESTS_PORTLETURLGENERATIONLISTENER_RENDER_FILTERRESOURCEURL5, "Method filterResourceURL(ResourceURL): The input action URL object can be modified by setting the resource ID and the modified URL object is processed by the PortletURL toString or write method");
      tcd.put(V2EXCEPTIONTESTS_PORTLETMODEEXCEPTION_RENDER_HASGETMODE2, "Returns the PortletMode object causing this exception");
      tcd.put(V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_ISPERMANENT1, "Method isPermanent(): Returns a boolean");
      tcd.put(V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_ISPERMANENT2, "Method isPermanent(): Returns true if the portlet is permanently unavailable ");
      tcd.put(V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_ISPERMANENT3, "Method isPermanent(): Returns false if the portlet is temporarily unavailable ");
      tcd.put(V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_GETUNAVAILABLESECONDS1, "Method getUnavailableSeconds(): Returns an integer ");
      tcd.put(V2EXCEPTIONTESTS_UNAVAILABLEEXCEPTION_RENDER_GETUNAVAILABLESECONDS2, "Method getUnavailableSeconds(): Returns a number &lt;= 0 if the portlet is permanently unavailable");
      tcd.put(V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_CONSTRUCTOR2, "For ValidatorException(java.lang.String, java.util.Collection&lt;java.lang.String&gt;), the failedKeys parameter may be null");
      tcd.put(V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_CONSTRUCTOR4, "For ValidatorException(java.lang.String, java.lang.Throwable, java.util.Collection&lt;java.lang.String&gt;), the failedKeys parameter may be null");
      tcd.put(V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_CONSTRUCTOR6, "For ValidatorException(java.lang.Throwable, java.util.Collection&lt;java.lang.String&gt;), the failedKeys parameter may be null");
      tcd.put(V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_GETFAILEDKEYS1, "Method getFailedKeys(): Returns a java.util.Enumeration&lt;java.lang.String&gt; object containing the preference keys that failed validation");
      tcd.put(V2EXCEPTIONTESTS_VALIDATOREXCEPTION_RENDER_GETFAILEDKEYS2, "Method getFailedKeys(): Returns an empty enmueration if no failed keys are available");
      tcd.put(V2EXCEPTIONTESTS_WINDOWSTATEEXCEPTION_RENDER_GETSTATE, "Method getState(): Returns the WindowState object causing this exception");
      tcd.put(V2ANNOTATIONTESTS_PROCESSACTION_ACTION_NAME, "Method name(): On an action request, the method is executed if the parameter \"javax.portlet.action\" matches the name field");
      tcd.put(V2ANNOTATIONTESTS_PROCESSEVENT_EVENT_QNAME, "Method qname(): On an event request, the method is executed if the Event qname matches the qname field");
      tcd.put(V2ANNOTATIONTESTS_PROCESSEVENT_EVENT_NAME, "Method name(): On an event request, the method is executed if the Event name matches the name field");
      tcd.put(V2ANNOTATIONTESTS_RENDERMODE_RENDER_NAME, "Method name(): On a render request, the method is executed if the portlet mode matches the name field");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPORTLETNAME, "Method getPortletName(): Returns a String containing the portlet name");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPORTLETCONTEXT, "Method getPortletContext(): Returns the PortletContext object associated with the portlet");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETRESOURCEBUNDLE, "Method getResourceBundle(Locale): Returns the ResourceBundle for the specified locale");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETINITPARAMETER1, "Method getInitParameter(String): Returns a String containing the initialization parameter value for the given name");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETINITPARAMETER3, "Method getInitParameter(String): Throws IllegalArgumentException if the name parameter is null");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETINITPARAMETERNAMES1, "Method getInitParameterNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the names of the initialization parameters");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPUBLICRENDERPARAMETERNAMES1, "Method getPublicRenderParameterNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the names of the public render parameters");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETDEFAULTNAMESPACE1, "Method getDefaultNamespace(): Returns a String containing the default namespace for events and public render parameters as defined in the deployment descriptor");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPUBLISHINGEVENTQNAMES1, "Method getPublishingEventQNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the publishing event qnames as defined in the deployment descriptor");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETPROCESSINGEVENTQNAMES1, "Method getProcessingEventQNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the processing event qnames as defined in the deployment descriptor");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETSUPPORTEDLOCALES1, "Method getSupportedLocales(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the names of the supported locales as defined in the deployment descriptor");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS1, "Method getContainerRuntimeOptions(): Returns an java.util.Map&lt;java.lang.String,java.lang.String[]&gt; object containing the container runtime options as defined in the deployment descriptor");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS2, "Method getContainerRuntimeOptions(): If the same option is defined at the portlet application and at the portlet level, the definition at the portlet level takes precedence");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS3, "Method getContainerRuntimeOptions(): If the portlet container does not support a runtime option defined in the portlet descriptor, that option will not be returned in this map");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER_GETCONTAINERRUNTIMEOPTIONS4, "Method getContainerRuntimeOptions(): Returns an empty map if no container runtime options have been defined ");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETINITPARAMETER2, "Method getInitParameter(String): Returns null if the specified initialization parameter does not exist");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETINITPARAMETERNAMES2, "Method getInitParameterNames(): Returns an empty Enumeration if there are no initialization parameters available ");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETPUBLICRENDERPARAMETERNAMES2, "Method getPublicRenderParameterNames(): Returns an empty Enumeration if there are no public render parameters are defined ");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETDEFAULTNAMESPACE2, "Method getDefaultNamespace(): Returns XMLConstants.NULL_NS_URI if no default namespace is defined in the deployment descriptor ");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETPUBLISHINGEVENTQNAMES2, "Method getPublishingEventQNames(): Returns an empty Enumeration if there are no processing events are defined");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETPROCESSINGEVENTQNAMES2, "Method getProcessingEventQNames(): Returns an empty Enumeration if there are no processing events are defined");
      tcd.put(V2PORTLETTESTS_PORTLETCONFIG_RENDER2_GETSUPPORTEDLOCALES2, "Method getSupportedLocales(): Returns an empty Enumeration if there are no supported locales are defined");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_CONSTRUCTOR1, "The constructor PortletMode(java.lang.String): allows a PortletMode object of the specified name to be constructed");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_CONSTRUCTOR2, "The constructor PortletMode(java.lang.String): converts any upper case letters in the name parameter to lower case");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_FIELDEDIT, "Has PortletMode field EDIT with value of PortletMode.EDIT ");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_FIELDHELP, "Has PortletMode field HELP with value of PortletMode.HELP ");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_FIELDVIEW, "Has PortletMode field VIEW with value of PortletMode.VIEW ");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_TOSTRING, "Method toString(): Returns a String representation of the portlet mode");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_HASHCODE, "Method hashCode(): Returns an int containing the has code for the portlet mode");
      tcd.put(V2PORTLETTESTS_PORTLETMODE_RENDER_EQUALS, "Method equals(): Returns true if the PortletMode equals the specified PortletMode");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_CONSTRUCTOR1, "The constructor WindowState(java.lang.String): allows a WindowState object of the specified name to be constructed");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_CONSTRUCTOR2, "The constructor WindowState(java.lang.String): converts any upper case letters in the name parameter to lower case");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_FIELDMAXIMIZED, "Has WindowState field MAXIMIZED with value of WindowState.MAXIMIZED ");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_FIELDMINIMIZED, "Has WindowState field MINIMIZED with value of WindowState.MINIMIZED ");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_FIELDNORMAL, "Has WindowState field NORMAL with value of WindowState.NORMAL ");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_TOSTRING, "Method toString(): Returns a String representation of the portlet mode");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_HASHCODE, "Method hashCode(): Returns an int containing the has code for the portlet mode");
      tcd.put(V2PORTLETTESTS_WINDOWSTATE_RENDER_EQUALS, "Method equals(): Returns true if the WindowState equals the specified WindowState");
      tcd.put(V2PORTLETTESTS_PORTLET_RENDER_INIT1, "Method init(PortletConfig): is called for the portlet defined in the deployment descriptor");
      tcd.put(V2PORTLETTESTS_PORTLET_RENDER_INIT2, "Method init(PortletConfig): If the init method throws a PortletException, the portlet will not be placed in service");
      tcd.put(V2PORTLETTESTS_PORTLET_RENDER_RENDER1, "Method render(RenderRequest, RenderResponse): is called when the portlet is to be rendered");
      tcd.put(V2PORTLETTESTS_PORTLET_RENDER_RENDER2, "Method render(RenderRequest, RenderResponse): is called when a Render URL for the portlet is triggered");
      tcd.put(V2PORTLETTESTS_PORTLET_ACTION_PROCESSACTION, "Method processAction(ActionRequest, ActionResponse): is called when an action URL for the portlet is triggered");
      tcd.put(V2PORTLETTESTS_EVENT_EVENT_GETQNAME1, "Method getQName(): Returns the javax.xml.namespace.QName object for the Event");
      tcd.put(V2PORTLETTESTS_EVENT_EVENT_GETQNAME2, "Method getQName(): Returned value may not be null");
      tcd.put(V2PORTLETTESTS_EVENT_EVENT_GETNAME1, "Method getName(): Returns a String containing the event local name");
      tcd.put(V2PORTLETTESTS_EVENT_EVENT_GETNAME2, "Method getName(): Returned value may not be null");
      tcd.put(V2PORTLETTESTS_EVENT_EVENT_GETVALUE1, "Method getValue(String, String): Returns a java.io.Serializable object representing the event payload");
      tcd.put(V2PORTLETTESTS_EVENT_EVENT_GETVALUE2, "Method getValue(String, String): Returned value is null if the event has no payload");
      tcd.put(V2PORTLETTESTS_EVENTPORTLET_EVENT_PROCESSEVENT, "Method processEvent(EventRequest, EventResponse): is called when an event is targeted to the portlet");
      tcd.put(V2PORTLETTESTS_RESOURCESERVINGPORTLET_RESOURCE_SERVERESOURCE, "Method serveResource(ResourceRequest, ResourceResponse): is called to allow the portlet to generate resource content ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_INITA, "Method init(): Called when the portlet is initialized");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_INITB, "Method init(PortletConfig): Called when the portlet is initialized");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSACTION1, "Method processAction(ActionRequest, ActionResponse): If overridden, the Portlet.processAction tests execute correctly");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSACTION2, "Method processAction(ActionRequest, ActionResponse): Dispatches to @ProcessAction annotated method matching the ActionRequest.ACTION_NAME parameter");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSACTION3, "Method processAction(ActionRequest, ActionResponse): Throws PortletException if no matching @ProcessAction annotated method found");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER1, "Method render(RenderRequest, RenderResponse): If overridden, Portlet.render tests execute correctly");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER2, "Method render(RenderRequest, RenderResponse): If RENDER_PART=null, Calls the doHeaders(RenderRequest, RenderResponse): method");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER3, "Method render(RenderRequest, RenderResponse): If RENDER_PART=null, Sets the title on RenderResponse with the value returned by the getTitle(RenderRequest): method");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER4, "Method render(RenderRequest, RenderResponse): If RENDER_PART=null, Retrieves the next possible portlet modes from the PortletConfig and sets them on the RenderResponse");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER5, "Method render(RenderRequest, RenderResponse): If RENDER_PART=null, Calls the DoDispatch(RenderRequest, RenderResponse): method ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER6, "Method render(RenderRequest, RenderResponse): If RENDER_PART=RENDER_HEADERS, Calls the doHeaders(RenderRequest, RenderResponse): method");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER7, "Method render(RenderRequest, RenderResponse): If RENDER_PART=RENDER_HEADERS, Sets the title on RenderResponse with the value returned by the getTitle(RenderRequest): method");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER8, "Method render(RenderRequest, RenderResponse): If RENDER_PART=RENDER_HEADERS, Retrieves the next possible portlet modes from the PortletConfig and sets them on the RenderResponse");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER9, "Method render(RenderRequest, RenderResponse): If RENDER_PART=RENDER_MARKUP, Calls the DoDispatch(RenderRequest, RenderResponse): method ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_RENDER10, "Method render(RenderRequest, RenderResponse): If RENDER_PART=&lt;any other value&gt;, throws PortletException ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_GETTITLE1, "Method getTitle(): If overridden, the String returned by this method is used as the portlet title");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_GETTITLE2, "Method getTitle(): Returns a String containing the title from the portlet resource bundle under the key \"javax.portlet.title\"");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_GETTITLE3, "Method getTitle(): Returns null if no title is available from the portlet resource bundle");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH1, "Method doDispatch(RenderRequest, RenderResponse): If overridden, is called when markup is to be generated");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH2, "Method doDispatch(RenderRequest, RenderResponse): If not overridden, If the WindowState is minimized, no markup method is called and no markup is generated");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH3, "Method doDispatch(RenderRequest, RenderResponse): If not overridden and not minimized, the @RenderMode annotated method matching the current PortletMode is called ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH4, "Method doDispatch(RenderRequest, RenderResponse): If not overridden, not minimized, and no annotated method is found, if the current render mode is \"view\", the doView(RenderRequest, RenderResponse): method is called  ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH5, "Method doDispatch(RenderRequest, RenderResponse): If not overridden, not minimized, and no annotated method is found, if the current render mode is \"edit\", the doEdit(RenderRequest, RenderResponse): method is called  ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH6, "Method doDispatch(RenderRequest, RenderResponse): If not overridden, not minimized, and no annotated method is found, if the current render mode is \"help\", the doHelp(RenderRequest, RenderResponse): method is called  ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DODISPATCH7, "Method doDispatch(RenderRequest, RenderResponse): If not overridden not minimized, no annotated method is found, ant the mode is not \"view\", \"edit\", or \"help\", throws a PortletException");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOVIEW1, "Method doView(RenderRequest, RenderResponse): If overridden, is called when a render request in view mode occurs");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOVIEW2, "Method doView(RenderRequest, RenderResponse): If not overridden, throws a PortletException");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOEDIT1, "Method doEdit(RenderRequest, RenderResponse): If overridden, is called when a render request in edit mode occurs");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOEDIT2, "Method doEdit(RenderRequest, RenderResponse): If not overridden, throws a PortletException");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHELP1, "Method doHelp(RenderRequest, RenderResponse): If overridden, is called when a render request in help mode occurs");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHELP2, "Method doHelp(RenderRequest, RenderResponse): If not overridden, throws a PortletException");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_GETPORTLETCONFIG, "Method getPortletConfig(): Returns the PortletConfig object for the portlet");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DESTROY, "Method destroy(): Called by the portlet container to indicate to a portlet that the portlet is being taken out of service. ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_SERVERESOURCE1, "Method serveResource(ResourceRequest, ResourceResponse): Is called when a ResourceURL targeting the portlet is triggered");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_SERVERESOURCE2, "Method serveResource(ResourceRequest, ResourceResponse): Forwards the request to the ResourceID value if the method is not overridden and if the resource ID is not null");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_SERVERESOURCE3, "Method serveResource(ResourceRequest, ResourceResponse): Does nothing if the method is not overridden and if the resource ID is null");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSEVENT1, "Method processEvent(EventRequest, EventResponse): Is called when an Event targeting the portlet occurs");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSEVENT2, "Method processEvent(EventRequest, EventResponse): The @ProcessEvent annotated method matching the current Event is called ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_PROCESSEVENT3, "Method processEvent(EventRequest, EventResponse): If there is no matching annotated method, sets the render parameters on the EventResponse to equal the EventRequest parameters");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHEADERS1, "Method doHeaders(RenderRequest, RenderResponse): Is called during generic portlet render request processing  ");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_DOHEADERS2, "Method doHeaders(RenderRequest, RenderResponse): The default implementation does nothing");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_GETNEXTPOSSIBLEPORTLETMODES1, "Method getNextPossiblePortletModes(): Is called during generic portlet render request processing");
      tcd.put(V2PORTLETTESTS_GENERICPORTLET_RENDER_GETNEXTPOSSIBLEPORTLETMODES2, "Method getNextPossiblePortletModes(): The default implementation returns null");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETEXPIRATIONTIME1, "Method getExpirationTime(): Returns the expiration time set through setExpirationTime");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETEXPIRATIONTIME2, "Method getExpirationTime(): Returns the default expiration time from the deployment descriptor if the expiration time has not been set");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETEXPIRATIONTIME3, "Method getExpirationTime(): Returns 0 if the expiration time has not been set and no default is set in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETEXPIRATIONTIME1, "Method setExpirationTime(int): Sets the expiration time for the current response to the specified value");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETEXPIRATIONTIME2, "Method setExpirationTime(int): If the expiration value is set to 0, caching is disabled");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETEXPIRATIONTIME3, "Method setExpirationTime(int): If the expiration value is set to -1, the cache does not expire");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE1, "Method isPublicScope(): Returns true if the caching scope has been set to public through the setPublicScope method");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE2, "Method isPublicScope(): Returns true if the caching scope default has not been set with the setPublicScope method, but has been set to public in the deployment descriptor ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE3, "Method isPublicScope(): Returns false if the caching scope has not been set with the setPublicScope method, but has been set to private through the setPublicScope method ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_ISPUBLICSCOPE5, "Method isPublicScope(): Returns false if the caching scope has not been set with the setPublicScope method and has not been set in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETPUBLICSCOPE1, "Method setPublicScope(boolean): If the input parameter is true, the cache scope is set to public");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETPUBLICSCOPE2, "Method setPublicScope(boolean): If the input parameter is false, the cache scope is set to non-public");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETETAG1, "Method getETag(): Returns a String containing the ETag for the current response");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_GETETAG2, "Method getETag(): Returns null if no ETag is set on the response");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETETAG1, "Method setETag(String): Sets an ETag for the current response");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETETAG2, "Method setETag(String): A previously-set ETag is overwritten");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETETAG3, "Method setETag(String): Removes the ETag if the input parameter is null");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_USECACHEDCONTENT1, "Method useCachedContent(): Returns true if cached content has been set to valid through the setUseCachedContent method");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_USECACHEDCONTENT2, "Method useCachedContent(): Returns false if cached content has been set to invalid through the setUseCachedContent method");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_USECACHEDCONTENT3, "Method useCachedContent(): Returns false if the use cached content indcator has not been set");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETUSECACHEDCONTENT1, "Method setUseCachedContent(boolean): If set to true, the cached content is valid ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RENDER_SETUSECACHEDCONTENT2, "Method setUseCachedContent(boolean): If set to false, the cached content is invalid ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETEXPIRATIONTIME1, "Method getExpirationTime(): Returns the expiration time set through setExpirationTime");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETEXPIRATIONTIME2, "Method getExpirationTime(): Returns the default expiration time from the deployment descriptor if the expiration time has not been set");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETEXPIRATIONTIME3, "Method getExpirationTime(): Returns 0 if the expiration time has not been set and no default is set in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETEXPIRATIONTIME1, "Method setExpirationTime(int): Sets the expiration time for the current response to the specified value");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETEXPIRATIONTIME2, "Method setExpirationTime(int): If the expiration value is set to 0, caching is disabled");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETEXPIRATIONTIME3, "Method setExpirationTime(int): If the expiration value is set to -1, the cache does not expire");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE1, "Method isPublicScope(): Returns true if the caching scope has been set to public through the setPublicScope method");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE2, "Method isPublicScope(): Returns true if the caching scope default has not been set with the setPublicScope method, but has been set to public in the deployment descriptor ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE3, "Method isPublicScope(): Returns false if the caching scope has not been set with the setPublicScope method, but has been set to private through the setPublicScope method ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_ISPUBLICSCOPE5, "Method isPublicScope(): Returns false if the caching scope has not been set with the setPublicScope method and has not been set in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETPUBLICSCOPE1, "Method setPublicScope(boolean): If the input parameter is true, the cache scope is set to public");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETPUBLICSCOPE2, "Method setPublicScope(boolean): If the input parameter is false, the cache scope is set to non-public");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETETAG1, "Method getETag(): Returns a String containing the ETag for the current response");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_GETETAG2, "Method getETag(): Returns null if no ETag is set on the response");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETETAG1, "Method setETag(String): Sets an ETag for the current response");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETETAG2, "Method setETag(String): A previously-set ETag is overwritten");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETETAG3, "Method setETag(String): Removes the ETag if the input parameter is null");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_USECACHEDCONTENT1, "Method useCachedContent(): Returns true if cached content has been set to valid through the setUseCachedContent method");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_USECACHEDCONTENT2, "Method useCachedContent(): Returns false if cached content has been set to invalid through the setUseCachedContent method");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_USECACHEDCONTENT3, "Method useCachedContent(): Returns false if the use cached content indcator has not been set");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETUSECACHEDCONTENT1, "Method setUseCachedContent(boolean): If set to true, the cached content is valid ");
      tcd.put(V2ENVIRONMENTTESTS_CACHECONTROL_RESOURCE_SETUSECACHEDCONTENT2, "Method setUseCachedContent(boolean): If set to false, the cached content is invalid ");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_FIELDMARKUP_HEAD_ELEMENT_SUPPORT, "Has String field MARKUP_HEAD_ELEMENT_SUPPORT with value of \"javax.portlet.markup.head.element.support\" ");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTY1, "Method getProperty(String): Returns a String containing the value for the specified property ");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTY2, "Method getProperty(String): Returns null if there is no property defined for the specified name");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTY3, "Method getProperty(String): Throws IllegalArgumentException if the specified name is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTYNAMES1, "Method getPropertyNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing all portal property names");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPROPERTYNAMES2, "Method getPropertyNames(): Returns an empty Enumeration if there are no portal property names defined");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES1, "Method getSupportedPortletModes(): Returns an java.util.Enumeration&lt;PortletMode&gt; containing all supported portlet modes");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES2, "Method getSupportedPortletModes(): The Enumeration returned must contain the view mode");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES3, "Method getSupportedPortletModes(): The Enumeration returned must contain the edit mode");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDPORTLETMODES4, "Method getSupportedPortletModes(): The Enumeration returned must contain the help mode");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES1, "Method getSupportedWindowStates(): Returns an java.util.Enumeration&lt;WindowState&gt; containing all supported window states");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES2, "Method getSupportedWindowStates(): The Enumeration returned must contain the maximized state");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES3, "Method getSupportedWindowStates(): The Enumeration returned must contain the minimized state");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETSUPPORTEDWINDOWSTATES4, "Method getSupportedWindowStates(): The Enumeration returned must contain the normal state");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO1, "Method getPortalInfo(): Returns a String containing information about the portal");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO2, "Method getPortalInfo(): The returned string is of the form \"([^ ]+)/([^ ]+) *(.*)\", where $1 is the portal name, $2 is the version, and $3 is optional additional information");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO3, "Method getPortalInfo(): The returned string contains the portal name");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO4, "Method getPortalInfo(): The returned string contains the portal version");
      tcd.put(V2ENVIRONMENTTESTS_PORTALCONTEXT_RENDER_GETPORTALINFO5, "Method getPortalInfo(): The returned string may not be null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO1, "Method getServerInfo(): Returns a String containing information about the portlet container");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO2, "Method getServerInfo(): The returned string is of the form \"([^ ]+)/([^ ]+) *(.*)\", where $1 is the portal name, $2 is the version, and $3 is optional additional information");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO3, "Method getServerInfo(): The returned string contains the container name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO4, "Method getServerInfo(): The returned string contains the container version");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETSERVERINFO5, "Method getServerInfo(): The returned string may not be null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREQUESTDISPATCHER1, "Method getRequestDispatcher(String): Returns a PortletRequestDispatcher for the specified path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREQUESTDISPATCHER2, "Method getRequestDispatcher(String): Returns null if the specified path does not begin with \"/\"");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREQUESTDISPATCHER3, "Method getRequestDispatcher(String): Returns null if any other error occurs");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETNAMEDDISPATCHER1, "Method getNamedDispatcher(String): Returns a PortletRequestDispatcher for the specified servlet name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETNAMEDDISPATCHER2, "Method getNamedDispatcher(String): Returns null if an error occurs");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEASSTREAM1, "Method getResourceAsStream(String): Returns a java.io.InputStream for the resource at the specified path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEASSTREAM2, "Method getResourceAsStream(String): Protected resources can be accessed by prefixing the path with \"/WEB-INF/\"");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEASSTREAM3, "Method getResourceAsStream(String): Returns null if no resource exists at the specified path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMAJORVERSION, "Method getMajorVersion(): Returns the major version of the portlet API supported by the container ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMINORVERSION, "Method getMinorVersion(): Returns the minor version of the portlet API supported by the container");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE1, "Method getMimeType(String): Returns a String containing the MIME type of the specified file name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE2, "Method getMimeType(String): Returns \"text/html\" for an HTML file with the approriate &lt;mime-mapping&gt; element in web.xml ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE3, "Method getMimeType(String): Returns \"image/gif\" for an image file with the approriate &lt;mime-mapping&gt; element in web.xml");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE4, "Method getMimeType(String): Returns null if the MIME type cannot be determined");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETMIMETYPE5, "Method getMimeType(String): Returns null if the file does not exist");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREALPATH1, "Method getRealPath(String): Returns a String containing the OS-specific real path for the given virtual path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREALPATH2, "Method getRealPath(String): Returns null if the file does not exist");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETREALPATH3, "Method getRealPath(String): Returns null if the transformation cannot be performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS1, "Method getResourcePaths(String): Returns a java.util.Set&lt;java.lang.String&gt; containing all the paths to resources within the web application longest sub-path of which matches the supplied path argument  ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS2, "Method getResourcePaths(String): A path indicating a file does not end with a slash (/)");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS3, "Method getResourcePaths(String): A path indicating a subdirectory ends with a slash (/)");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCEPATHS4, "Method getResourcePaths(String): Returns null if there are no resources in the web application of which the path begins with the supplied path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE1, "Method getResource(String): Returns a java.net.URL object that maps to the specified path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE2, "Method getResource(String): Returns null if no resource is mapped to the path");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE3, "Method getResource(String): Throws java.net.MalformedURLException if the path does not begin with a slash (/)");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETRESOURCE4, "Method getResource(String): Throws java.net.MalformedURLException if the path is malformed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTE1, "Method getAttribute(String): Returns a java.lang.Object attribute value for the specified name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTE2, "Method getAttribute(String): Returns null if there is no attribute value for the specified name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTE3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTENAMES1, "Method getAttributeNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the attribute names in the PortletContext");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETATTRIBUTENAMES2, "Method getAttributeNames(): Returns an empty Enumeration if no attributes are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETER1, "Method getInitParameter(String): Returns a java.lang.String PortletContext initialization parameter value for the specified name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETER2, "Method getInitParameter(String): Returns null if there is no inittialization parameter for the specified name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETER3, "Method getInitParameter(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETERNAMES1, "Method getInitParameterNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the InitParameter names in the PortletContext");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETINITPARAMETERNAMES2, "Method getInitParameterNames(): Returns an empty Enumeration if no InitParameters are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_LOGA, "Method log(String): Writes specified message to a portlet log file");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_LOGB, "Method log(String, Throwable): Writes specified message and stack trace to a portlet log file");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_REMOVEATTRIBUTE1, "Method removeAttribute(String): Removes the attribute with the specified nale");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_REMOVEATTRIBUTE2, "Method removeAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE1, "Method setAttribute(String, Object): Sets an attribute for the specified name in the portlet context");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE2, "Method setAttribute(String, Object): Any existing attribute for the specified name is removed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE3, "Method setAttribute(String, Object): If the specified name is null, the attribute is removed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_SETATTRIBUTE4, "Method setAttribute(String, Object): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETPORTLETCONTEXTNAME1, "Method getPortletContextName(): Returns the portlet application name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETPORTLETCONTEXTNAME2, "Method getPortletContextName(): The name is as specified in web.xml the &lt;display-name&gt; element");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETPORTLETCONTEXTNAME3, "Method getPortletContextName(): Returns null if no web.xml &lt;display-name&gt; element is defined");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETCONTAINERRUNTIMEOPTIONS1, "Method getContainerRuntimeOptions(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the available runtime option names");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETCONTEXT_RENDER_GETCONTAINERRUNTIMEOPTIONS2, "Method getContainerRuntimeOptions(): Returns an empty Enumeration if no runtime options are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY1, "Method isReadOnly(): Returns true if the preference specified by the key is defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY2, "Method isReadOnly(): Returns false if the preference specified by the key is not defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY3, "Method isReadOnly(): Returns false if the preference specified by the key is undefined");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_ISREADONLY4, "Method isReadOnly(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE1, "Method getValue(String, String): Returns the first String value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE2, "Method getValue(String, String): Returns the specified default value if there is no value for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE3, "Method getValue(String, String): Returns the specified default value if the existing value for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUE4, "Method getValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES1, "Method getValues(String, String[]): Returns the values String[] for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES2, "Method getValues(String, String[]): Returns the specified default String[] if there is no Values for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES3, "Method getValues(String, String[]): Returns the specified default String[] if the existing String[] for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETVALUES4, "Method getValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_SETVALUE4, "Method setValue(String, String): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETNAMES1, "Method getNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the available preference keys");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETNAMES2, "Method getNames(): Returns an empty Enumeration if no preference keys are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETMAP1, "Method getMap(): Returns an java.util.Map&lt;java.lang.String&gt; containing the available preferences");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_GETMAP2, "Method getMap(): Returns an empty Map if no preferences are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_RESET2, "Method reset(): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RENDER_STORE5, "Method store(): Throws IllegalStateException if store(): is called in the render method  ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY1, "Method isReadOnly(): Returns true if the preference specified by the key is defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY2, "Method isReadOnly(): Returns false if the preference specified by the key is not defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY3, "Method isReadOnly(): Returns false if the preference specified by the key is undefined");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_ISREADONLY4, "Method isReadOnly(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE1, "Method getValue(String, String): Returns the first String value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE2, "Method getValue(String, String): Returns the specified default value if there is no value for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE3, "Method getValue(String, String): Returns the specified default value if the existing value for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUE4, "Method getValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES1, "Method getValues(String, String[]): Returns the values String[] for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES2, "Method getValues(String, String[]): Returns the specified default String[] if there is no Values for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES3, "Method getValues(String, String[]): Returns the specified default String[] if the existing String[] for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETVALUES4, "Method getValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE1, "Method setValue(String, String): Sets the specified value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE2, "Method setValue(String, String): Any existing String or String[] value for the specified key is replaced");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE3, "Method setValue(String, String): The value may be set to null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE4, "Method setValue(String, String): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUE5, "Method setValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES1, "Method setValues(String, String[]): Sets the specified value array for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES2, "Method setValues(String, String[]): Any existing String or String[] Values for the specified key is replaced");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES3, "Method setValues(String, String[]): The value array may be set to null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES4, "Method setValues(String, String[]): The value array may contain null members");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES5, "Method setValues(String, String[]): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_SETVALUES6, "Method setValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETNAMES1, "Method getNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the available preference keys");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETNAMES2, "Method getNames(): Returns an empty Enumeration if no preference keys are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETMAP1, "Method getMap(): Returns an java.util.Map&lt;java.lang.String&gt; containing the available preferences");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_GETMAP2, "Method getMap(): Returns an empty Map if no preferences are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_RESET1, "Method reset(): Removes the value associated with the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_RESET2, "Method reset(): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_RESET3, "Method reset(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE1, "Method store(): Commits changes made to the preferences to the persistent store ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE2, "Method store(): If the store(): method is not called, changes made are discarded");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE3, "Method store(): If a validator is defined, it is called before the actual store is performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE4, "Method store(): If validation fails, the store is not performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE5, "Method store(): Throws IllegalStateException if store(): is called in the render method  ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_ACTION_STORE6, "Method store(): Throws ValidatorException if the validation performed by the associated validator fails ");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_ACTION_CANBECONFIGURED, "A PreferencesValidator can be configured in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_ACTION_VALIDATE1, "Method validate(PortletPreferences): The validate(PortletPreferences): method is called when the preferences are stored ");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_ACTION_VALIDATE2, "Method validate(PortletPreferences): If a ValidatorException is thrown, the preferences are not stored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY1, "Method isReadOnly(): Returns true if the preference specified by the key is defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY2, "Method isReadOnly(): Returns false if the preference specified by the key is not defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY3, "Method isReadOnly(): Returns false if the preference specified by the key is undefined");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_ISREADONLY4, "Method isReadOnly(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE1, "Method getValue(String, String): Returns the first String value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE2, "Method getValue(String, String): Returns the specified default value if there is no value for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE3, "Method getValue(String, String): Returns the specified default value if the existing value for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUE4, "Method getValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES1, "Method getValues(String, String[]): Returns the values String[] for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES2, "Method getValues(String, String[]): Returns the specified default String[] if there is no Values for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES3, "Method getValues(String, String[]): Returns the specified default String[] if the existing String[] for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETVALUES4, "Method getValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE1, "Method setValue(String, String): Sets the specified value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE2, "Method setValue(String, String): Any existing String or String[] value for the specified key is replaced");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE3, "Method setValue(String, String): The value may be set to null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE4, "Method setValue(String, String): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUE5, "Method setValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES1, "Method setValues(String, String[]): Sets the specified value array for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES2, "Method setValues(String, String[]): Any existing String or String[] Values for the specified key is replaced");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES3, "Method setValues(String, String[]): The value array may be set to null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES4, "Method setValues(String, String[]): The value array may contain null members");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES5, "Method setValues(String, String[]): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_SETVALUES6, "Method setValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETNAMES1, "Method getNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the available preference keys");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETNAMES2, "Method getNames(): Returns an empty Enumeration if no preference keys are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETMAP1, "Method getMap(): Returns an java.util.Map&lt;java.lang.String&gt; containing the available preferences");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_GETMAP2, "Method getMap(): Returns an empty Map if no preferences are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_RESET1, "Method reset(): Removes the value associated with the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_RESET2, "Method reset(): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_RESET3, "Method reset(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE1, "Method store(): Commits changes made to the preferences to the persistent store ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE2, "Method store(): If the store(): method is not called, changes made are discarded");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE3, "Method store(): If a validator is defined, it is called before the actual store is performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE4, "Method store(): If validation fails, the store is not performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE5, "Method store(): Throws IllegalStateException if store(): is called in the render method  ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_EVENT_STORE6, "Method store(): Throws ValidatorException if the validation performed by the associated validator fails ");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_EVENT_CANBECONFIGURED, "A PreferencesValidator can be configured in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_EVENT_VALIDATE1, "Method validate(PortletPreferences): The validate(PortletPreferences): method is called when the preferences are stored ");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_EVENT_VALIDATE2, "Method validate(PortletPreferences): If a ValidatorException is thrown, the preferences are not stored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY1, "Method isReadOnly(): Returns true if the preference specified by the key is defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY2, "Method isReadOnly(): Returns false if the preference specified by the key is not defined to be read-only in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY3, "Method isReadOnly(): Returns false if the preference specified by the key is undefined");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_ISREADONLY4, "Method isReadOnly(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE1, "Method getValue(String, String): Returns the first String value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE2, "Method getValue(String, String): Returns the specified default value if there is no value for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE3, "Method getValue(String, String): Returns the specified default value if the existing value for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUE4, "Method getValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES1, "Method getValues(String, String[]): Returns the values String[] for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES2, "Method getValues(String, String[]): Returns the specified default String[] if there is no Values for the specified key ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES3, "Method getValues(String, String[]): Returns the specified default String[] if the existing String[] for the specified key is null ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETVALUES4, "Method getValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE1, "Method setValue(String, String): Sets the specified value for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE2, "Method setValue(String, String): Any existing String or String[] value for the specified key is replaced");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE3, "Method setValue(String, String): The value may be set to null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE4, "Method setValue(String, String): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUE5, "Method setValue(String, String): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES1, "Method setValues(String, String[]): Sets the specified value array for the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES2, "Method setValues(String, String[]): Any existing String or String[] Values for the specified key is replaced");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES3, "Method setValues(String, String[]): The value array may be set to null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES4, "Method setValues(String, String[]): The value array may contain null members");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES5, "Method setValues(String, String[]): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_SETVALUES6, "Method setValues(String, String[]): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETNAMES1, "Method getNames(): Returns an java.util.Enumeration&lt;java.lang.String&gt; containing the available preference keys");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETNAMES2, "Method getNames(): Returns an empty Enumeration if no preference keys are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETMAP1, "Method getMap(): Returns an java.util.Map&lt;java.lang.String&gt; containing the available preferences");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_GETMAP2, "Method getMap(): Returns an empty Map if no preferences are available");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_RESET1, "Method reset(): Removes the value associated with the specified key");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_RESET2, "Method reset(): Throws ReadOnlyException if the preference cannot be modified for this request");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_RESET3, "Method reset(): Throws IllegalArgumentException if the key is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE1, "Method store(): Commits changes made to the preferences to the persistent store ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE2, "Method store(): If the store(): method is not called, changes made are discarded");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE3, "Method store(): If a validator is defined, it is called before the actual store is performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE4, "Method store(): If validation fails, the store is not performed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE5, "Method store(): Throws IllegalStateException if store(): is called in the render method  ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETPREFERENCES_RESOURCE_STORE6, "Method store(): Throws ValidatorException if the validation performed by the associated validator fails ");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_RESOURCE_CANBECONFIGURED, "A PreferencesValidator can be configured in the deployment descriptor");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_RESOURCE_VALIDATE1, "Method validate(PortletPreferences): The validate(PortletPreferences): method is called when the preferences are stored ");
      tcd.put(V2ENVIRONMENTTESTS_PREFERENCESVALIDATOR_RESOURCE_VALIDATE2, "Method validate(PortletPreferences): If a ValidatorException is thrown, the preferences are not stored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA1, "Method include(PortletRequest, PortletResponse): Includes the content of a JSP page in the response");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA2, "Method include(PortletRequest, PortletResponse): Includes the content of a HTML Page in the response");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA3, "Method include(PortletRequest, PortletResponse): The included servlet cannot change the status code. The attempt is ignored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEA4, "Method include(PortletRequest, PortletResponse): The included servlet cannot set the headers. The attempt is ignored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB1, "Method include(RenderRequest, RenderResponse): Includes the content of a JSP page in the response");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB2, "Method include(RenderRequest, RenderResponse): Includes the content of a HTML Page in the response");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB3, "Method include(RenderRequest, RenderResponse): The included servlet cannot change the status code. The attempt is ignored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_INCLUDEB4, "Method include(RenderRequest, RenderResponse): The included servlet cannot set the headers. The attempt is ignored");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD1, "Method forward(PortletRequest, PortletResponse): Can forward to a JSP page to create the response");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD2, "Method forward(PortletRequest, PortletResponse): Can forward to a HTML Page to create the response");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD3, "Method forward(PortletRequest, PortletResponse): Throws IllegalStateException if the response was already committed");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETREQUESTDISPATCHER_RENDER_FORWARD4, "Method forward(PortletRequest, PortletResponse): Throws PortletException if the forwarded servlet throws any excpetion other than IOException or a runtime exception ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_FIELDAPPLICATION_SCOPE, "Has int field APPLICATION_SCOPE with value of 0x01 ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_FIELDPORTLET_SCOPE, "Has int field PORTLET_SCOPE with value of 0x02 ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA1, "Method getAttribute(String): Returns a java.lang.Object for the specified attribute name in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA2, "Method getAttribute(String): Returns null if no attribute with the specified name exists in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEA4, "Method getAttribute(String): Throws IllegalStateException if the method is called on an invalidated session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB1, "Method getAttribute(String): Returns a java.lang.Object for the specified attribute name in the specified scope");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB2, "Method getAttribute(String): Returns null if no attribute with the specified name exists in the specified scope");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB3, "Method getAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEB4, "Method getAttribute(String): Throws IllegalStateException if the method is called on an invalidated session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESA1, "Method getAttributeNames(): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available attribute names in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESA2, "Method getAttributeNames(): Returns an empty Enumeration if there are no attributes available in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESB1, "Method getAttributeNames(int): Returns a java.util.Enumeration&lt;java.lang.String&gt; of the available attribute names in the specified scope");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTENAMESB2, "Method getAttributeNames(int): Returns an empty Enumeration if there are no attributes available in the specified scope");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETCREATIONTIME1, "Method getCreationTime(): Returns a long containing the time the session was created in milliseconds since 1/1/1970  ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETCREATIONTIME2, "Method getCreationTime(): Throws IllegalStateException if this method is called on an invalidated session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETID, "Method getId(): Returns a String containing a unique identifier for the session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETLASTACCESSEDTIME, "Method getLastAccessedTime(): Returns a long containing the last time the session was accessed in milliseconds since 1/1/1970");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETMAXINACTIVEINTERVAL, "Method getMaxInactiveInterval(): Returns the maximum time interval, in seconds, for which the portlet container keeps this session open between client accesses");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_INVALIDATE1, "Method invalidate(): Invalidates this session (all scopes): and unbinds any objects bound to it");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_INVALIDATE2, "Method invalidate(): The underlying HTTP session is also invalidated");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_ISNEW1, "Method isNew(): Returns true if the client has not yet joined the session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_ISNEW2, "Method isNew(): Returns false if the client has joined the session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA1, "Method removeAttribute(String): Removes the attribute specified by the name from the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA2, "Method removeAttribute(String): If there is no attribute by the specified name in the the PORTLET_SCOPE, this method does nothing");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA3, "Method removeAttribute(String): If an attribute was removed, the HttpSessionAttributeListener.attributeRemoved method is called on all HttpSessionAttributeListeners in the web application");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEA4, "Method removeAttribute(String): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB1, "Method removeAttribute(String, int): Removes the attribute specified by the name from the specified scope");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB2, "Method removeAttribute(String, int): If there is no attribute by the specified name in the specified scope, this method does nothing");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB3, "Method removeAttribute(String, int): If an attribute was removed, the HttpSessionAttributeListener.attributeRemoved method is called on all HttpSessionAttributeListeners in the web application");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_REMOVEATTRIBUTEB4, "Method removeAttribute(String, int): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA1, "Method setAttribute(String, Object): Stores an attribute object under the specified name in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA2, "Method setAttribute(String, Object): Replaces the attribute by the specified name if the attribute already exists");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA3, "Method setAttribute(String, Object): Removes the attribute by the specified name if the object is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA4, "Method setAttribute(String, Object): If the attribute object implements HttpSessionBindingListener, its HttpSessionBindingListener.valueBound method is called");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA5, "Method setAttribute(String, Object): If an existing attribute object implements HttpSessionBindingListener and is replaced, its HttpSessionBindingListener.valueUnbound method is called");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA6, "Method setAttribute(String, Object): If an attribute was replaced, the HttpSessionAttributeListener.attributeReplaced method is called on all HttpSessionAttributeListeners in the web application");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA7, "Method setAttribute(String, Object): If a new attribute was added, the HttpSessionAttributeListener.attributeAdded method is called on all HttpSessionAttributeListeners in the web application");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEA8, "Method setAttribute(String, Object): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB1, "Method setAttribute(String, Object, int): Stores an attribute object under the specified name in the specified scope");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB2, "Method setAttribute(String, Object, int): Replaces the attribute by the specified name if the attribute already exists");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB3, "Method setAttribute(String, Object, int): Removes the attribute by the specified name if the object is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB4, "Method setAttribute(String, Object, int): If the attribute object implements HttpSessionBindingListener, its HttpSessionBindingListener.valueBound method is called");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB5, "Method setAttribute(String, Object, int): If an existing attribute object implements HttpSessionBindingListener and is replaced, its HttpSessionBindingListener.valueUnbound method is called");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB6, "Method setAttribute(String, Object, int): If an attribute was replaced, the HttpSessionAttributeListener.attributeReplaced method is called on all HttpSessionAttributeListeners in the web application");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB7, "Method setAttribute(String, Object, int): If a new attribute was added, the HttpSessionAttributeListener.attributeAdded method is called on all HttpSessionAttributeListeners in the web application");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETATTRIBUTEB8, "Method setAttribute(String, Object, int): Throws IllegalArgumentException if the name is null");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETMAXINACTIVEINTERVAL1, "Method setMaxInactiveInterval(int): Specifies the time in seconds between client requests before the portlet contaner invalidates the session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_SETMAXINACTIVEINTERVAL2, "Method setMaxInactiveInterval(int): If the specified time is negative, the session should never timeout");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETPORTLETCONTEXT, "Method getPortletContext(): Returns the PortletContext object for this session");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPA1, "Method getAttributeMap(): Returns an java.util.Map&lt;java.lang.String,java.lang.Object&gt; object for the attributes available in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPA2, "Method getAttributeMap(): Returns an empty map if no attributes exist in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPB1, "Method getAttributeMap(int): Returns an java.util.Map&lt;java.lang.String,java.lang.Object&gt; object for the attributes available in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSION_RENDER_GETATTRIBUTEMAPB2, "Method getAttributeMap(int): Returns an empty map if no attributes exist in the PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODEATTRIBUTENAME1, "Method decodeAttributeName(String): Returns a String containing the decoded name of the attribute if the input name is an encoded name in PORTLET_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODEATTRIBUTENAME2, "Method decodeAttributeName(String): Returns a String containing the input name unchanged if the input name is in APPLICATION_SCOPE ");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODESCOPE1, "Method decodeScope(String): Returns the decoded attribute scope for the input encoded attribute name");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODESCOPE2, "Method decodeScope(String): Returns PortletSession.APPLICATION_SCOPE if the attribute name is in APPLICATION_SCOPE");
      tcd.put(V2ENVIRONMENTTESTS_PORTLETSESSIONUTIL_RENDER_DECODESCOPE3, "Method decodeScope(String): Returns PortletSession.PORTLET_SCOPE if the attribute name is in PORTLET_SCOPE");

   }

   /**
    * Constructor.
    * 
    * Passes the static test case names - details map to the superclass
    * 
    * Note that the backing map is static and not threadsafe. Operations
    * that change the map such as put, remove, etc., should not be used
    * in portlets.
    */
   public JSR286ApiTestCaseDetails() {
     super(tcd); 
   }

}
