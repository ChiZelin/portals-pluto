PARMS outputPath=c:\temp\gen
//
// The tool is used with the command: java -jar TestFileGenerator.jar <filespec>
// Example:                           java -jar target\TestFileGenerator.jar ModuleAssertions.csv
//
// The format of this file is as follows:
// * lines beginning with '//', blank lines, and the header line beginning with
//   'Class / Section' are ignored.
// * If the first line begins with 'PARMS', the rest of the line contains parameters for the run.
//   The output path can be specified as parameter.
// * A line containing a single word followed by ';;;;' starts a new module.
// * The tool can generate multiple modules from one input file.
// * The class name is generated from the module name and the contents of the first and 
//   second columns. When this combination changes, you get a new portlet.
//
// The tool recognizes duplicate test case names. You should make sure that there are none.
//
Class / Section;Keywords;Name;Testable;Description
PortletHubTests;;;;
SPEC_23;JS;register1;TRUE;The portlet hub provides a global namespace var portlet of type object
SPEC_23;JS;register2;TRUE;The global portlet object register property is type function
SPEC_23;JS;register3;TRUE;The portlet hub register function throws an IllegalArgumentException if no portlet ID argument is provided
SPEC_23;JS;register4;TRUE;The portlet hub register function throws an IllegalArgumentException if too many (>1) arguments are provided
SPEC_23;JS;register5;TRUE;The portlet hub register function throws an IllegalArgumentException if the portlet ID is not a string
SPEC_23;JS;register6;TRUE;The portlet hub register function throws an IllegalArgumentException if the portlet ID is undefined
SPEC_23;JS;register7;TRUE;The portlet hub register function throws an IllegalArgumentException if the portlet ID is null
SPEC_23;JS;register8;TRUE;The portlet hub register function The promise fails if the portlet ID is not defined for the portlet hub
SPEC_23;JS;register9;TRUE;The portlet hub register function returns a PortletInit object when provided with a valid portlet ID
SPEC_23;JS;PortletInit1;TRUE;The PortletInit object portletModes property is an array
SPEC_23;JS;PortletInit2;TRUE;The PortletInit object windowStates property is an array
SPEC_23;JS;PortletInit3;TRUE;The PortletInit object action property is type function
SPEC_23;JS;PortletInit4;TRUE;The PortletInit object addEventListener property is type function
SPEC_23;JS;PortletInit5;TRUE;The PortletInit object createResourceUrl property is type function
SPEC_23;JS;PortletInit6;TRUE;The PortletInit object dispatchClientEvent property is type function
SPEC_23;JS;PortletInit7;TRUE;The PortletInit object isInProgress property is type function
SPEC_23;JS;PortletInit8;TRUE;The PortletInit object newParameters property is type function
SPEC_23;JS;PortletInit9;TRUE;The PortletInit object newState property is type function
SPEC_23;JS;PortletInitA;TRUE;The PortletInit object removeEventListener property is type function
SPEC_23;JS;PortletInitB;TRUE;The PortletInit object setRenderState property is type function
SPEC_23;JS;PortletInitC;TRUE;The PortletInit object startPartialAction property is type function
SPEC_23;JS;PortletInitD;TRUE;The PortletInit object constants property is type object
SPEC_23;JS;Constants1;TRUE;The Constants object VIEW property is type string and equal to 'view'
SPEC_23;JS;Constants2;TRUE;The Constants object EDIT property is type string and equal to 'edit'
SPEC_23;JS;Constants3;TRUE;The Constants object HELP property is type string and equal to 'help'
SPEC_23;JS;Constants4;TRUE;The Constants object NORMAL property is type string and equal to 'normal'
SPEC_23;JS;Constants5;TRUE;The Constants object MINIMIZED property is type string and equal to 'minimized'
SPEC_23;JS;Constants6;TRUE;The Constants object MAXIMIZED property is type string and equal to 'maximized'
SPEC_23;JS;Constants7;TRUE;The Constants object FULL property is type string and equal to 'cacheLevelFull'
SPEC_23;JS;Constants8;TRUE;The Constants object PORTLET property is type string and equal to 'cacheLevelPortlet'
SPEC_23;JS;Constants9;TRUE;The Constants object PAGE property is type string and equal to 'cacheLevelPage'

SPEC_23;JS State;Parameters1;TRUE;The PortletInit object newParameters function returns a Parameters object
SPEC_23;JS State;Parameters2;TRUE;The PortletInit object newParameters function returns a Parameters object containing no parameters
SPEC_23;JS State;Parameters3;TRUE;The PortletInit object newParameters function returns a Parameters object containing cloned values if passed a parameters object
SPEC_23;JS State;State1;TRUE;The PortletInit object newState function returns a State object 
SPEC_23;JS State;State2;TRUE;The PortletInit object newState function returns a State object containing no parameters if not passed a State object
SPEC_23;JS State;State3;TRUE;The PortletInit object newState function returns a State object containing cloned values if passed a State object
SPEC_23;JS State;clone;TRUE;The RenderState object clone property is type function
SPEC_23;JS State;setPortletMode;TRUE;The RenderState object setPortletMode property is type function
SPEC_23;JS State;getPortletMode;TRUE;The RenderState object getPortletMode property is type function
SPEC_23;JS State;setWindowState;TRUE;The RenderState object setWindowState property is type function
SPEC_23;JS State;getWindowState;TRUE;The RenderState object getWindowState property is type function
SPEC_23;JS State;setValue;TRUE;The RenderState object setValue property is type function
SPEC_23;JS State;getValue;TRUE;The RenderState object getValue property is type function
SPEC_23;JS State;getValues;TRUE;The RenderState object getValues property is type function
SPEC_23;JS State;remove;TRUE;The RenderState object remove property is type function
SPEC_23;JS State;parameters;TRUE;The RenderState object parameters property is type object
SPEC_23;JS State;portletMode;TRUE;The RenderState object portletMode property is type string
SPEC_23;JS State;windowState;TRUE;The RenderState object windowState property is type string
SPEC_23;JS State;clone1;TRUE;The RenderState object clone function returns a new object instance
SPEC_23;JS State;clone2;TRUE;The RenderState object clone function returns a RenderState object with the required properties
SPEC_23;JS State;clone3;TRUE;The RenderState object clone function returns a RenderState object with the same portlet mode
SPEC_23;JS State;clone4;TRUE;The RenderState object clone function returns a RenderState object with the same window state
SPEC_23;JS State;clone5;TRUE;The RenderState object clone function returns a RenderState object with no parameters if the original had no parameters
SPEC_23;JS State;clone6;TRUE;The RenderState object clone function returns a RenderState object with the same single-value parameters if the original had single-value parameters
SPEC_23;JS State;clone7;TRUE;The RenderState object clone function returns a RenderState object with the same multi-value parameters if the original had multi-value parameters
SPEC_23;JS State;setPortletMode1;TRUE;The RenderState object setPortletMode function throws a TypeError if the argument is not a string
SPEC_23;JS State;setPortletMode2;TRUE;The RenderState object setPortletMode function sets the portlet mode
SPEC_23;JS State;getPortletMode1;TRUE;The RenderState object getPortletMode function returns the portlet mode
SPEC_23;JS State;setWindowState1;TRUE;The RenderState object setWindowState function throws a TypeError if the argument is not a string
SPEC_23;JS State;setWindowState2;TRUE;The RenderState object setWindowState function sets the window state
SPEC_23;JS State;getWindowState1;TRUE;The RenderState object getWindowState function returns the window state
SPEC_23;JS State;setValue1;TRUE;The RenderState object setValue function throws a TypeError if the parameter name is not a string
SPEC_23;JS State;setValue2;TRUE;The RenderState object setValue function throws a TypeError if the parameter value is not a string or array
SPEC_23;JS State;setValue3;TRUE;The RenderState object setValue function can set a single-valued parameter
SPEC_23;JS State;setValue4;TRUE;The RenderState object setValue function can set a multi-valued parameter
SPEC_23;JS State;setValue5;TRUE;The RenderState object setValue function can set a parameter to null
SPEC_23;JS State;getValue1;TRUE;The RenderState object getValue function throws a TypeError if the parameter name is not a string
SPEC_23;JS State;getValue2;TRUE;The RenderState object getValue function returns a single-valued parameter
SPEC_23;JS State;getValue3;TRUE;The RenderState object getValue function returns null if the parameter was set to null
SPEC_23;JS State;getValue4;TRUE;The RenderState object getValue function returns the first value of a multi-valued parameter
SPEC_23;JS State;getValue5;TRUE;The RenderState object getValue function returns undefined if the parameter name does not exist and there is no default
SPEC_23;JS State;getValue6;TRUE;The RenderState object getValue function returns the default if the parameter name does not exist and a default is provided
SPEC_23;JS State;getValues1;TRUE;The RenderState object getValues function throws a TypeError if the parameter name is not a string
SPEC_23;JS State;getValues2;TRUE;The RenderState object getValues function returns an array of strings for a multi-valued parameter
SPEC_23;JS State;getValues3;TRUE;The RenderState object getValues function returns undefined if the parameter name does not exist and there is no default
SPEC_23;JS State;getValues4;TRUE;The RenderState object getValues function returns the default if the parameter name does not exist and a default is provided
SPEC_23;JS State;remove1;TRUE;The RenderState object remove function throws a TypeError if the parameter name is not a string
SPEC_23;JS State;remove2;TRUE;The RenderState object remove function removes an existing parameter

SPEC_23;JS Exc;addEventListener1;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if no argument is provided
SPEC_23;JS Exc;addEventListener2;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if 1 argument is provided
SPEC_23;JS Exc;addEventListener3;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if too many (>2) arguments are provided
SPEC_23;JS Exc;addEventListener4;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if the type argument is not a string
SPEC_23;JS Exc;addEventListener5;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if the function argument is not a function
SPEC_23;JS Exc;addEventListener6;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if the type is null
SPEC_23;JS Exc;addEventListener7;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if the function is null
SPEC_23;JS Exc;addEventListener8;TRUE;The PortletInit object addEventListener function throws an IllegalArgumentException if the type begins with "portlet." but is neither "portlet.onStateChange" or "portlet.onError"
SPEC_23;JS Exc;removeEventListener1;TRUE;The PortletInit object removeEventListener function throws an IllegalArgumentException if no argument is provided
SPEC_23;JS Exc;removeEventListener2;TRUE;The PortletInit object removeEventListener function throws an IllegalArgumentException if too many (>1) arguments are provided
SPEC_23;JS Exc;removeEventListener3;TRUE;The PortletInit object removeEventListener function throws an IllegalArgumentException if the handle is null
SPEC_23;JS Exc;removeEventListener4;TRUE;The PortletInit object removeEventListener function throws an IllegalArgumentException if the handle is undefined
SPEC_23;JS Exc;removeEventListener5;TRUE;The PortletInit object removeEventListener function throws an IllegalArgumentException if the handle has an invalid value
SPEC_23;JS Exc;createResourceUrl1;TRUE;The PortletInit object createResourceUrl function throws an IllegalArgumentException if too many (>3) arguments are provided
SPEC_23;JS Exc;createResourceUrl2;TRUE;The PortletInit object createResourceUrl function throws an IllegalArgumentException if resource parameters is invalid
SPEC_23;JS Exc;createResourceUrl3;TRUE;The PortletInit object createResourceUrl function throws an IllegalArgumentException if the cacheability argument is invalid
SPEC_23;JS Exc;setRenderState1;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if no argument is provided
SPEC_23;JS Exc;setRenderState2;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if too many (>1) arguments are provided
SPEC_23;JS Exc;setRenderState3;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if the argument is not an object
SPEC_23;JS Exc;setRenderState4;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if the single argument is null
SPEC_23;JS Exc;setRenderState5;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if the argument does not have a "parameters" property
SPEC_23;JS Exc;setRenderState6;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if the argument does not have a "windowState" property
SPEC_23;JS Exc;setRenderState7;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if the argument does not have a "portletMode" property
SPEC_23;JS Exc;setRenderState9;TRUE;The PortletInit object setRenderState function throws an NotInitializedException if no onStateChange listener is registered
SPEC_23;JS Exc;setRenderStateA;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if "windowState" has an invalid value
SPEC_23;JS Exc;setRenderStateB;TRUE;The PortletInit object setRenderState function throws an IllegalArgumentException if "portletMode" has an invalid value
SPEC_23;JS Exc;action1;TRUE;The PortletInit object action function throws an IllegalArgumentException if too many (>2) arguments are provided
SPEC_23;JS Exc;action2;TRUE;The PortletInit object action function throws an IllegalArgumentException if a single argument is null
SPEC_23;JS Exc;action3;TRUE;The PortletInit object action function throws an IllegalArgumentException if the element argument is null
SPEC_23;JS Exc;action4;TRUE;The PortletInit object action function throws an IllegalArgumentException if action parameters is null
SPEC_23;JS Exc;action5;TRUE;The PortletInit object action function throws an IllegalArgumentException if action parameters is invalid
SPEC_23;JS Exc;action6;TRUE;The PortletInit object action function throws an IllegalArgumentException if the element argument is invalid
SPEC_23;JS Exc;action7;TRUE;The PortletInit object action function throws an IllegalArgumentException if there are 2 element arguments
SPEC_23;JS Exc;action8;TRUE;The PortletInit object action function throws an IllegalArgumentException if there are 2 action parameters arguments
SPEC_23;JS Exc;actionA;TRUE;The PortletInit object action function throws an NotInitializedException if no onStateChange listener is registered.
SPEC_23;JS Exc;startPartialAction1;TRUE;The PortletInit object startPartialAction function throws an IllegalArgumentException if too many (>1) arguments are provided
SPEC_23;JS Exc;startPartialAction2;TRUE;The PortletInit object startPartialAction function throws an IllegalArgumentException if the single argument is null
SPEC_23;JS Exc;startPartialAction3;TRUE;The PortletInit object startPartialAction function throws an IllegalArgumentException if action parameters is invalid
SPEC_23;JS Exc;startPartialAction4;TRUE;The PortletInit object startPartialAction function throws an NotInitializedException if no onStateChange listener is registered.


// -------------------------------------------------------
//  J A S M I N E   S P E C S
// -------------------------------------------------------
// [INFO] 
// 
// The portlet hub provides the ability to add and remove event listeners.
//   initializes a portlet hub instance for portlet A
//   initializes a portlet hub instance for portlet B
//   The portlet hub addEventListener function: 
//     is present in the register return object and is a function
//     does not throw an exception if both parameters are valid
//     returns a handle to the event handler (an object) when the parameters are valid
//     allows a listener for event type "portlet.onStateChange" to be added.
//     allows a listener for event type "portlet.onError" to be added.
//   The portlet hub removeEventListener function: 
//     is present in the register return object and is a function
//     allows a previously added user event listener to be removed
//     allows a previously added portlet.onStateChange event listener to be removed
//     allows a previously added portlet.onError event listener to be removed
//     throws an IllegalArgumentException if the user event handler is removed twice
//     throws an IllegalArgumentException if the onStateChange event handler is removed twice
//     throws an IllegalArgumentException if the onError event handler is removed twice
//   Without render data, the portlet client onStateChange function: 
//     does not call the portlet.onStateChange listener during the addEventListener call
//     is called asynchronously after an onStateChange handler is registered
//     is passed a type parameter with value "portlet.onStateChange"
//     is passed a RenderState parameter that is an object
//     is not passed a RenderData object
//     is passed a RenderState parameter that has 3 properties
//     is passed a RenderState object with a "parameters" property
//     is passed a RenderState object with a "portletMode" property
//     is passed a RenderState object with a "windowState" property
//     its RenderState "parameters" property is an object
//     its RenderState has 2 parameters
//     its RenderState "windowState" property is a string
//     its RenderState "portletMode" property is a string
//     its RenderState has windowState=NORMAL
//     its RenderState has portletMode=VIEW
//     its RenderState parameter is not identical to the test state object"
//     its RenderState parameter equals the test state object"
//   With render data, the portlet client onStateChange function: 
//     does not call the portlet.onStateChange listener during the addEventListener call
//     is called asynchronously after an onStateChange handler is registered
//     is passed a type parameter with value "portlet.onStateChange"
//     is passed a RenderState parameter that is an object
//     is passed a RenderState parameter that has 3 properties
//     is passed a RenderState object with a "parameters" property
//     is passed a RenderState object with a "portletMode" property
//     is passed a RenderState object with a "windowState" property
//     its RenderState parameter is not identical to the test state object"
//     its RenderState parameter equals the test state object"
//     is passed a RenderData object
//     is passed a RenderData parameter that has 2 properties
//     is passed a RenderData object with a "renderData" property
//     is passed a RenderData object with a "mimeType" property
//     is passed a RenderData object with a "renderData" property of type string
//     is passed a RenderData object with a "mimeType" property of type string
//     its RenderData parameter equals the test render data object"
// 
// The portlet hub allows the portlet client to create a resource URL.
//   The portlet hub is initialized for the tests: 
//     initializes a portlet hub instance for portlet A
//     initializes a portlet hub instance for portlet B
//     initializes a portlet hub instance for portlet C
//     initializes a portlet hub instance for portlet D
//   The portlet hub createResourceUrl function: 
//     is present in the register return object and is a function
//     does not throw if both arguments are valid
//     returns a string if both arguments are valid
//     Throws an exception if cacheability is specified first
//     returns a string if only cacheability present
//     returns a string if only resource parameters present
//     returns a string if no parameters present
//     returns a URL indicating the initiating portlet A
//     returns a URL indicating a different initiating portlet B
//     returns a resource URL
//     returns a URL with cacheability set to "cacheLevelPage"
//     returns a URL with cacheability set to "cacheLevelPortlet"
//     returns a URL with cacheability set to "cacheLevelFull"
//     returns a URL with the resource parameters set as expected
//     returns a URL with multivalued resource parameters set as expected
//     returns a URL with multivalued resource parameters containing null set as expected
//     returns a URL with null resource parameter set as expected
//     returns a URL without resource parameters when none are added
//   The portlet hub createResourceUrl function takes state into account: 
//     returns a URL with the render state set when cacheability = cacheLevelPage
//     returns a URL with the render state set when cacheability = cacheLevelPortlet
//     returns a URL with no render state set when cacheability = cacheLevelFull
//     returns a URL containing state of different portlet when cacheability = cacheLevelPage
//     returns a URL not containing state of different portlet when cacheability = cacheLevelPortlet
// 
// The portlet hub allows the portlet client to set its state.
//   The portlet hub is initialized for the tests: 
//     initializes a portlet hub instance for portlet A
//     initializes a portlet hub instance for portlet B
//     initializes a portlet hub instance for portlet C
//     initializes a portlet hub instance for portlet D
//   The portlet hub setRenderState function: 
//     is present in the register return object and is a function
//     does not throw an Exception if the argument is correct
//     causes the onStateChange listener to be called
//     allows the portlet mode to be set to "EDIT"
//     allows the portlet mode to be set to "VIEW"
//     allows the window state to be set to "MAXIMIZED"
//     allows the window state to be set to "NORMAL"
//     allows a new parameter "NewParm" to be set to "NewVal"
//     allows parameter "NewParm" to be set to ["NewVal1", "NewVal2"]
//     allows a new parameter "NewParm" to be deleted
//     allows all parameters to be deleted
//     allows several parameters to be set
//     allows setting the state back to the original test data
//   The portlet hub setRenderState function handles public render parameters: 
//     throws an AccessDeniedException if called before previous set render state completes
//     informs the initiating portlet (B) when public render parameter is set
//     informs the other affected portlet (C) when public render parameter is set
//     does not inform unaffected portlet (D) when public render parameter is set
//     does not update private parameter in unaffected portlet (D) with same name as public parameter
//     does not update PRP when private parameter with same name as PRP is changed in different portlet
//     allows changing multiple PRPs and having affected portlets be notified
//     allows a PRP to be deleted, and it is deleted for all affected portlets
//     allows a deleted PRP to be added again
//     informs only affected portlets when a PRP is deleted
//     allows a deleted PRP to be added again through a different portlet
//     allows deleting all parameters on a portlet with PRPs. All affected portlets are notified
//     allows adding back multiple previously deleted PRPs and having affected portlets be notified
//     allows setting the state back to the original test data
// 
// The portlet hub allows the portlet client to execute a portlet action
//   The portlet hub is initialized for the tests: 
//     initializes a portlet hub instance for portlet A
//     initializes a portlet hub instance for portlet B
//     initializes a portlet hub instance for portlet C
//     initializes a portlet hub instance for portlet D
//   The portlet hub action function: 
//     is present in the register return object and is a function
//     does not throw if both arguments are valid
//     causes the onStateChange listener to be called and state is as expected
//     allows a resource URL to be created containing the render state
//   The portlet hub actions affect multiple portlets: 
//     throws an AccessDeniedException if called before previous action completes
//     allows actions that update the state of 2 portlets. other portlets are not updated
//     allows actions that update the state of several portlets. The state of each is as expected.
// 
// The portlet hub allows the portlet client to initiate a partial action
//   The portlet hub is initialized for the tests: 
//     initializes a portlet hub instance for portlet A
//     initializes a portlet hub instance for portlet B
//     initializes a portlet hub instance for portlet C
//     initializes a portlet hub instance for portlet D
//   The portlet hub startPartialAction function: 
//     is present in the register return object and is a function
//     does not throw if the argument is valid
//     returns an object
//     return object contains setPageState function
//     return object setPageState function throws an exception if called without a parameter
//     return object setPageState function throws an exception if called with invalid type
//     onError event is fired if the setPageState function is called with invalid update string
//     return object setPageState function does not throw if parameter is correct
//     return object setPageState function causes the onStateChange listener to be called and state is as expected
//     throws an AccessDeniedException if called twice
//   The portlet hub partial action URLs are OK: 
//     causes the onStateChange listener to be called and state is as expected
//     return object setPageState URL indicates the initiating portlet A
//     return object setPageState URL indicates a different initiating portlet B
//     returns a partial action URL
//     return object setPageState URL has the action parameters set as expected
//     return object setPageState URL has multivalued action parameters set as expected
//     return object setPageState URL has multivalued action parameters containing null set as expected
//     return object setPageState URL has null action parameter set as expected
//     return object setPageState URL has no action parameters when none are added
//     allows a resource URL to be created containing the render state
//   The portlet hub startPartialAction & setPageState functions: 
//     allows actions that update the state of 2 portlets. other portlets are not updated
//     allows actions that update the state of several portlets. The state of each is as expected.
//     Blocks the startPartialAction method for a different portlet until setPageState is called
//     Blocks the action method for a different portlet until setPageState is called
//     Blocks the setRenderState method for a different portlet until setPageState is called


